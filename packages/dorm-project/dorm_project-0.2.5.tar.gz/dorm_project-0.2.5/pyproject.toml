[project]
name = "dorm-project"
version = "0.2.5"
description = "dorm is a minimal Django wrapper that lets you use its ORM independently, without the full framework."
readme = "README.md"
authors = [
    { name = "Harsh Bhikadia", email = "harsh@bhikadia.com" }
]
requires-python = ">=3.10"
dependencies = [
    "django>=5.0.0,<6.0.0",
]
license = "MIT"
keywords = [
    "django",
    "django orm",
    "orm",
]

[project.urls]
"Source code" = "https://github.com/daadu/dorm"

[project.scripts]
dorm = "dorm:_cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/dorm"]

[tool.uv.workspace]
members = ["examples/basic"]

[tool.ruff]
line-length = 120
show-fixes = true

[tool.ruff.lint]
extend-select = ["C4", "SIM", "TCH"]
extend-ignore = [
    # Skip over usage of simplification at the cost of readability
    # :: Return the negated condition directly
    "SIM103",
    # :: Use a single `with` statement with multiple contexts instead of nested `with` statements
    "SIM117",
    # :: Use `dict.get("key", default)` instead of an `if` block
    # - doesn't work efficiently when `default` is a lazy loaded, as it gets it egerly
    "SIM401",
]

[tool.ruff.format]
quote-style = "preserve"