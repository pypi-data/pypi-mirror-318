# The preference build system would have been flit, but setuptools had to be
# used to support `pip install git+http...` within Databricks. When trying
# to parse the version using flit, it needs to import the full package
# and some dependencies might be missing in the virtual environment.
# Setuptools allow to explicitly set the location of the version without
# having to import the package.
[build-system]
requires = [
#    "flit_core >=3.2,<4",
    "setuptools",
    "setuptools-scm",
]
#build-backend = "flit_core.buildapi"
build-backend = "setuptools.build_meta"

[project]
name = "planck"
authors = [
    {name = "Olivier Soucy", email = "olivier.soucy@okube.ai"},
]
description = "Physical constants and unit conversion."
readme = "README.md"
requires-python = ">=3.9"
keywords = ["one", "two"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
#    "Framework :: Pydantic :: 2",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ["version"]
dependencies = [
]

[project.optional-dependencies]
numpy = [
    "numpy"
]
dev = [
    "black",
#    "flit",
    "mkdocs",
    "mkdocstrings[python]",
    "mkdocs-material",
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-examples",
#    "tox"
]

[project.urls]
"Homepage" = "https://www.okube.ai/planck/"
"Bug Tracker" = "https://github.com/okube-ai/planck/issues"

[tool.setuptools.packages.find]
include = ["planck*"]

[tool.setuptools.dynamic]
version = {attr = "planck._version.VERSION"}

[tool.ruff]
#line-length = 120
#extend-select = ['Q', 'RUF100', 'C90', 'UP', 'I', 'D', 'T']
extend-ignore = []
#flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
#mccabe = { max-complexity = 14 }
#isort = { known-first-party = ['pydantic', 'tests'] }
target-version = "py39"
#extend-exclude = ['pydantic/v1', 'tests/mypy/outputs']
builtins = []

[tool.ruff.pydocstyle]
convention = "numpy"