"use strict";void 0===window.$&&(window.$=MyAMS.$);const GIS={L:null,API_ENDPOINT:"/api/gis/rest",WGS_SRID:4326,_layersControlAddItem:function(e){const t=$("<div></div>").addClass("inline-group my-2"),a=$("<label></label>").addClass(e.overlay?"checkbox":"radio"),n=$("<i></i>"),s=this._map.hasLayer(e.layer);let o,i;e.overlay?((o=document.createElement("input")).type="checkbox",o.className="leaflet-control-layers-selector",o.defaultChecked=s):o=this._createRadioElement("leaflet-base-layers",s),this._layerControlInputs.push(o),o.layerId=L.stamp(e.layer),$(o).addClass(e.overlay?"checkbox":"radio"),GIS.L.DomEvent.on(o,"click",this._onInputClick,this),i=$("<span></span>").text(` ${e.name}`),a.append(o),a.append(n),a.append(i),t.append(a);const l=e.overlay?this._overlaysList:this._baseLayersList;return $(l).addClass("ams-form").append(t),t},init:(e,t,a)=>new Promise((n,s)=>{MyAMS.ajax.check([window.L],[`/--static--/pyams_gis/js/leaflet-1.9.4${MyAMS.env.extext}.js`]).then(s=>{const o=[];s&&(GIS.L=window.L,GIS.L.Control.Layers.prototype._addItem=GIS._layersControlAddItem,o.push(MyAMS.core.getScript(`/--static--/pyams_gis/js/leaflet-gesture-handling${MyAMS.env.extext}.js`)),o.push(MyAMS.core.getScript(`/--static--/pyams_gis/js/Control.FullScreen${MyAMS.env.extext}.js`)),o.push(MyAMS.core.getCSS(`/--static--/pyams_gis/css/leaflet-1.9.4${MyAMS.env.extext}.css`,"leaflet")),o.push(MyAMS.core.getCSS(`/--static--/pyams_gis/css/leaflet-gesture-handling${MyAMS.env.extext}.css`,"leaflet-gesture-handling")),o.push(MyAMS.core.getCSS(`/--static--/pyams_gis/css/Control.FullScreen${MyAMS.env.extext}.css`,"leaflet-fullscreen"))),$.when.apply($,o).then(()=>{const s=(e,n)=>new Promise((s,o)=>{const i=e.data();let l={preferCanvas:i.mapLeafletPreferCanvas||!1,attributionControl:void 0===i.mapLeafletAttributionControl?n.attributionControl:i.mapLeafletAttributionControl,zoomControl:void 0===i.mapLeafletZoomControl?n.zoomControl:i.mapLeafletZoomControl,fullscreenControl:void 0===i.mapLeafletFullscreen?n.fullscreenControl&&{pseudoFullscreen:!0}||null:i.mapLeafletFullscreen,crs:i.mapLeafletCrs||MyAMS.core.getObject(n.crs)||GIS.L.CRS.EPSG3857,center:i.mapLeafletCenter||n.center,zoom:i.mapLeafletZoom||n.zoom,gestureHandling:void 0===i.mapLeafletWheelZoom?!n.scrollWheelZoom:i.mapLeafletWheelZoom,keyboard:void 0===i.mapLeafletKeyboard?n.keyboard&&!L.Browser.mobile:i.amsLeafletKeyboard};l=$.extend({},l,t),e.trigger("map.init",[e,l,n]);const r=L.map(e.attr("id"),l),c=[],d={},p={};if(n.layers)for(const t of n.layers)e.trigger("map.layer.init",[e,t]),c.push(GIS.getLayer(e,r,t));else c.push(L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{name:"osm",title:"OpenStreetMap",maxZoom:19,attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}));$.when.apply($,c).then((...t)=>{for(const[e,a]of Object.entries(t))n.layers?(n.layers[e].isVisible&&a.addTo(r),n.layers[e].isOverlay?p[n.layers[e].title]=a:d[n.layers[e].title]=a):a.addTo(r);n.zoomControl&&!0!==i.mapLeafletHideZoomControl&&L.control.scale().addTo(r),n.layerControl&&L.control.layers(d,p).addTo(r),n.center?r.setView(new L.LatLng(n.center.lat,n.center.lon),n.zoom||13):n.bounds&&r.fitBounds(n.bounds),e.data("leafmap",r),e.data("leafmap.config",n),e.data("leafmap.layers",t.reduce((e,t)=>({...e,[t.options.name]:t}),{})),e.trigger("map.finishing",[e,r,n]),a&&a(r,n),e.trigger("map.finished",[e,r,n]),s(r)})}),o=$.map(e,e=>new Promise((t,a)=>{const n=$(e),o=n.data(),i=o.mapConfiguration;i?s(n,i).then(e=>{t({leafmap:e,config:i})}):MyAMS.ajax.post(o.mapConfigurationUrl||"get-map-configuration.json",{}).then(e=>{s(n,e).then(a=>{t({leafmap:a,config:e})})})}));$.when.apply($,o).then(e=>{n(e)})})})}),modalShown:e=>{const t=$(".map",e.currentTarget).data("leafmap");t&&t.invalidateSize()},getLayer:(e,t,a)=>new Promise((n,s)=>{const o=MyAMS.core.getObject(a.factory);if(void 0!==o){delete a.factory;const s=[];if(a.dependsOn){for(const e in a.dependsOn)a.dependsOn.hasOwnProperty(e)&&void 0===MyAMS.core.getObject(e)&&s.push(MyAMS.core.getScript(a.dependsOn[e]));delete a.dependsOn}$.when.apply($,s).then(()=>{n(o(e,t,a))})}}),factory:{GeoJSON:(e,t,a)=>{const n=a.url;delete a.url;const s=L.geoJSON(null,a);return e.on("map.finished",(e,t,o,i)=>{$.get(n,e=>{s.addData(e.geometry,{style:a.style}),i.fitLayer===a.name&&o.fitBounds(s.getBounds())})}),s},TileLayer:(e,t,a)=>{const n=a.url;return delete a.url,L.tileLayer(n,a)},WMS:(e,t,a)=>{const n=a.url;return delete a.url,L.tileLayer.wms(n,a)},Geoportal:{WMS:(e,t,a)=>(MyAMS.core.getCSS(`/--static--/pyams_gis/css/GpPluginLeaflet${MyAMS.env.extext}.css`,"geoportal"),L.geoportalLayer.WMS(a))},ESRI:{Feature:(e,t,a)=>L.esri.featureLayer(a)},Google:(e,t,a)=>{const n=a.apiKey;if(delete a.apiKey,void 0===MyAMS.core.getObject("window.google.maps")){const e=MyAMS.core.getScript(`https://maps.googleapis.com/maps/api/js?key=${n}`);$.when.apply($,[e])}return L.gridLayer.googleMutant(a)}},call:(e,t)=>new Promise((a,n)=>{MyAMS.require("ajax").then(()=>{MyAMS.ajax.post(`${window.location.origin}${GIS.API_ENDPOINT}/${e}`,t,{contentType:"application/json; charset=utf-8"}).then(a,n)})}),markers:{init:(e,t)=>new Promise((t,a)=>{MyAMS.ajax.check([L.MarkerClusterGroup],[`/--static--/pyams_gis/js/leaflet.markercluster${MyAMS.env.extext}.js`]).then(t=>{const a=[];t&&a.push(MyAMS.core.getCSS(`/--static--/pyams_gis/css/MarkerCluster${MyAMS.env.extext}.css`,"leaflet-markercluster")),$.when.apply($,a).then(()=>{e.each((e,t)=>{const a=$(t),n=a.data(),s=a.data("leafmap"),o=a.data("leafmap.config"),i=n.mapMarkers;let l,r;function c(e){this.setIcon(r),this.openPopup();const t=$(`[id="marker-${this.options.markerId}"]`);t.exists()&&(t.addClass(t.data("ams-active-class")||"active"),!1!==e.scroll&&MyAMS.ajax.check($.scrollTo,`${MyAMS.baseURL}ext/jquery-scrollto-2.1.2${MyAMS.env.extext}.js`,()=>{t.parents(".markers-target").scrollTo(t)}))}function d(e){this.closePopup(),this.setIcon(l);const t=$(`[id="marker-${this.options.markerId}"]`);t.exists()&&t.removeClass(t.data("ams-active-class")||"active")}function p(e){window.location.href=this.options.clickURL}if(i){l=L.icon({iconUrl:i.icon.url,iconSize:i.icon.size,iconAnchor:i.icon.anchor});const e=[1.25*i.icon.size[0],1.25*i.icon.size[1]];let t;r=L.icon({iconUrl:i.icon.url,iconSize:e,iconAnchor:[e[0]/2,e[1]-1]}),t=!1===n.mapMarkersClusters?L.featureGroup():L.markerClusterGroup({iconCreateFunction:e=>L.divIcon({html:e.getChildCount(),className:i.clusterClass||"map-cluster",iconSize:null})});const m={};for(let e=0;e<i.markers.length;e++){const a=i.markers[e],n=new L.LatLng(a.point.y,a.point.x),s=new L.Marker(n,{icon:l,clickURL:a.href,markerId:a.id,alt:a.id});new L.popup({offset:new L.Point(0,-i.icon.size[1]),closeButton:!1,autoPan:!0});let o;if(s.addEventListener("mouseover",c),s.addEventListener("mouseout",d),a.href&&s.addEventListener("click",p),m[a.id]=s,o=a.img?"<div>"+`<div class="marker__label p-2">${a.label}</div>`+'  <div class="text-center">'+`    <img src="${a.img.src}" width="${a.img.w}" height="${a.img.h}" alt="" />`+"  </div></div>":a.label){let e=i.tooltipClass||"map-tooltip";a.img&&(e+=" p-0"),s.bindPopup(o,{direction:"top",offset:[0,-l.options.iconSize[1]],opacity:1,className:e,closeButton:!1,autoPan:!0}),s.addEventListener("mouseover",c),s.addEventListener("mouseout",d)}t.addLayer(s)}s.addLayer(t),a.data("markers",m),"auto"===o.adjust&&(s.fitBounds(t.getBounds()),1===i.markers.length&&s.setZoom(o.zoom))}})})})})},position:{init:e=>{const t=$(".map",$(e.currentTarget));void 0===t.data("leafmap")&&(t.css("height",$(window).height()-250),GIS.init(t,{}).then(({leafmap:e,config:a})=>{const n=t.data(),s=L.icon({iconUrl:"/--static--/pyams_gis/img/marker-icon.png",iconSize:[25,41],iconAnchor:[12,39]}),o=n.mapLeafletFieldname,i=$(`input[name="${o}.widgets.longitude"]`),l=$(`input[name="${o}.widgets.latitude"]`),r=L.marker();if(r.setIcon(s),i.val()&&l.val()){const t=$(`select[name="${o}.widgets.projection"]`),n={point:{longitude:parseFloat(i.val()),latitude:parseFloat(l.val())},from_srid:t.val()||GIS.WGS_SRID,to_srid:GIS.WGS_SRID};GIS.call("transform/point",n).then(t=>{if("success"===t.status){const n=t.point;r.setLatLng({lon:n.longitude,lat:n.latitude}),r.addTo(e),e.setView(r.getLatLng(),a.zoom||13)}})}else{const t=a.bounds;t?r.setLatLng([(t[0].lat+t[1].lat)/2,(t[0].lon+t[1].lon)/2]):r.setLatLng([-90,0]),r.addTo(e),e.setView(r.getLatLng(),a.zoom||8)}t.data("marker",r),e.on("click",GIS.position.onClick)}))},last_event:null,onClick:e=>{GIS.position.last_event=e,setTimeout(()=>{if(e===GIS.position.last_event){const t=e.target.getContainer(),a=$(t).data(),n=a.marker,s=e.latlng,o=a.mapLeafletFieldname,i=$(`select[name="${o}.widgets.projection"]`),l={point:{longitude:s.lng,latitude:s.lat},from_srid:GIS.WGS_SRID,to_srid:parseInt(i.val())};GIS.call("transform/point",l).then(e=>{if("success"===e.status){const a=e.point;$(`input[name="${o}.widgets.longitude"]`).val(a.longitude),$(`input[name="${o}.widgets.latitude"]`).val(a.latitude),$(t).trigger("marker.changed",[t,a])}n.setLatLng(s)})}},100)},beforeProjectionChange:e=>{const t=$(e.currentTarget);t.data("ams-old-value",t.val())},changedProjection:e=>{const t=$(e.currentTarget),a=$(".map",t.parents(".object-field:first")).data("map-leaflet-fieldname"),n=$(`input[name="${a}.widgets.longitude"]`),s=$(`input[name="${a}.widgets.latitude"]`),o=t.data("ams-old-value"),i=t.val();if(o!==i&&n.val()&&s.val()){const e={point:{longitude:parseFloat(n.val()),latitude:parseFloat(s.val())},from_srid:parseInt(o),to_srid:parseInt(i)};GIS.call("transform/point",e).then(e=>{if("success"===e.status){const t=e.point;n.val(t.longitude),s.val(t.latitude)}})}},clear:e=>{const t=$(e.currentTarget).parents("fieldset:first");$("input",t).val(null);const a=$(".map",t),n=a.data("marker");if(n){n.setLatLng([-90,0]);const e=a.data("leafmap"),t=a.data("leafmap.config");if(t.bounds)e.fitBounds(t.bounds);else{const n=a.data();e.setView(n.mapLeafletCenter||t.center,t.zoom||13)}}a.trigger("marker.cleared.position",[a])},moveMarkerTo:function(e,t,a){const n=e.data("map-leaflet-fieldname");$(`input[name="${n}.widgets.longitude"]`).val(t.lon),$(`input[name="${n}.widgets.latitude"]`).val(t.lat);const s={point:{longitude:t.lon,latitude:t.lat},from_srid:a,to_srid:4326},o=e.data("marker");o&&GIS.call("transform/point",s).then(a=>{if("success"===a.status){const n=a.result.point;o.setLatLng({lon:n.longitude,lat:n.latitude}),e.data("leafmap").setView(t)}})}},area:{init:e=>{const t=$(".map",$(e.currentTarget));void 0===t.data("leafmap")&&(t.css("height",$(window).height()-250),GIS.init(t,{}).then(({leafmap:e,config:a})=>{L.Draw=L.Draw||{},L.Edit=L.Edit||{},MyAMS.ajax.check([L.Draw,L.Draw.Event,L.Map.TouchExtend,L.Edit.SimpleShape],[`/--static--/pyams_gis/js/Draw/Leaflet.draw${MyAMS.env.extext}.js`,`/--static--/pyams_gis/js/Draw/Leaflet.Draw.Event${MyAMS.env.extext}.js`,`/--static--/pyams_gis/js/Draw/ext/TouchEvents${MyAMS.env.extext}.js`,`/--static--/pyams_gis/js/Draw/edit/handler/Edit.SimpleShape${MyAMS.env.extext}.js`]).then(()=>{MyAMS.ajax.check(L.Edit.Rectangle,`/--static--/pyams_gis/js/Draw/edit/handler/Edit.Rectangle${MyAMS.env.extext}.js`).then(()=>{const a=(a,n)=>{const s=new L.FeatureGroup;d=L.rectangle([a,n]),s.addLayer(d),e.addLayer(s),d.editing.enable(),t.data("area",d),e.on(L.Draw.Event.EDITMOVE,GIS.area.changedArea),e.on(L.Draw.Event.EDITRESIZE,GIS.area.changedArea),e.on(L.Draw.Event.EDITVERTEX,GIS.area.changedArea)},n=t.data().mapLeafletFieldname,s=$(`input[name="${n}.widgets.x1"]`),o=$(`input[name="${n}.widgets.y1"]`),i=$(`input[name="${n}.widgets.x2"]`),l=$(`input[name="${n}.widgets.y2"]`);let r,c,d;if(s.val()&&o.val()&&i.val()&&l.val()){const e=$(`select[name="${n}.widgets.projection"]`),t={area:{x1:parseFloat(s.val()),y1:parseFloat(o.val()),x2:parseFloat(i.val()),y2:parseFloat(l.val())},from_srid:e.val()||GIS.WGS_SRID,to_srid:GIS.WGS_SRID};GIS.call("transform/area",t).then(e=>{if("success"===e.status){const t=e.area;r=L.latLng({lon:t.x1,lat:t.y1}),c=L.latLng({lon:t.x2,lat:t.y2}),a(r,c)}})}else{const e=t.data("leafmap.config");e.bounds?(r=L.latLng(e.bounds[0]),c=L.latLng(e.bounds[1])):(r=L.latLng({lon:-168,lat:-56.37}),c=L.latLng({lon:191.25,lat:83.72})),a(r,c)}})})}))},setBounds:e=>{setTimeout(()=>{const t=$(".map",e.target),a=t.data("leafmap"),n=t.data("area");a&&(a.invalidateSize(),a.fitBounds(n.getBounds()))},500)},last_event:null,changedArea:e=>{GIS.area.last_event=e,setTimeout(()=>{if(e===GIS.area.last_event){const t=e.target.getContainer(),a=$(t).data(),n=a.area.getBounds(),s=a.mapLeafletFieldname,o=$(`select[name="${s}.widgets.projection"]`),i={area:{x1:n.getWest(),y1:n.getSouth(),x2:n.getEast(),y2:n.getNorth()},from_srid:GIS.WGS_SRID,to_srid:parseInt(o.val())};GIS.call("transform/area",i).then(e=>{if("success"===e.status){const t=e.area;$(`input[name="${s}.widgets.x1"]`).val(t.x1),$(`input[name="${s}.widgets.y1"]`).val(t.y1),$(`input[name="${s}.widgets.x2"]`).val(t.x2),$(`input[name="${s}.widgets.y2"]`).val(t.y2)}})}},100)},beforeProjectionChange:e=>{const t=$(e.currentTarget);t.data("ams-old-value",t.val())},changedProjection:e=>{const t=$(e.currentTarget),a=$(".map",t.parents(".object-field:first")).data("map-leaflet-fieldname"),n=$(`input[name="${a}.widgets.x1"]`),s=$(`input[name="${a}.widgets.y1"]`),o=$(`input[name="${a}.widgets.x2"]`),i=$(`input[name="${a}.widgets.y2"]`),l=t.data("ams-old-value"),r=t.val();if(l!==r&&n.val()&&s.val()&&o.val()&&i.val()){const e={area:{x1:parseFloat(n.val()),y1:parseFloat(s.val()),x2:parseFloat(o.val()),y2:parseFloat(i.val())},from_srid:parseInt(l),to_srid:parseInt(r)};GIS.call("transform/area",e).then(e=>{if("success"===e.status){const t=e.area;n.val(t.x1),s.val(t.y1),o.val(t.x2),i.val(t.y2)}})}},clear:e=>{const t=$(e.currentTarget).parents("fieldset:first");$("input",t).val(null);const a=$(".map",t);a.trigger("marker.cleared.area",[a])}}};window.MyAMS&&(MyAMS.config.modules.push("gis"),MyAMS.gis=GIS,console.debug("MyAMS: GIS module loaded..."));