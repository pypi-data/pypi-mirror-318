[metadata]
name = termcolor_dg
version = attr: termcolor_dg.__version__
url = https://github.com/gunchev/termcolor_dg/
project_urls = 
	Source = https://github.com/gunchev/termcolor_dg/
	Bug Tracker = https://github.com/gunchev/termcolor_dg/issues/
	Documentation = https://github.com/gunchev/termcolor_dg/blob/master/README.md
description = ANSI Color formatting for terminal output and log coloring
long_description = file: README.md, CHANGES.md
long_description_content_type = text/markdown
license = MIT
license_files = LICENSE
platforms = any
test_suite = test
classifiers = 
	Development Status :: 5 - Production/Stable
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 2
	Programming Language :: Python :: 3
	Environment :: Console
	Topic :: Terminals
	Topic :: Software Development
	Intended Audience :: Developers

[options]
python_requires = >= 2.7
package_dir = 
	= src
py_modules = termcolor_dg
zip_safe = False
include_package_data = True
packages = find:
install_requires = 
tests_require = 
	coverage

[options.packages.find]
where = src

[options.entry_points]
console_scripts = 
	termcolor_dg_demo = termcolor_dg:termcolor_demo
	termcolor_dg_demo_log = termcolor_dg:color_log_demo

[bdist_wheel]
universal = true

[sdist]
formats = gztar,xztar,zip

[coverage:run]
branch = true
concurrency = thread
omit = 
	test/*
	tests/*

[coverage:report]
show_missing = true
skip_covered = false
exclude_lines = 
	pragma: no cover
	
	def __repr__
	if self\.debug
	
	raise AssertionError
	raise NotImplementedError
	return NotImplemented
	
	if 0:
	if False:
	if __name__ == .__main__.:
	if typing.TYPE_CHECKING:
	
	@(abc\.)?abstractmethod
	@(abc\.)?abstractproperty
	
	except ImportError

[coverage:html]
directory = htmlcov

[coverage:paths]
source = 
	./src/

[egg_info]
tag_build = 
tag_date = 0

