[build-system]
requires = ["setuptools>=48", "setuptools_scm[toml]>=6.3.1"]
build-backend = "setuptools.build_meta"

[project]
name = "pz-clouder"
description = "Cloud wrapper for ML workloads"
readme = "README.rst"
license = {text = "Apache-2.0"}
authors = [{name = "PrismaPhotonics", email = "evgeny.ilievsky@prismaphotonics.com"}]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Development Status :: 2 - Pre-Alpha"
]
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = []

[project.urls]
Issues = "https://github.com/PrismaPhotonics/pz-clouder/issues"
Source = "https://github.com/PrismaPhotonics/pz-clouder"

[project.optional-dependencies]
tests = [
  "pytest==8.3.4",
  "pytest-sugar==1.0.0",
  "pytest-cov==3.0.0",
  "pytest-mock==3.8.2"
]
dev = [
  "pz-clouder[tests]"
]

[tool.setuptools_scm]
version_file = "src/pz_clouder/_version.py"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.pytest.ini_options]
addopts = "-ra"

[tool.coverage.run]
branch = true
source = ["pz_clouder", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",
  "if typing.TYPE_CHECKING:",
  "if TYPE_CHECKING:",
  "raise NotImplementedError",
  "raise AssertionError",
  "@overload"
]

[tool.codespell]
ignore-words-list = " "

[tool.ruff]
output-format = "full"
show-fixes = true

[tool.ruff.lint]
ignore = [
  "S101",  # assert
  "PLR2004",  # magic-value-comparison
  "PLW2901",  # redefined-loop-name
  "ISC001",  # single-line-implicit-string-concatenation
  "SIM105",  # suppressible-exception
  "SIM108",  # if-else-block-instead-of-if-exp
  # "D203",  # one blank line before class
  "D213"  # multi-line-summary-second-line
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["D", "PTH"]
"tests/**" = ["S", "ARG001", "ARG002", "ANN"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
known-first-party = ["pz-clouder"]
