[project]
name = "memory-mcp-server"
version = "0.1.3"
description = "MCP server implementation for managing Claude's memory and knowledge graph"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "estav", email = "evang.stavropoulos@example.com" }]
license = "MIT"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
]
dependencies = ["mcp>=1.1.2", "aiofiles>=23.2.1"]

[project.scripts]
memory-mcp-server = "memory_mcp_server.main:main"

[project.urls]
Homepage = "https://github.com/estav/python-memory-mcp-server"
Repository = "https://github.com/estav/python-memory-mcp-server.git"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["memory_mcp_server"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]
python_files = ["test_*.py"]
pythonpath = ["."]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
  "asyncio: mark a test as an async test",
  "integration: mark a test that requires external services",
]

[project.optional-dependencies]
test = [
  "pytest>=7.4.4",
  "pytest-asyncio>=0.23.3",
  "pytest-cov>=4.1.0",
  "pytest-mock>=3.12.0",
  "aiohttp>=3.9.1",
]
