Metadata-Version: 2.1
Name: tracethat
Version: 1.1.0
Summary: tracethat.dev reporter for Python
Author-email: Kacper Pietrzak <kacpietrzak@gmail.com>
License: The MIT License (MIT) Copyright (c) 2024 Kacper Pietrzak
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://tracethat.dev
Project-URL: Repository, https://github.com/yourusername/tracethat
Keywords: tracing,logging,debugging
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: typing_extensions>=4.12.2
Requires-Dist: cryptography>=42.0.3
Requires-Dist: aiohttp>=3.9.5

## Installation

```bash
pip install tracethat
```

## Example

```python
from tracethat import tracethat, register_token

register_token('your_token')

@tracethat
async def hello(name: str) -> str:
    await asyncio.sleep(1)
    return f'Hello, {name}!'

async def main():
    await hello(name='John')

if __name__ == '__main__':
    asyncio.run(main())
```

## Reference

### tracethat

`tracethat` is a decorator that wraps a function and logs its execution. It takes a function as an argument and returns a wrapped function. It accepts both sync and async functions.

```python
@tracethat
def hello(name: str) -> str:
    return f'Hello, {name}!'
```

### tracethat.log

`tracethat.log` is a function that logs a message. It accepts a string as an argument and an optional payload.

```python
tracethat.log('hello', {'name': 'John'})
```

### register_token

You will need to register your token before using the reporter. You can do this by calling the `register_token` function and passing your token as an argument.

```python
from tracethat import register_token

register_token('your_token')
```

or by setting the `TT_TOKEN` environment variable.

```bash
TT_TOKEN=your_token python3 main.py
```
