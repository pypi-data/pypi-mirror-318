Metadata-Version: 2.4
Name: ez_otlp
Version: 0.1.2
Summary: ez-otlp is a simple tool that enables convenient use of modern monitoring systems with minimal configuration.
Project-URL: repository, https://github.com/a1403951401/ez_otlp
Author-email: Martin <martin19980418@gmail.com>
Requires-Python: >=3.12
Requires-Dist: opentelemetry-api>=1.28.2
Requires-Dist: opentelemetry-exporter-otlp>=1.28.2
Requires-Dist: opentelemetry-instrumentation-logging>=0.49b2
Requires-Dist: opentelemetry-sdk>=1.28.2
Requires-Dist: orjson>=3.10.12
Requires-Dist: psutil>=6.1.0
Requires-Dist: pydantic-settings>=2.6.1
Requires-Dist: rich>=13.9.4
Description-Content-Type: text/markdown

# ez-otlp

> ez-otlp is a simple tool that enables convenient use of modern monitoring systems with minimal configuration. It helps developers streamline telemetry data collection and transmission, making it ideal for services in modern cloud-native applications and microservices architectures. It efficiently collects logs, metrics, and traces via OpenTelemetry and seamlessly integrates with existing monitoring tools and platforms like Prometheus, Grafana, Datadog, and more.

üöÄ Quickly implement application performance monitoring, log management, distributed tracing, metrics and dashboards, and alerts.

üõ†Ô∏è 99% of parameter configurations are resolved through environment variables, making it plug-and-play and ready to seamlessly integrate with OpenTelemetry without the need for complex parameters.

‚ù§Ô∏è The demo uses SigNoz for an intuitive interface that showcases the power of modern monitoring systems.

### Documentation
<a href="https://github.com/a1403951401/ez_otlp/blob/main/README.md">English</a> &bull;
<a href="https://github.com/a1403951401/ez_otlp/blob/main/README.zh-cn.md">‰∏≠Êñá</a>

### Install
> pip install ez-otlp

### Usage Instructions
##### In your project
```python
# env
# EZ_ENDPOINT = http://host.docker.internal:4317/v1/traces
# EZ_RESOURCE_SERVICE_NAME = ez-otlp

from ez_otlp import EZ_OTLP

otlp = EZ_OTLP(log=["logging", "structlog"])
```
##### Run template.py
```bash
docker-compose up
```

#### locally hosted SigNoz
> http://localhost:3301/
```bash
cd signoz
docker-compose up -d
```

### Images
![img.png](docs/img.png)
![img.png](docs/img2.png)
![img.png](docs/img3.png)


### Todolist
 - logging module support -> loguru
 - Integration with other services -> Litestar, FastAPI, Starlette, Aiohttp, sqlalchemy, redis
 - Improve documentation
