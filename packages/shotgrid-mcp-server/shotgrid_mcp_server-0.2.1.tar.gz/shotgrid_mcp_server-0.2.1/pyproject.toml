[project]
name = "shotgrid-mcp-server"
version = "0.2.1"
description = "A Model Context Protocol (MCP) server implementation using fastmcp"
readme = "README.md"
requires-python = ">=3.10,<3.11"
dependencies = [
    "fastmcp>=0.4.1",
    "mcp>=1.2.0",
    "shotgun-api3",
    "uvicorn>=0.22.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "platformdirs>=2.5.4",
    "aiohttp>=3.9.0",
    "requests>=2.32.3",
    "six>=1.16.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
    "PyYAML",
]
lint = [
    "ruff",
    "black",
    "mypy",
    "types-requests",
]

[project.scripts]
shotgrid-mcp-server = "shotgrid_mcp_server.server:main"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.1"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/shotgrid_mcp_server"]

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=shotgrid_mcp_server --cov-report=term-missing"

[tool.uv.sources]
shotgun-api3 = { git = "https://github.com/shotgunsoftware/python-api", tag = "v3.7.0" }


[tool.coverage.run]
source = ["shotgrid_mcp_server"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
mypy_path = "src"
packages = ["shotgrid_mcp_server"]
ignore_missing_imports = true
namespace_packages = false
explicit_package_bases = false

[tool.black]
line-length = 120
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.nox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = ["shotgrid_mcp_server", "tests"]
filter_files = true
known_first_party = "shotgrid_mcp_server"

# Enforce import section headers.
import_heading_future = "Import future modules"
import_heading_stdlib = "Import built-in modules"
import_heading_thirdparty = "Import third-party modules"
import_heading_firstparty = "Import local modules"

force_sort_within_sections = true
force_single_line = true

# All project unrelated unknown imports belong to third-party.
default_section = "THIRDPARTY"
skip_glob = []


[tool.ruff]
line-length = 120
target-version = "py310"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"noxfile.py" = ["E402", "I001"]
