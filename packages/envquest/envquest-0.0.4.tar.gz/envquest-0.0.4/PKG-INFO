Metadata-Version: 2.1
Name: envquest
Version: 0.0.4
Summary: A collection of Reinforcement Learning algorithms to train autonomous agents in different environments.
Author-email: Medric Sonwa <medric49@gmail.com>
Project-URL: Homepage, https://github.com/medric49/envquest
Project-URL: Issues, https://github.com/medric49/envquest/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: fire>=0.7.0
Requires-Dist: gymnasium[box2d]>=1.0.0
Requires-Dist: imageio[ffmpeg,pyav]>=2.35.1
Requires-Dist: opencv-python>=4.10.0.84
Requires-Dist: pillow>=10.4.0
Requires-Dist: torch>=2.5.1
Requires-Dist: tqdm>=4.67.1
Requires-Dist: wandb[media]>=0.19.1

# EnvQuest
Train and evaluate your autonomous agents in different environments using a collection of RL algorithms.

## Installation
To install the EnvQuest library, use `pip install envquest`.

## Usage

```python
import envquest as eq

# Instantiate an environment
env = eq.envs.gym.make_env("LunarLander-v3")

# Instantiate an agent
agent = eq.agents.simple.RandomAgent(env.observation_space, env.action_space)

# Execute an MDP
timestep = env.reset()

while not timestep.last():
    observation = timestep.observation
    action = agent.act(observation=observation)
    timestep = env.step(action)

# Render the environment
frame = env.render(256, 256)

```
