{"version":3,"file":"3712.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/fast-deep-equal/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/fast-uri/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/fast-uri/lib/schemes.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/fast-uri/lib/scopedChars.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/fast-uri/lib/utils.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict'\n\nconst { normalizeIPv6, normalizeIPv4, removeDotSegments, recomposeAuthority, normalizeComponentEncoding } = require('./lib/utils')\nconst SCHEMES = require('./lib/schemes')\n\nfunction normalize (uri, options) {\n  if (typeof uri === 'string') {\n    uri = serialize(parse(uri, options), options)\n  } else if (typeof uri === 'object') {\n    uri = parse(serialize(uri, options), options)\n  }\n  return uri\n}\n\nfunction resolve (baseURI, relativeURI, options) {\n  const schemelessOptions = Object.assign({ scheme: 'null' }, options)\n  const resolved = resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true)\n  return serialize(resolved, { ...schemelessOptions, skipEscape: true })\n}\n\nfunction resolveComponents (base, relative, options, skipNormalization) {\n  const target = {}\n  if (!skipNormalization) {\n    base = parse(serialize(base, options), options) // normalize base components\n    relative = parse(serialize(relative, options), options) // normalize relative components\n  }\n  options = options || {}\n\n  if (!options.tolerant && relative.scheme) {\n    target.scheme = relative.scheme\n    // target.authority = relative.authority;\n    target.userinfo = relative.userinfo\n    target.host = relative.host\n    target.port = relative.port\n    target.path = removeDotSegments(relative.path || '')\n    target.query = relative.query\n  } else {\n    if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n      // target.authority = relative.authority;\n      target.userinfo = relative.userinfo\n      target.host = relative.host\n      target.port = relative.port\n      target.path = removeDotSegments(relative.path || '')\n      target.query = relative.query\n    } else {\n      if (!relative.path) {\n        target.path = base.path\n        if (relative.query !== undefined) {\n          target.query = relative.query\n        } else {\n          target.query = base.query\n        }\n      } else {\n        if (relative.path.charAt(0) === '/') {\n          target.path = removeDotSegments(relative.path)\n        } else {\n          if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n            target.path = '/' + relative.path\n          } else if (!base.path) {\n            target.path = relative.path\n          } else {\n            target.path = base.path.slice(0, base.path.lastIndexOf('/') + 1) + relative.path\n          }\n          target.path = removeDotSegments(target.path)\n        }\n        target.query = relative.query\n      }\n      // target.authority = base.authority;\n      target.userinfo = base.userinfo\n      target.host = base.host\n      target.port = base.port\n    }\n    target.scheme = base.scheme\n  }\n\n  target.fragment = relative.fragment\n\n  return target\n}\n\nfunction equal (uriA, uriB, options) {\n  if (typeof uriA === 'string') {\n    uriA = unescape(uriA)\n    uriA = serialize(normalizeComponentEncoding(parse(uriA, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriA === 'object') {\n    uriA = serialize(normalizeComponentEncoding(uriA, true), { ...options, skipEscape: true })\n  }\n\n  if (typeof uriB === 'string') {\n    uriB = unescape(uriB)\n    uriB = serialize(normalizeComponentEncoding(parse(uriB, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriB === 'object') {\n    uriB = serialize(normalizeComponentEncoding(uriB, true), { ...options, skipEscape: true })\n  }\n\n  return uriA.toLowerCase() === uriB.toLowerCase()\n}\n\nfunction serialize (cmpts, opts) {\n  const components = {\n    host: cmpts.host,\n    scheme: cmpts.scheme,\n    userinfo: cmpts.userinfo,\n    port: cmpts.port,\n    path: cmpts.path,\n    query: cmpts.query,\n    nid: cmpts.nid,\n    nss: cmpts.nss,\n    uuid: cmpts.uuid,\n    fragment: cmpts.fragment,\n    reference: cmpts.reference,\n    resourceName: cmpts.resourceName,\n    secure: cmpts.secure,\n    error: ''\n  }\n  const options = Object.assign({}, opts)\n  const uriTokens = []\n\n  // find scheme handler\n  const schemeHandler = SCHEMES[(options.scheme || components.scheme || '').toLowerCase()]\n\n  // perform scheme specific serialization\n  if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options)\n\n  if (components.path !== undefined) {\n    if (!options.skipEscape) {\n      components.path = escape(components.path)\n\n      if (components.scheme !== undefined) {\n        components.path = components.path.split('%3A').join(':')\n      }\n    } else {\n      components.path = unescape(components.path)\n    }\n  }\n\n  if (options.reference !== 'suffix' && components.scheme) {\n    uriTokens.push(components.scheme, ':')\n  }\n\n  const authority = recomposeAuthority(components, options)\n  if (authority !== undefined) {\n    if (options.reference !== 'suffix') {\n      uriTokens.push('//')\n    }\n\n    uriTokens.push(authority)\n\n    if (components.path && components.path.charAt(0) !== '/') {\n      uriTokens.push('/')\n    }\n  }\n  if (components.path !== undefined) {\n    let s = components.path\n\n    if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n      s = removeDotSegments(s)\n    }\n\n    if (authority === undefined) {\n      s = s.replace(/^\\/\\//u, '/%2F') // don't allow the path to start with \"//\"\n    }\n\n    uriTokens.push(s)\n  }\n\n  if (components.query !== undefined) {\n    uriTokens.push('?', components.query)\n  }\n\n  if (components.fragment !== undefined) {\n    uriTokens.push('#', components.fragment)\n  }\n  return uriTokens.join('')\n}\n\nconst hexLookUp = Array.from({ length: 127 }, (v, k) => /[^!\"$&'()*+,\\-.;=_`a-z{}~]/u.test(String.fromCharCode(k)))\n\nfunction nonSimpleDomain (value) {\n  let code = 0\n  for (let i = 0, len = value.length; i < len; ++i) {\n    code = value.charCodeAt(i)\n    if (code > 126 || hexLookUp[code]) {\n      return true\n    }\n  }\n  return false\n}\n\nconst URI_PARSE = /^(?:([^#/:?]+):)?(?:\\/\\/((?:([^#/?@]*)@)?(\\[[^#/?\\]]+\\]|[^#/:?]*)(?::(\\d*))?))?([^#?]*)(?:\\?([^#]*))?(?:#((?:.|[\\n\\r])*))?/u\n\nfunction parse (uri, opts) {\n  const options = Object.assign({}, opts)\n  const parsed = {\n    scheme: undefined,\n    userinfo: undefined,\n    host: '',\n    port: undefined,\n    path: '',\n    query: undefined,\n    fragment: undefined\n  }\n  const gotEncoding = uri.indexOf('%') !== -1\n  let isIP = false\n  if (options.reference === 'suffix') uri = (options.scheme ? options.scheme + ':' : '') + '//' + uri\n\n  const matches = uri.match(URI_PARSE)\n\n  if (matches) {\n    // store each component\n    parsed.scheme = matches[1]\n    parsed.userinfo = matches[3]\n    parsed.host = matches[4]\n    parsed.port = parseInt(matches[5], 10)\n    parsed.path = matches[6] || ''\n    parsed.query = matches[7]\n    parsed.fragment = matches[8]\n\n    // fix port number\n    if (isNaN(parsed.port)) {\n      parsed.port = matches[5]\n    }\n    if (parsed.host) {\n      const ipv4result = normalizeIPv4(parsed.host)\n      if (ipv4result.isIPV4 === false) {\n        const ipv6result = normalizeIPv6(ipv4result.host, { isIPV4: false })\n        parsed.host = ipv6result.host.toLowerCase()\n        isIP = ipv6result.isIPV6\n      } else {\n        parsed.host = ipv4result.host\n        isIP = true\n      }\n    }\n    if (parsed.scheme === undefined && parsed.userinfo === undefined && parsed.host === undefined && parsed.port === undefined && !parsed.path && parsed.query === undefined) {\n      parsed.reference = 'same-document'\n    } else if (parsed.scheme === undefined) {\n      parsed.reference = 'relative'\n    } else if (parsed.fragment === undefined) {\n      parsed.reference = 'absolute'\n    } else {\n      parsed.reference = 'uri'\n    }\n\n    // check for reference errors\n    if (options.reference && options.reference !== 'suffix' && options.reference !== parsed.reference) {\n      parsed.error = parsed.error || 'URI is not a ' + options.reference + ' reference.'\n    }\n\n    // find scheme handler\n    const schemeHandler = SCHEMES[(options.scheme || parsed.scheme || '').toLowerCase()]\n\n    // check if scheme can't handle IRIs\n    if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n      // if host component is a domain name\n      if (parsed.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost)) && isIP === false && nonSimpleDomain(parsed.host)) {\n        // convert Unicode IDN -> ASCII IDN\n        try {\n          parsed.host = URL.domainToASCII(parsed.host.toLowerCase())\n        } catch (e) {\n          parsed.error = parsed.error || \"Host's domain name can not be converted to ASCII: \" + e\n        }\n      }\n      // convert IRI -> URI\n    }\n\n    if (!schemeHandler || (schemeHandler && !schemeHandler.skipNormalize)) {\n      if (gotEncoding && parsed.scheme !== undefined) {\n        parsed.scheme = unescape(parsed.scheme)\n      }\n      if (gotEncoding && parsed.host !== undefined) {\n        parsed.host = unescape(parsed.host)\n      }\n      if (parsed.path !== undefined && parsed.path.length) {\n        parsed.path = escape(unescape(parsed.path))\n      }\n      if (parsed.fragment !== undefined && parsed.fragment.length) {\n        parsed.fragment = encodeURI(decodeURIComponent(parsed.fragment))\n      }\n    }\n\n    // perform scheme specific parsing\n    if (schemeHandler && schemeHandler.parse) {\n      schemeHandler.parse(parsed, options)\n    }\n  } else {\n    parsed.error = parsed.error || 'URI can not be parsed.'\n  }\n  return parsed\n}\n\nconst fastUri = {\n  SCHEMES,\n  normalize,\n  resolve,\n  resolveComponents,\n  equal,\n  serialize,\n  parse\n}\n\nmodule.exports = fastUri\nmodule.exports.default = fastUri\nmodule.exports.fastUri = fastUri\n","'use strict'\n\nconst UUID_REG = /^[\\da-f]{8}\\b-[\\da-f]{4}\\b-[\\da-f]{4}\\b-[\\da-f]{4}\\b-[\\da-f]{12}$/iu\nconst URN_REG = /([\\da-z][\\d\\-a-z]{0,31}):((?:[\\w!$'()*+,\\-.:;=@]|%[\\da-f]{2})+)/iu\n\nfunction isSecure (wsComponents) {\n  return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === 'wss'\n}\n\nfunction httpParse (components) {\n  if (!components.host) {\n    components.error = components.error || 'HTTP URIs must have a host.'\n  }\n\n  return components\n}\n\nfunction httpSerialize (components) {\n  const secure = String(components.scheme).toLowerCase() === 'https'\n\n  // normalize the default port\n  if (components.port === (secure ? 443 : 80) || components.port === '') {\n    components.port = undefined\n  }\n\n  // normalize the empty path\n  if (!components.path) {\n    components.path = '/'\n  }\n\n  // NOTE: We do not parse query strings for HTTP URIs\n  // as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n  // and not the HTTP spec.\n\n  return components\n}\n\nfunction wsParse (wsComponents) {\n// indicate if the secure flag is set\n  wsComponents.secure = isSecure(wsComponents)\n\n  // construct resouce name\n  wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '')\n  wsComponents.path = undefined\n  wsComponents.query = undefined\n\n  return wsComponents\n}\n\nfunction wsSerialize (wsComponents) {\n// normalize the default port\n  if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === '') {\n    wsComponents.port = undefined\n  }\n\n  // ensure scheme matches secure flag\n  if (typeof wsComponents.secure === 'boolean') {\n    wsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws')\n    wsComponents.secure = undefined\n  }\n\n  // reconstruct path from resource name\n  if (wsComponents.resourceName) {\n    const [path, query] = wsComponents.resourceName.split('?')\n    wsComponents.path = (path && path !== '/' ? path : undefined)\n    wsComponents.query = query\n    wsComponents.resourceName = undefined\n  }\n\n  // forbid fragment component\n  wsComponents.fragment = undefined\n\n  return wsComponents\n}\n\nfunction urnParse (urnComponents, options) {\n  if (!urnComponents.path) {\n    urnComponents.error = 'URN can not be parsed'\n    return urnComponents\n  }\n  const matches = urnComponents.path.match(URN_REG)\n  if (matches) {\n    const scheme = options.scheme || urnComponents.scheme || 'urn'\n    urnComponents.nid = matches[1].toLowerCase()\n    urnComponents.nss = matches[2]\n    const urnScheme = `${scheme}:${options.nid || urnComponents.nid}`\n    const schemeHandler = SCHEMES[urnScheme]\n    urnComponents.path = undefined\n\n    if (schemeHandler) {\n      urnComponents = schemeHandler.parse(urnComponents, options)\n    }\n  } else {\n    urnComponents.error = urnComponents.error || 'URN can not be parsed.'\n  }\n\n  return urnComponents\n}\n\nfunction urnSerialize (urnComponents, options) {\n  const scheme = options.scheme || urnComponents.scheme || 'urn'\n  const nid = urnComponents.nid.toLowerCase()\n  const urnScheme = `${scheme}:${options.nid || nid}`\n  const schemeHandler = SCHEMES[urnScheme]\n\n  if (schemeHandler) {\n    urnComponents = schemeHandler.serialize(urnComponents, options)\n  }\n\n  const uriComponents = urnComponents\n  const nss = urnComponents.nss\n  uriComponents.path = `${nid || options.nid}:${nss}`\n\n  options.skipEscape = true\n  return uriComponents\n}\n\nfunction urnuuidParse (urnComponents, options) {\n  const uuidComponents = urnComponents\n  uuidComponents.uuid = uuidComponents.nss\n  uuidComponents.nss = undefined\n\n  if (!options.tolerant && (!uuidComponents.uuid || !UUID_REG.test(uuidComponents.uuid))) {\n    uuidComponents.error = uuidComponents.error || 'UUID is not valid.'\n  }\n\n  return uuidComponents\n}\n\nfunction urnuuidSerialize (uuidComponents) {\n  const urnComponents = uuidComponents\n  // normalize UUID\n  urnComponents.nss = (uuidComponents.uuid || '').toLowerCase()\n  return urnComponents\n}\n\nconst http = {\n  scheme: 'http',\n  domainHost: true,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst https = {\n  scheme: 'https',\n  domainHost: http.domainHost,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst ws = {\n  scheme: 'ws',\n  domainHost: true,\n  parse: wsParse,\n  serialize: wsSerialize\n}\n\nconst wss = {\n  scheme: 'wss',\n  domainHost: ws.domainHost,\n  parse: ws.parse,\n  serialize: ws.serialize\n}\n\nconst urn = {\n  scheme: 'urn',\n  parse: urnParse,\n  serialize: urnSerialize,\n  skipNormalize: true\n}\n\nconst urnuuid = {\n  scheme: 'urn:uuid',\n  parse: urnuuidParse,\n  serialize: urnuuidSerialize,\n  skipNormalize: true\n}\n\nconst SCHEMES = {\n  http,\n  https,\n  ws,\n  wss,\n  urn,\n  'urn:uuid': urnuuid\n}\n\nmodule.exports = SCHEMES\n","'use strict'\n\nconst HEX = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  A: 10,\n  b: 11,\n  B: 11,\n  c: 12,\n  C: 12,\n  d: 13,\n  D: 13,\n  e: 14,\n  E: 14,\n  f: 15,\n  F: 15\n}\n\nmodule.exports = {\n  HEX\n}\n","'use strict'\n\nconst { HEX } = require('./scopedChars')\n\nfunction normalizeIPv4 (host) {\n  if (findToken(host, '.') < 3) { return { host, isIPV4: false } }\n  const matches = host.match(/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/u) || []\n  const [address] = matches\n  if (address) {\n    return { host: stripLeadingZeros(address, '.'), isIPV4: true }\n  } else {\n    return { host, isIPV4: false }\n  }\n}\n\n/**\n * @param {string[]} input\n * @param {boolean} [keepZero=false]\n * @returns {string|undefined}\n */\nfunction stringArrayToHexStripped (input, keepZero = false) {\n  let acc = ''\n  let strip = true\n  for (const c of input) {\n    if (HEX[c] === undefined) return undefined\n    if (c !== '0' && strip === true) strip = false\n    if (!strip) acc += c\n  }\n  if (keepZero && acc.length === 0) acc = '0'\n  return acc\n}\n\nfunction getIPV6 (input) {\n  let tokenCount = 0\n  const output = { error: false, address: '', zone: '' }\n  const address = []\n  const buffer = []\n  let isZone = false\n  let endipv6Encountered = false\n  let endIpv6 = false\n\n  function consume () {\n    if (buffer.length) {\n      if (isZone === false) {\n        const hex = stringArrayToHexStripped(buffer)\n        if (hex !== undefined) {\n          address.push(hex)\n        } else {\n          output.error = true\n          return false\n        }\n      }\n      buffer.length = 0\n    }\n    return true\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const cursor = input[i]\n    if (cursor === '[' || cursor === ']') { continue }\n    if (cursor === ':') {\n      if (endipv6Encountered === true) {\n        endIpv6 = true\n      }\n      if (!consume()) { break }\n      tokenCount++\n      address.push(':')\n      if (tokenCount > 7) {\n        // not valid\n        output.error = true\n        break\n      }\n      if (i - 1 >= 0 && input[i - 1] === ':') {\n        endipv6Encountered = true\n      }\n      continue\n    } else if (cursor === '%') {\n      if (!consume()) { break }\n      // switch to zone detection\n      isZone = true\n    } else {\n      buffer.push(cursor)\n      continue\n    }\n  }\n  if (buffer.length) {\n    if (isZone) {\n      output.zone = buffer.join('')\n    } else if (endIpv6) {\n      address.push(buffer.join(''))\n    } else {\n      address.push(stringArrayToHexStripped(buffer))\n    }\n  }\n  output.address = address.join('')\n  return output\n}\n\nfunction normalizeIPv6 (host, opts = {}) {\n  if (findToken(host, ':') < 2) { return { host, isIPV6: false } }\n  const ipv6 = getIPV6(host)\n\n  if (!ipv6.error) {\n    let newHost = ipv6.address\n    let escapedHost = ipv6.address\n    if (ipv6.zone) {\n      newHost += '%' + ipv6.zone\n      escapedHost += '%25' + ipv6.zone\n    }\n    return { host: newHost, escapedHost, isIPV6: true }\n  } else {\n    return { host, isIPV6: false }\n  }\n}\n\nfunction stripLeadingZeros (str, token) {\n  let out = ''\n  let skip = true\n  const l = str.length\n  for (let i = 0; i < l; i++) {\n    const c = str[i]\n    if (c === '0' && skip) {\n      if ((i + 1 <= l && str[i + 1] === token) || i + 1 === l) {\n        out += c\n        skip = false\n      }\n    } else {\n      if (c === token) {\n        skip = true\n      } else {\n        skip = false\n      }\n      out += c\n    }\n  }\n  return out\n}\n\nfunction findToken (str, token) {\n  let ind = 0\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === token) ind++\n  }\n  return ind\n}\n\nconst RDS1 = /^\\.\\.?\\//u\nconst RDS2 = /^\\/\\.(?:\\/|$)/u\nconst RDS3 = /^\\/\\.\\.(?:\\/|$)/u\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/u\n\nfunction removeDotSegments (input) {\n  const output = []\n\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, '')\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, '/')\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, '/')\n      output.pop()\n    } else if (input === '.' || input === '..') {\n      input = ''\n    } else {\n      const im = input.match(RDS5)\n      if (im) {\n        const s = im[0]\n        input = input.slice(s.length)\n        output.push(s)\n      } else {\n        throw new Error('Unexpected dot segment condition')\n      }\n    }\n  }\n  return output.join('')\n}\n\nfunction normalizeComponentEncoding (components, esc) {\n  const func = esc !== true ? escape : unescape\n  if (components.scheme !== undefined) {\n    components.scheme = func(components.scheme)\n  }\n  if (components.userinfo !== undefined) {\n    components.userinfo = func(components.userinfo)\n  }\n  if (components.host !== undefined) {\n    components.host = func(components.host)\n  }\n  if (components.path !== undefined) {\n    components.path = func(components.path)\n  }\n  if (components.query !== undefined) {\n    components.query = func(components.query)\n  }\n  if (components.fragment !== undefined) {\n    components.fragment = func(components.fragment)\n  }\n  return components\n}\n\nfunction recomposeAuthority (components, options) {\n  const uriTokens = []\n\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo)\n    uriTokens.push('@')\n  }\n\n  if (components.host !== undefined) {\n    let host = unescape(components.host)\n    const ipV4res = normalizeIPv4(host)\n\n    if (ipV4res.isIPV4) {\n      host = ipV4res.host\n    } else {\n      const ipV6res = normalizeIPv6(ipV4res.host, { isIPV4: false })\n      if (ipV6res.isIPV6 === true) {\n        host = `[${ipV6res.escapedHost}]`\n      } else {\n        host = components.host\n      }\n    }\n    uriTokens.push(host)\n  }\n\n  if (typeof components.port === 'number' || typeof components.port === 'string') {\n    uriTokens.push(':')\n    uriTokens.push(String(components.port))\n  }\n\n  return uriTokens.length ? uriTokens.join('') : undefined\n};\n\nmodule.exports = {\n  recomposeAuthority,\n  normalizeComponentEncoding,\n  removeDotSegments,\n  normalizeIPv4,\n  normalizeIPv6,\n  stringArrayToHexStripped\n}\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","normalizeIPv6","normalizeIPv4","removeDotSegments","recomposeAuthority","normalizeComponentEncoding","SCHEMES","resolveComponents","base","relative","options","skipNormalization","target","parse","serialize","tolerant","scheme","userinfo","host","port","path","query","undefined","charAt","slice","lastIndexOf","fragment","cmpts","opts","components","nid","nss","uuid","reference","resourceName","secure","error","assign","uriTokens","schemeHandler","toLowerCase","skipEscape","unescape","escape","split","join","push","authority","s","absolutePath","replace","hexLookUp","from","v","k","test","String","fromCharCode","URI_PARSE","uri","parsed","gotEncoding","indexOf","isIP","matches","match","parseInt","isNaN","ipv4result","isIPV4","ipv6result","isIPV6","unicodeSupport","domainHost","value","code","len","charCodeAt","nonSimpleDomain","URL","domainToASCII","e","skipNormalize","encodeURI","decodeURIComponent","fastUri","normalize","resolve","baseURI","relativeURI","schemelessOptions","uriA","uriB","UUID_REG","URN_REG","isSecure","wsComponents","httpParse","httpSerialize","http","ws","https","wss","urn","urnComponents","urnScheme","uriComponents","uuidComponents","HEX","A","B","c","C","d","D","E","f","F","findToken","address","stripLeadingZeros","stringArrayToHexStripped","input","keepZero","acc","strip","ipv6","tokenCount","output","zone","buffer","isZone","endipv6Encountered","endIpv6","consume","hex","cursor","getIPV6","newHost","escapedHost","str","token","out","skip","l","ind","RDS1","RDS2","RDS3","RDS5","ipV4res","ipV6res","esc","func","pop","im","Error"],"sourceRoot":""}