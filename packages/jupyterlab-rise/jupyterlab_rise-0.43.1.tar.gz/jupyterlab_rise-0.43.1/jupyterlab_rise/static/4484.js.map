{"version":3,"file":"4484.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/vega5-extension/lib/index.js"],"sourcesContent":["/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module vega5-extension\n */\nimport { Widget } from '@lumino/widgets';\n/**\n * The CSS class to add to the Vega and Vega-Lite widget.\n */\nconst VEGA_COMMON_CLASS = 'jp-RenderedVegaCommon5';\n/**\n * The CSS class to add to the Vega.\n */\nconst VEGA_CLASS = 'jp-RenderedVega5';\n/**\n * The CSS class to add to the Vega-Lite.\n */\nconst VEGALITE_CLASS = 'jp-RenderedVegaLite';\n/**\n * The MIME type for Vega.\n *\n * #### Notes\n * The version of this follows the major version of Vega.\n */\nexport const VEGA_MIME_TYPE = 'application/vnd.vega.v5+json';\n/**\n * The MIME type for Vega-Lite.\n *\n * #### Notes\n * The version of this follows the major version of Vega-Lite.\n */\nexport const VEGALITE3_MIME_TYPE = 'application/vnd.vegalite.v3+json';\n/**\n * The MIME type for Vega-Lite.\n *\n * #### Notes\n * The version of this follows the major version of Vega-Lite.\n */\nexport const VEGALITE4_MIME_TYPE = 'application/vnd.vegalite.v4+json';\n/**\n * The MIME type for Vega-Lite.\n *\n * #### Notes\n * The version of this follows the major version of Vega-Lite.\n */\nexport const VEGALITE5_MIME_TYPE = 'application/vnd.vegalite.v5+json';\n/**\n * A widget for rendering Vega or Vega-Lite data, for usage with rendermime.\n */\nexport class RenderedVega extends Widget {\n    /**\n     * Create a new widget for rendering Vega/Vega-Lite.\n     */\n    constructor(options) {\n        super();\n        this._mimeType = options.mimeType;\n        this._resolver = options.resolver;\n        this.addClass(VEGA_COMMON_CLASS);\n        this.addClass(this._mimeType === VEGA_MIME_TYPE ? VEGA_CLASS : VEGALITE_CLASS);\n    }\n    /**\n     * Render Vega/Vega-Lite into this widget's node.\n     */\n    async renderModel(model) {\n        const spec = model.data[this._mimeType];\n        if (spec === undefined) {\n            return;\n        }\n        const metadata = model.metadata[this._mimeType];\n        const embedOptions = metadata && metadata.embed_options ? metadata.embed_options : {};\n        // If the JupyterLab theme is dark, render this using a dark Vega theme.\n        let bodyThemeDark = document.body.dataset.jpThemeLight === 'false';\n        if (bodyThemeDark) {\n            embedOptions.theme = 'dark';\n        }\n        const mode = this._mimeType === VEGA_MIME_TYPE ? 'vega' : 'vega-lite';\n        const vega = Private.vega != null ? Private.vega : await Private.ensureVega();\n        const el = document.createElement('div');\n        // clear the output before attaching a chart\n        this.node.textContent = '';\n        this.node.appendChild(el);\n        if (this._result) {\n            this._result.finalize();\n        }\n        const loader = vega.vega.loader({\n            http: { credentials: 'same-origin' }\n        });\n        const sanitize = async (uri, options) => {\n            // Use the resolver for any URIs it wants to handle\n            const resolver = this._resolver;\n            if ((resolver === null || resolver === void 0 ? void 0 : resolver.isLocal) && resolver.isLocal(uri)) {\n                const absPath = await resolver.resolveUrl(uri);\n                uri = await resolver.getDownloadUrl(absPath);\n            }\n            return loader.sanitize(uri, options);\n        };\n        this._result = await vega.default(el, spec, {\n            actions: true,\n            defaultStyle: true,\n            ...embedOptions,\n            mode,\n            loader: { ...loader, sanitize }\n        });\n        if (model.data['image/png']) {\n            return;\n        }\n        // Add png representation of vega chart to output\n        const imageURL = await this._result.view.toImageURL('png', typeof embedOptions.scaleFactor === 'number'\n            ? embedOptions.scaleFactor\n            : embedOptions.scaleFactor\n                ? embedOptions.scaleFactor.png\n                : embedOptions.scaleFactor);\n        model.setData({\n            data: { ...model.data, 'image/png': imageURL.split(',')[1] }\n        });\n    }\n    dispose() {\n        if (this._result) {\n            this._result.finalize();\n        }\n        super.dispose();\n    }\n}\n/**\n * A mime renderer factory for vega data.\n */\nexport const rendererFactory = {\n    safe: true,\n    mimeTypes: [\n        VEGA_MIME_TYPE,\n        VEGALITE3_MIME_TYPE,\n        VEGALITE4_MIME_TYPE,\n        VEGALITE5_MIME_TYPE\n    ],\n    createRenderer: options => new RenderedVega(options)\n};\nconst extension = {\n    id: '@jupyterlab/vega5-extension:factory',\n    description: 'Provides a renderer for Vega 5 and Vega-Lite 3 to 5 content.',\n    rendererFactory,\n    rank: 57,\n    dataType: 'json',\n    documentWidgetFactoryOptions: [\n        {\n            name: 'Vega5',\n            primaryFileType: 'vega5',\n            fileTypes: ['vega5', 'json'],\n            defaultFor: ['vega5']\n        },\n        {\n            name: 'Vega-Lite5',\n            primaryFileType: 'vega-lite5',\n            fileTypes: ['vega-lite3', 'vega-lite4', 'vega-lite5', 'json'],\n            defaultFor: ['vega-lite3', 'vega-lite4', 'vega-lite5']\n        }\n    ],\n    fileTypes: [\n        {\n            mimeTypes: [VEGA_MIME_TYPE],\n            name: 'vega5',\n            extensions: ['.vg', '.vg.json', '.vega'],\n            icon: 'ui-components:vega'\n        },\n        {\n            mimeTypes: [VEGALITE5_MIME_TYPE],\n            name: 'vega-lite5',\n            extensions: ['.vl', '.vl.json', '.vegalite'],\n            icon: 'ui-components:vega'\n        },\n        {\n            mimeTypes: [VEGALITE4_MIME_TYPE],\n            name: 'vega-lite4',\n            extensions: [],\n            icon: 'ui-components:vega'\n        },\n        {\n            mimeTypes: [VEGALITE3_MIME_TYPE],\n            name: 'vega-lite3',\n            extensions: [],\n            icon: 'ui-components:vega'\n        }\n    ]\n};\nexport default extension;\n/**\n * A namespace for private module data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Lazy-load and cache the vega-embed library\n     */\n    function ensureVega() {\n        if (Private.vegaReady) {\n            return Private.vegaReady;\n        }\n        Private.vegaReady = import('vega-embed');\n        return Private.vegaReady;\n    }\n    Private.ensureVega = ensureVega;\n})(Private || (Private = {}));\n//# sourceMappingURL=index.js.map"],"names":["VEGA_MIME_TYPE","VEGALITE3_MIME_TYPE","VEGALITE4_MIME_TYPE","VEGALITE5_MIME_TYPE","RenderedVega","Widget","constructor","options","super","this","_mimeType","mimeType","_resolver","resolver","addClass","renderModel","model","spec","data","undefined","metadata","embedOptions","embed_options","document","body","dataset","jpThemeLight","theme","mode","vega","Private","ensureVega","el","createElement","node","textContent","appendChild","_result","finalize","loader","http","credentials","default","actions","defaultStyle","sanitize","async","uri","isLocal","absPath","resolveUrl","getDownloadUrl","imageURL","view","toImageURL","scaleFactor","png","setData","split","dispose","rendererFactory","safe","mimeTypes","createRenderer","id","description","rank","dataType","documentWidgetFactoryOptions","name","primaryFileType","fileTypes","defaultFor","extensions","icon","vegaReady"],"sourceRoot":""}