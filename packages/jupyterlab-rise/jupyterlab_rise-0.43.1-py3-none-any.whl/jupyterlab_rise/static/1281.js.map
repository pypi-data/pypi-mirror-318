{"version":3,"file":"1281.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/json-extension/lib/component.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { jupyterHighlightStyle } from '@jupyterlab/codemirror';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { InputGroup } from '@jupyterlab/ui-components';\nimport { tags } from '@lezer/highlight';\nimport { JSONExt } from '@lumino/coreutils';\nimport * as React from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { JSONTree } from 'react-json-tree';\nimport { StyleModule } from 'style-mod';\n/**\n * Get the CodeMirror style for a given tag.\n */\nfunction getStyle(tag) {\n    var _a;\n    return (_a = jupyterHighlightStyle.style([tag])) !== null && _a !== void 0 ? _a : '';\n}\n/**\n * A component that renders JSON data as a collapsible tree.\n */\nexport class Component extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { filter: '', value: '' };\n        this.timer = 0;\n        this.handleChange = (event) => {\n            const { value } = event.target;\n            this.setState({ value });\n            window.clearTimeout(this.timer);\n            this.timer = window.setTimeout(() => {\n                this.setState({ filter: value });\n            }, 300);\n        };\n    }\n    componentDidMount() {\n        StyleModule.mount(document, jupyterHighlightStyle.module);\n    }\n    render() {\n        const translator = this.props.translator || nullTranslator;\n        const trans = translator.load('jupyterlab');\n        const { data, metadata, forwardedRef } = this.props;\n        const root = metadata && metadata.root ? metadata.root : 'root';\n        const keyPaths = this.state.filter\n            ? filterPaths(data, this.state.filter, [root])\n            : [root];\n        return (React.createElement(\"div\", { className: \"container\", ref: forwardedRef },\n            React.createElement(InputGroup, { className: \"filter\", type: \"text\", placeholder: trans.__('Findâ€¦'), onChange: this.handleChange, value: this.state.value, rightIcon: \"ui-components:search\" }),\n            React.createElement(JSONTree, { data: data, collectionLimit: 100, theme: {\n                    extend: theme,\n                    valueLabel: getStyle(tags.variableName),\n                    valueText: getStyle(tags.string),\n                    nestedNodeItemString: getStyle(tags.comment)\n                }, invertTheme: false, keyPath: [root], getItemString: (type, data, itemType, itemString) => Array.isArray(data) ? (\n                // Always display array type and the number of items i.e. \"[] 2 items\".\n                React.createElement(\"span\", null,\n                    itemType,\n                    \" \",\n                    itemString)) : Object.keys(data).length === 0 ? (\n                // Only display object type when it's empty i.e. \"{}\".\n                React.createElement(\"span\", null, itemType)) : (null // Upstream typings don't accept null, but it should be ok\n                ), labelRenderer: ([label, type]) => {\n                    return (React.createElement(\"span\", { className: getStyle(tags.keyword) },\n                        React.createElement(Highlighter, { searchWords: [this.state.filter], textToHighlight: `${label}`, highlightClassName: \"jp-mod-selected\" })));\n                }, valueRenderer: raw => {\n                    let className = getStyle(tags.string);\n                    if (typeof raw === 'number') {\n                        className = getStyle(tags.number);\n                    }\n                    if (raw === 'true' || raw === 'false') {\n                        className = getStyle(tags.keyword);\n                    }\n                    return (React.createElement(\"span\", { className: className },\n                        React.createElement(Highlighter, { searchWords: [this.state.filter], textToHighlight: `${raw}`, highlightClassName: \"jp-mod-selected\" })));\n                }, shouldExpandNodeInitially: (keyPath, data, level) => metadata && metadata.expanded\n                    ? true\n                    : keyPaths.join(',').includes(keyPath.join(',')) })));\n    }\n}\n// Provide an invalid theme object (this is on purpose!) to invalidate the\n// react-json-tree's inline styles that override CodeMirror CSS classes\nconst theme = {\n    scheme: 'jupyter',\n    base00: 'invalid',\n    base01: 'invalid',\n    base02: 'invalid',\n    base03: 'invalid',\n    base04: 'invalid',\n    base05: 'invalid',\n    base06: 'invalid',\n    base07: 'invalid',\n    base08: 'invalid',\n    base09: 'invalid',\n    base0A: 'invalid',\n    base0B: 'invalid',\n    base0C: 'invalid',\n    base0D: 'invalid',\n    base0E: 'invalid',\n    base0F: 'invalid',\n    author: 'invalid'\n};\nfunction objectIncludes(data, query) {\n    return JSON.stringify(data).includes(query);\n}\nfunction filterPaths(data, query, parent = ['root']) {\n    if (JSONExt.isArray(data)) {\n        return data.reduce((result, item, index) => {\n            if (item && typeof item === 'object' && objectIncludes(item, query)) {\n                return [\n                    ...result,\n                    [index, ...parent].join(','),\n                    ...filterPaths(item, query, [index, ...parent])\n                ];\n            }\n            return result;\n        }, []);\n    }\n    if (JSONExt.isObject(data)) {\n        return Object.keys(data).reduce((result, key) => {\n            const item = data[key];\n            if (item &&\n                typeof item === 'object' &&\n                (key.includes(query) || objectIncludes(item, query))) {\n                return [\n                    ...result,\n                    [key, ...parent].join(','),\n                    ...filterPaths(item, query, [key, ...parent])\n                ];\n            }\n            return result;\n        }, []);\n    }\n    return [];\n}\n//# sourceMappingURL=component.js.map"],"names":["getStyle","tag","_a","jupyterHighlightStyle","style","Component","constructor","super","arguments","this","state","filter","value","timer","handleChange","event","target","setState","window","clearTimeout","setTimeout","componentDidMount","StyleModule","mount","document","module","render","trans","props","translator","nullTranslator","load","data","metadata","forwardedRef","root","keyPaths","filterPaths","className","ref","InputGroup","type","placeholder","__","onChange","rightIcon","JSONTree","collectionLimit","theme","extend","valueLabel","tags","variableName","valueText","string","nestedNodeItemString","comment","invertTheme","keyPath","getItemString","itemType","itemString","Array","isArray","Object","keys","length","labelRenderer","label","keyword","searchWords","textToHighlight","highlightClassName","valueRenderer","raw","number","shouldExpandNodeInitially","level","expanded","join","includes","scheme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","author","objectIncludes","query","JSON","stringify","parent","JSONExt","reduce","result","item","index","isObject","key"],"sourceRoot":""}