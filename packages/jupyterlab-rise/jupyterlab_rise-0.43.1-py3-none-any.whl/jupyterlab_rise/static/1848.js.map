{"version":3,"file":"1848.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@lumino/virtualdom/dist/index.es6.js"],"sourcesContent":["import { ArrayExt } from '@lumino/algorithm';\n\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module virtualdom\n */\n/**\n * A virtual node which represents plain text content.\n *\n * #### Notes\n * User code will not typically create a `VirtualText` node directly.\n * Instead, the `h()` function will be used to create an element tree.\n */\nclass VirtualText {\n    /**\n     * Construct a new virtual text node.\n     *\n     * @param content - The text content for the node.\n     */\n    constructor(content) {\n        /**\n         * The type of the node.\n         *\n         * This value can be used as a type guard for discriminating the\n         * `VirtualNode` union type.\n         */\n        this.type = 'text';\n        this.content = content;\n    }\n}\n/**\n * A virtual node which represents an HTML element.\n *\n * #### Notes\n * User code will not typically create a `VirtualElement` node directly.\n * Instead, the `h()` function will be used to create an element tree.\n */\nclass VirtualElement {\n    /**\n     * Construct a new virtual element node.\n     *\n     * @param tag - The element tag name.\n     *\n     * @param attrs - The element attributes.\n     *\n     * @param children - The element children.\n     *\n     * @param renderer - An optional custom renderer for the element.\n     */\n    constructor(tag, attrs, children, renderer) {\n        /**\n         * The type of the node.\n         *\n         * This value can be used as a type guard for discriminating the\n         * `VirtualNode` union type.\n         */\n        this.type = 'element';\n        this.tag = tag;\n        this.attrs = attrs;\n        this.children = children;\n        this.renderer = renderer;\n    }\n}\n/**\n * DEPRECATED - use VirtualElement with a defined renderer param instead.\n * This class is provided as a backwards compatibility shim\n *\n * A \"pass thru\" virtual node whose children are managed by a render and an\n * unrender callback. The intent of this flavor of virtual node is to make\n * it easy to blend other kinds of virtualdom (eg React) into Phosphor's\n * virtualdom.\n *\n * #### Notes\n * User code will not typically create a `VirtualElementPass` node directly.\n * Instead, the `hpass()` function will be used to create an element tree.\n */\nclass VirtualElementPass extends VirtualElement {\n    /**\n     * DEPRECATED - use VirtualElement with a defined renderer param instead\n     *\n     * Construct a new virtual element pass thru node.\n     *\n     * @param tag - the tag of the parent element of this node. Once the parent\n     * element is rendered, it will be passed as an argument to\n     * renderer.render\n     *\n     * @param attrs - attributes that will assigned to the\n     * parent element\n     *\n     * @param renderer - an object with render and unrender\n     * functions, each of which should take a single argument of type\n     * HTMLElement and return nothing. If null, the parent element\n     * will be rendered barren without any children.\n     */\n    constructor(tag, attrs, renderer) {\n        super(tag, attrs, [], renderer || undefined);\n    }\n}\nfunction h(tag) {\n    let attrs = {};\n    let renderer;\n    let children = [];\n    for (let i = 1, n = arguments.length; i < n; ++i) {\n        // eslint-disable-next-line prefer-rest-params\n        let arg = arguments[i];\n        if (typeof arg === 'string') {\n            children.push(new VirtualText(arg));\n        }\n        else if (arg instanceof VirtualText) {\n            children.push(arg);\n        }\n        else if (arg instanceof VirtualElement) {\n            children.push(arg);\n        }\n        else if (arg instanceof Array) {\n            extend(children, arg);\n        }\n        else if ((i === 1 || i === 2) && arg && typeof arg === 'object') {\n            if ('render' in arg) {\n                renderer = arg;\n            }\n            else {\n                attrs = arg;\n            }\n        }\n    }\n    return new VirtualElement(tag, attrs, children, renderer);\n    function extend(array, values) {\n        for (let child of values) {\n            if (typeof child === 'string') {\n                array.push(new VirtualText(child));\n            }\n            else if (child instanceof VirtualText) {\n                array.push(child);\n            }\n            else if (child instanceof VirtualElement) {\n                array.push(child);\n            }\n        }\n    }\n}\n/**\n * The namespace for the `h` function statics.\n */\n(function (h) {\n    h.a = h.bind(undefined, 'a');\n    h.abbr = h.bind(undefined, 'abbr');\n    h.address = h.bind(undefined, 'address');\n    h.area = h.bind(undefined, 'area');\n    h.article = h.bind(undefined, 'article');\n    h.aside = h.bind(undefined, 'aside');\n    h.audio = h.bind(undefined, 'audio');\n    h.b = h.bind(undefined, 'b');\n    h.bdi = h.bind(undefined, 'bdi');\n    h.bdo = h.bind(undefined, 'bdo');\n    h.blockquote = h.bind(undefined, 'blockquote');\n    h.br = h.bind(undefined, 'br');\n    h.button = h.bind(undefined, 'button');\n    h.canvas = h.bind(undefined, 'canvas');\n    h.caption = h.bind(undefined, 'caption');\n    h.cite = h.bind(undefined, 'cite');\n    h.code = h.bind(undefined, 'code');\n    h.col = h.bind(undefined, 'col');\n    h.colgroup = h.bind(undefined, 'colgroup');\n    h.data = h.bind(undefined, 'data');\n    h.datalist = h.bind(undefined, 'datalist');\n    h.dd = h.bind(undefined, 'dd');\n    h.del = h.bind(undefined, 'del');\n    h.dfn = h.bind(undefined, 'dfn');\n    h.div = h.bind(undefined, 'div');\n    h.dl = h.bind(undefined, 'dl');\n    h.dt = h.bind(undefined, 'dt');\n    h.em = h.bind(undefined, 'em');\n    h.embed = h.bind(undefined, 'embed');\n    h.fieldset = h.bind(undefined, 'fieldset');\n    h.figcaption = h.bind(undefined, 'figcaption');\n    h.figure = h.bind(undefined, 'figure');\n    h.footer = h.bind(undefined, 'footer');\n    h.form = h.bind(undefined, 'form');\n    h.h1 = h.bind(undefined, 'h1');\n    h.h2 = h.bind(undefined, 'h2');\n    h.h3 = h.bind(undefined, 'h3');\n    h.h4 = h.bind(undefined, 'h4');\n    h.h5 = h.bind(undefined, 'h5');\n    h.h6 = h.bind(undefined, 'h6');\n    h.header = h.bind(undefined, 'header');\n    h.hr = h.bind(undefined, 'hr');\n    h.i = h.bind(undefined, 'i');\n    h.iframe = h.bind(undefined, 'iframe');\n    h.img = h.bind(undefined, 'img');\n    h.input = h.bind(undefined, 'input');\n    h.ins = h.bind(undefined, 'ins');\n    h.kbd = h.bind(undefined, 'kbd');\n    h.label = h.bind(undefined, 'label');\n    h.legend = h.bind(undefined, 'legend');\n    h.li = h.bind(undefined, 'li');\n    h.main = h.bind(undefined, 'main');\n    h.map = h.bind(undefined, 'map');\n    h.mark = h.bind(undefined, 'mark');\n    h.meter = h.bind(undefined, 'meter');\n    h.nav = h.bind(undefined, 'nav');\n    h.noscript = h.bind(undefined, 'noscript');\n    h.object = h.bind(undefined, 'object');\n    h.ol = h.bind(undefined, 'ol');\n    h.optgroup = h.bind(undefined, 'optgroup');\n    h.option = h.bind(undefined, 'option');\n    h.output = h.bind(undefined, 'output');\n    h.p = h.bind(undefined, 'p');\n    h.param = h.bind(undefined, 'param');\n    h.pre = h.bind(undefined, 'pre');\n    h.progress = h.bind(undefined, 'progress');\n    h.q = h.bind(undefined, 'q');\n    h.rp = h.bind(undefined, 'rp');\n    h.rt = h.bind(undefined, 'rt');\n    h.ruby = h.bind(undefined, 'ruby');\n    h.s = h.bind(undefined, 's');\n    h.samp = h.bind(undefined, 'samp');\n    h.section = h.bind(undefined, 'section');\n    h.select = h.bind(undefined, 'select');\n    h.small = h.bind(undefined, 'small');\n    h.source = h.bind(undefined, 'source');\n    h.span = h.bind(undefined, 'span');\n    h.strong = h.bind(undefined, 'strong');\n    h.sub = h.bind(undefined, 'sub');\n    h.summary = h.bind(undefined, 'summary');\n    h.sup = h.bind(undefined, 'sup');\n    h.table = h.bind(undefined, 'table');\n    h.tbody = h.bind(undefined, 'tbody');\n    h.td = h.bind(undefined, 'td');\n    h.textarea = h.bind(undefined, 'textarea');\n    h.tfoot = h.bind(undefined, 'tfoot');\n    h.th = h.bind(undefined, 'th');\n    h.thead = h.bind(undefined, 'thead');\n    h.time = h.bind(undefined, 'time');\n    h.title = h.bind(undefined, 'title');\n    h.tr = h.bind(undefined, 'tr');\n    h.track = h.bind(undefined, 'track');\n    h.u = h.bind(undefined, 'u');\n    h.ul = h.bind(undefined, 'ul');\n    h.var_ = h.bind(undefined, 'var');\n    h.video = h.bind(undefined, 'video');\n    h.wbr = h.bind(undefined, 'wbr');\n})(h || (h = {}));\nfunction hpass(tag) {\n    let attrs = {};\n    let renderer = null;\n    if (arguments.length === 2) {\n        // eslint-disable-next-line prefer-rest-params\n        const arg = arguments[1];\n        if ('render' in arg) {\n            renderer = arg;\n        }\n        else {\n            attrs = arg;\n        }\n    }\n    else if (arguments.length === 3) {\n        // eslint-disable-next-line prefer-rest-params\n        attrs = arguments[1];\n        // eslint-disable-next-line prefer-rest-params\n        renderer = arguments[2];\n    }\n    else if (arguments.length > 3) {\n        throw new Error('hpass() should be called with 1, 2, or 3 arguments');\n    }\n    return new VirtualElementPass(tag, attrs, renderer);\n}\n/**\n * The namespace for the virtual DOM rendering functions.\n */\nvar VirtualDOM;\n(function (VirtualDOM) {\n    function realize(node) {\n        return Private.createDOMNode(node);\n    }\n    VirtualDOM.realize = realize;\n    /**\n     * Render virtual DOM content into a host element.\n     *\n     * @param content - The virtual DOM content to render.\n     *\n     * @param host - The host element for the rendered content.\n     *\n     * #### Notes\n     * This renders the delta from the previous rendering. It assumes that\n     * the content of the host element is not manipulated by external code.\n     *\n     * Providing `null` content will clear the rendering.\n     *\n     * Externally modifying the provided content or the host element will\n     * result in undefined rendering behavior.\n     */\n    function render(content, host) {\n        let oldContent = Private.hostMap.get(host) || [];\n        let newContent = Private.asContentArray(content);\n        Private.hostMap.set(host, newContent);\n        Private.updateContent(host, oldContent, newContent);\n    }\n    VirtualDOM.render = render;\n})(VirtualDOM || (VirtualDOM = {}));\n/**\n * The namespace for the module implementation details.\n */\nvar Private;\n(function (Private) {\n    /**\n     * A weak mapping of host element to virtual DOM content.\n     */\n    Private.hostMap = new WeakMap();\n    /**\n     * Cast a content value to a content array.\n     */\n    function asContentArray(value) {\n        if (!value) {\n            return [];\n        }\n        if (value instanceof Array) {\n            return value;\n        }\n        return [value];\n    }\n    Private.asContentArray = asContentArray;\n    function createDOMNode(node) {\n        // eslint-disable-next-line prefer-rest-params\n        let host = arguments[1] || null;\n        // eslint-disable-next-line prefer-rest-params\n        const before = arguments[2] || null;\n        if (host) {\n            host.insertBefore(createDOMNode(node), before);\n        }\n        else {\n            // Create a text node for a virtual text node.\n            if (node.type === 'text') {\n                return document.createTextNode(node.content);\n            }\n            // Create the HTML element with the specified tag.\n            host = document.createElement(node.tag);\n            // Add the attributes for the new element.\n            addAttrs(host, node.attrs);\n            if (node.renderer) {\n                node.renderer.render(host, {\n                    attrs: node.attrs,\n                    children: node.children\n                });\n                return host;\n            }\n            // Recursively populate the element with child content.\n            for (let i = 0, n = node.children.length; i < n; ++i) {\n                createDOMNode(node.children[i], host);\n            }\n        }\n        return host;\n    }\n    Private.createDOMNode = createDOMNode;\n    /**\n     * Update a host element with the delta of the virtual content.\n     *\n     * This is the core \"diff\" algorithm. There is no explicit \"patch\"\n     * phase. The host is patched at each step as the diff progresses.\n     */\n    function updateContent(host, oldContent, newContent) {\n        // Bail early if the content is identical.\n        if (oldContent === newContent) {\n            return;\n        }\n        // Collect the old keyed elems into a mapping.\n        let oldKeyed = collectKeys(host, oldContent);\n        // Create a copy of the old content which can be modified in-place.\n        let oldCopy = oldContent.slice();\n        // Update the host with the new content. The diff always proceeds\n        // forward and never modifies a previously visited index. The old\n        // copy array is modified in-place to reflect the changes made to\n        // the host children. This causes the stale nodes to be pushed to\n        // the end of the host node and removed at the end of the loop.\n        let currElem = host.firstChild;\n        let newCount = newContent.length;\n        for (let i = 0; i < newCount; ++i) {\n            // If the old content is exhausted, create a new node.\n            if (i >= oldCopy.length) {\n                createDOMNode(newContent[i], host);\n                continue;\n            }\n            // Lookup the old and new virtual nodes.\n            let oldVNode = oldCopy[i];\n            let newVNode = newContent[i];\n            // If both elements are identical, there is nothing to do.\n            if (oldVNode === newVNode) {\n                currElem = currElem.nextSibling;\n                continue;\n            }\n            // Handle the simplest case of in-place text update first.\n            if (oldVNode.type === 'text' && newVNode.type === 'text') {\n                // Avoid spurious updates for performance.\n                if (currElem.textContent !== newVNode.content) {\n                    currElem.textContent = newVNode.content;\n                }\n                currElem = currElem.nextSibling;\n                continue;\n            }\n            // If the old or new node is a text node, the other node is now\n            // known to be an element node, so create and insert a new node.\n            if (oldVNode.type === 'text' || newVNode.type === 'text') {\n                ArrayExt.insert(oldCopy, i, newVNode);\n                createDOMNode(newVNode, host, currElem);\n                continue;\n            }\n            // If the old XOR new node has a custom renderer,\n            // create and insert a new node.\n            if (!oldVNode.renderer != !newVNode.renderer) {\n                ArrayExt.insert(oldCopy, i, newVNode);\n                createDOMNode(newVNode, host, currElem);\n                continue;\n            }\n            // At this point, both nodes are known to be element nodes.\n            // If the new elem is keyed, move an old keyed elem to the proper\n            // location before proceeding with the diff. The search can start\n            // at the current index, since the unmatched old keyed elems are\n            // pushed forward in the old copy array.\n            let newKey = newVNode.attrs.key;\n            if (newKey && newKey in oldKeyed) {\n                let pair = oldKeyed[newKey];\n                if (pair.vNode !== oldVNode) {\n                    ArrayExt.move(oldCopy, oldCopy.indexOf(pair.vNode, i + 1), i);\n                    host.insertBefore(pair.element, currElem);\n                    oldVNode = pair.vNode;\n                    currElem = pair.element;\n                }\n            }\n            // If both elements are identical, there is nothing to do.\n            if (oldVNode === newVNode) {\n                currElem = currElem.nextSibling;\n                continue;\n            }\n            // If the old elem is keyed and does not match the new elem key,\n            // create a new node. This is necessary since the old keyed elem\n            // may be matched at a later point in the diff.\n            let oldKey = oldVNode.attrs.key;\n            if (oldKey && oldKey !== newKey) {\n                ArrayExt.insert(oldCopy, i, newVNode);\n                createDOMNode(newVNode, host, currElem);\n                continue;\n            }\n            // If the tags are different, create a new node.\n            if (oldVNode.tag !== newVNode.tag) {\n                ArrayExt.insert(oldCopy, i, newVNode);\n                createDOMNode(newVNode, host, currElem);\n                continue;\n            }\n            // At this point, the element can be updated in-place.\n            // Update the element attributes.\n            updateAttrs(currElem, oldVNode.attrs, newVNode.attrs);\n            // Update the element content.\n            if (newVNode.renderer) {\n                newVNode.renderer.render(currElem, {\n                    attrs: newVNode.attrs,\n                    children: newVNode.children\n                });\n            }\n            else {\n                updateContent(currElem, oldVNode.children, newVNode.children);\n            }\n            // Step to the next sibling element.\n            currElem = currElem.nextSibling;\n        }\n        // Cleanup stale DOM\n        removeContent(host, oldCopy, newCount, true);\n    }\n    Private.updateContent = updateContent;\n    /**\n     * Handle cleanup of stale vdom and its associated DOM. The host node is\n     * traversed recursively (in depth-first order), and any explicit cleanup\n     * required by a child node is carried out when it is visited (eg if a node\n     * has a custom renderer, the renderer.unrender function will be called).\n     * Once the subtree beneath each child of host has been completely visited,\n     * that child will be removed via a call to host.removeChild.\n     */\n    function removeContent(host, oldContent, newCount, _sentinel) {\n        // Dispose of the old nodes pushed to the end of the host.\n        for (let i = oldContent.length - 1; i >= newCount; --i) {\n            const oldNode = oldContent[i];\n            const child = (_sentinel ? host.lastChild : host.childNodes[i]);\n            // recursively clean up host children\n            if (oldNode.type === 'text') ;\n            else if (oldNode.renderer && oldNode.renderer.unrender) {\n                oldNode.renderer.unrender(child, {\n                    attrs: oldNode.attrs,\n                    children: oldNode.children\n                });\n            }\n            else {\n                removeContent(child, oldNode.children, 0, false);\n            }\n            if (_sentinel) {\n                host.removeChild(child);\n            }\n        }\n    }\n    /**\n     * A set of special-cased attribute names.\n     */\n    const specialAttrs = {\n        key: true,\n        className: true,\n        htmlFor: true,\n        dataset: true,\n        style: true\n    };\n    /**\n     * Add element attributes to a newly created HTML element.\n     */\n    function addAttrs(element, attrs) {\n        // Add the inline event listeners and node attributes.\n        for (let name in attrs) {\n            if (name in specialAttrs) {\n                continue;\n            }\n            if (name.substr(0, 2) === 'on') {\n                element[name] = attrs[name];\n            }\n            else {\n                element.setAttribute(name, attrs[name]);\n            }\n        }\n        // Add the element `class` attribute.\n        if (attrs.className !== undefined) {\n            element.setAttribute('class', attrs.className);\n        }\n        // Add the element `for` attribute.\n        if (attrs.htmlFor !== undefined) {\n            element.setAttribute('for', attrs.htmlFor);\n        }\n        // Add the dataset values.\n        if (attrs.dataset) {\n            addDataset(element, attrs.dataset);\n        }\n        // Add the inline styles.\n        if (attrs.style) {\n            addStyle(element, attrs.style);\n        }\n    }\n    /**\n     * Update the element attributes of an HTML element.\n     */\n    function updateAttrs(element, oldAttrs, newAttrs) {\n        // Do nothing if the attrs are the same object.\n        if (oldAttrs === newAttrs) {\n            return;\n        }\n        // Setup the strongly typed loop variable.\n        let name;\n        // Remove attributes and listeners which no longer exist.\n        for (name in oldAttrs) {\n            if (name in specialAttrs || name in newAttrs) {\n                continue;\n            }\n            if (name.substr(0, 2) === 'on') {\n                element[name] = null;\n            }\n            else {\n                element.removeAttribute(name);\n            }\n        }\n        // Add and update new and existing attributes and listeners.\n        for (name in newAttrs) {\n            if (name in specialAttrs || oldAttrs[name] === newAttrs[name]) {\n                continue;\n            }\n            if (name.substr(0, 2) === 'on') {\n                element[name] = newAttrs[name];\n            }\n            else {\n                element.setAttribute(name, newAttrs[name]);\n            }\n        }\n        // Update the element `class` attribute.\n        if (oldAttrs.className !== newAttrs.className) {\n            if (newAttrs.className !== undefined) {\n                element.setAttribute('class', newAttrs.className);\n            }\n            else {\n                element.removeAttribute('class');\n            }\n        }\n        // Add the element `for` attribute.\n        if (oldAttrs.htmlFor !== newAttrs.htmlFor) {\n            if (newAttrs.htmlFor !== undefined) {\n                element.setAttribute('for', newAttrs.htmlFor);\n            }\n            else {\n                element.removeAttribute('for');\n            }\n        }\n        // Update the dataset values.\n        if (oldAttrs.dataset !== newAttrs.dataset) {\n            updateDataset(element, oldAttrs.dataset || {}, newAttrs.dataset || {});\n        }\n        // Update the inline styles.\n        if (oldAttrs.style !== newAttrs.style) {\n            updateStyle(element, oldAttrs.style || {}, newAttrs.style || {});\n        }\n    }\n    /**\n     * Add dataset values to a newly created HTML element.\n     */\n    function addDataset(element, dataset) {\n        for (let name in dataset) {\n            element.setAttribute(`data-${name}`, dataset[name]);\n        }\n    }\n    /**\n     * Update the dataset values of an HTML element.\n     */\n    function updateDataset(element, oldDataset, newDataset) {\n        for (let name in oldDataset) {\n            if (!(name in newDataset)) {\n                element.removeAttribute(`data-${name}`);\n            }\n        }\n        for (let name in newDataset) {\n            if (oldDataset[name] !== newDataset[name]) {\n                element.setAttribute(`data-${name}`, newDataset[name]);\n            }\n        }\n    }\n    /**\n     * Add inline style values to a newly created HTML element.\n     */\n    function addStyle(element, style) {\n        let elemStyle = element.style;\n        let name;\n        for (name in style) {\n            elemStyle[name] = style[name];\n        }\n    }\n    /**\n     * Update the inline style values of an HTML element.\n     */\n    function updateStyle(element, oldStyle, newStyle) {\n        let elemStyle = element.style;\n        let name;\n        for (name in oldStyle) {\n            if (!(name in newStyle)) {\n                elemStyle[name] = '';\n            }\n        }\n        for (name in newStyle) {\n            if (oldStyle[name] !== newStyle[name]) {\n                elemStyle[name] = newStyle[name];\n            }\n        }\n    }\n    /**\n     * Collect a mapping of keyed elements for the host content.\n     */\n    function collectKeys(host, content) {\n        let node = host.firstChild;\n        let keyMap = Object.create(null);\n        for (let vNode of content) {\n            if (vNode.type === 'element' && vNode.attrs.key) {\n                keyMap[vNode.attrs.key] = { vNode, element: node };\n            }\n            node = node.nextSibling;\n        }\n        return keyMap;\n    }\n})(Private || (Private = {}));\n\nexport { VirtualDOM, VirtualElement, VirtualElementPass, VirtualText, h, hpass };\n//# sourceMappingURL=index.es6.js.map\n"],"names":["VirtualDOM","Private","VirtualText","constructor","content","this","type","VirtualElement","tag","attrs","children","renderer","VirtualElementPass","super","undefined","h","i","n","arguments","length","arg","push","Array","extend","array","values","child","hpass","Error","a","bind","abbr","address","area","article","aside","audio","b","bdi","bdo","blockquote","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","dfn","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hr","iframe","img","input","ins","kbd","label","legend","li","main","map","mark","meter","nav","noscript","object","ol","optgroup","option","output","p","param","pre","progress","q","rp","rt","ruby","s","samp","section","select","small","source","span","strong","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var_","video","wbr","realize","node","createDOMNode","render","host","oldContent","hostMap","get","newContent","asContentArray","set","updateContent","before","insertBefore","document","createTextNode","createElement","element","name","specialAttrs","substr","setAttribute","className","htmlFor","dataset","addDataset","style","elemStyle","addStyle","addAttrs","removeContent","newCount","_sentinel","oldNode","lastChild","childNodes","unrender","removeChild","WeakMap","value","oldKeyed","firstChild","keyMap","Object","create","vNode","key","nextSibling","collectKeys","oldCopy","slice","currElem","oldVNode","newVNode","textContent","ArrayExt","insert","newKey","pair","move","indexOf","oldKey","updateAttrs","oldAttrs","newAttrs","removeAttribute","oldDataset","newDataset","updateDataset","oldStyle","newStyle","updateStyle"],"sourceRoot":""}