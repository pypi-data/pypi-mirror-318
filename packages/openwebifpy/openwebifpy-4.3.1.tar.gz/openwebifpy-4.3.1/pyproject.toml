[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name='openwebifpy'
description="Provides a python interface to interact with a device running OpenWebIf"
readme = "README.md"
authors = [
    {name = "Finbarr Brady", email = 'fbradyirl@github.io'},
    {name = "Sidney Kuyateh", email = 'autinerd@kuyateh.eu'}
]
maintainers = [
    {name = "Sidney Kuyateh", email = 'autinerd@kuyateh.eu'}
]

classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3 :: Only',
]
license = {text = "MIT License"}
keywords=['openwebif']

dependencies = ["aiohttp", "yarl"]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/autinerd/openwebifpy"

[tool.hatch.build.targets.wheel]
packages = ["openwebif"]

[tool.hatch.version]
path = "openwebif/__init__.py"

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    "D202",  # No blank lines allowed after function docstring
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D406",  # Section name should end with a newline
    "D407",  # Section name underlining
    "E501",  # line too long
    "E731",  # do not assign a lambda expression, use a def

    "N806",
    "ERA001",
    "FBT",

    # Ignore ignored, as the rule is now back in preview/nursery, which cannot
    # be ignored anymore without warnings.
    # https://github.com/astral-sh/ruff/issues/7491
    # "PLC1901", # Lots of false positives

    # False positives https://github.com/astral-sh/ruff/issues/5386
    "PLC0208", # Use a sequence type instead of a `set` when iterating over values
    "PLR0911", # Too many return statements ({returns} > {max_returns})
    "PLR0912", # Too many branches ({branches} > {max_branches})
    "PLR0913", # Too many arguments to function call ({c_args} > {max_args})
    "PLR0915", # Too many statements ({statements} > {max_statements})
    "PLR2004",  # Magic value used in comparison, consider replacing {value} with a constant variable
    "PLW2901", # Outer {outer_kind} variable {name} overwritten by inner {inner_kind} target
    # Ignored due to performance: https://github.com/charliermarsh/ruff/issues/2923
    "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`

    "COM812",
    "ISC001"
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**" = ["S101"]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
warn_return_any = true
warn_unreachable = true
python_version = "3.12"
plugins = "pydantic.mypy"
show_error_codes = true
local_partial_types = true
strict_equality = true
no_implicit_optional = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
enable_error_code = ["ignore-without-code", "redundant-self", "truthy-iterable"]
disable_error_code = ["annotation-unchecked", "import-not-found", "import-untyped"]
extra_checks = false
no_implicit_reexport = true

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.3",
]
