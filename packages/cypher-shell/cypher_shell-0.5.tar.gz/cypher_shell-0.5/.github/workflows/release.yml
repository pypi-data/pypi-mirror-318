name: Release to PyPI

on:
  pull_request:
    types: [closed]
    branches: [main]
    paths:
      - 'cypher_shell/**'
      - 'pyproject.toml'
  workflow_dispatch:
    inputs:
      dry-run: 
        required: true
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v2.2.2
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flit
        flit install --deps production
        
    - name: Build 
      run: |
        flit build 
        flit publish
      env:
        FLIT_USERNAME: __token__
        FLIT_PASSWORD: ${{ secrets.PYPI_KEY }}

    - name: Get release version
      id: get_version
      run: |
        echo "version=$(cat pyproject.toml | grep version | awk '{print $3}' | tr -d \"\\\"\")" >> $GITHUB_OUTPUT

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_VERSION: ${{ needs.build.outputs.version }}
      run: |
        gh release create "$RELEASE_VERSION" \
          --repo="$GITHUB_REPOSITORY" \
          --title="${GITHUB_REPOSITORY#*/} ${RELEASE_VERSION}" \
          --generate-notes

  build-and-push:
    needs: [release, build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io/lemurpwned
      RELEASE_VERSION: ${{ needs.build.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/cypher-shell:latest 
            ${{ env.REGISTRY }}/cypher-shell:${{ env.RELEASE_VERSION }}
