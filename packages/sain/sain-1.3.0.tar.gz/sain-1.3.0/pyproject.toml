[tool.poetry]
name = "sain"
version = "1.3.0"
description = "Standard Rust core types implementations for Python."
authors = ["nxtlo <dhmony-99@hotmail.com>"]
license = "BSD-3-Clause license"
keywords = ["Rust", "config", "typing", "utilities"]
readme = "README.md"
repository = "https://github.com/nxtlo/sain"
packages = [{ include = "sain" }, { include = "sain/**/*.py" }]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".nox",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.isort]
profile = "black"
force_single_line = true

[tool.pyright]
include = ["sain", "examples"]
pythonVersion = "3.12"
typeCheckingMode = "strict"

reportUnnecessaryTypeIgnoreComment = "warning"
reportMissingTypeStubs = "none"
# This will always cause warnings above license.
reportIncompatibleVariableOverride = "none"
reportMissingImports = "error"
reportImportCycles = "none"
reportOverlappingOverload = "none"
reportUnboundVariable = "error"
reportUnknownParameterType = "error"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportUnknownArgumentType = "warning"
reportUnknownVariableType = "warning"
reportMissingModuleSource = "error"
reportMissingParameterType = "error"
reportMissingTypeArgument = "error"
reportGeneralTypeIssues = "warning"
reportPrivateUsage = "error"
reportIncompatibleMethodOverride = "none"
reportUnusedVariable = "error"
reportUnusedImport = "error"

[tool.pytest.ini_options]
xfail_strict = true
norecursedirs = "docs *.egg-info .git .nox .pytest_cache .venv venv"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
