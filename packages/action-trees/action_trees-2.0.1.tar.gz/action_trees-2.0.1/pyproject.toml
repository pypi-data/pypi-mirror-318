[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "action_trees"
dynamic = ["version"]
description = "Action decomposition and execution framework"
authors = [{name = "Jev Kuznetsov", email = "jev@roxautomation.com"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
]
readme = "README.md"
keywords = []  # Add keywords if any
requires-python = ">=3.11"
dependencies = []

[project.optional-dependencies]
test = ["pytest>=3","pytest-cov","pytest-asyncio"]

[tool.setuptools_scm]
write_to = "src/action_trees/version.py"
fallback_version = "0.0.0+unknown"

#--------------pylint configuration----------------
[tool.pylint.main]
jobs = 0

[tool.pylint.typecheck]
generated-members = "pydantic:{'dataclasses': {'dataclass': True}}"

[tool.pylint."messages control"]
disable = ["line-too-long","missing-function-docstring","missing-module-docstring","invalid-name", "logging-fstring-interpolation", "too-many-instance-attributes"]

#--------------mypy configuration----------------
[tool.mypy]
# Global options can be specified here
disallow_untyped_defs = true
ignore_missing_imports = true


#-----------------pytest configuration----------------
[tool.pytest.ini_options]
filterwarnings = "ignore::DeprecationWarning:dateutil.*"

log_cli = false
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%H:%M:%S"
