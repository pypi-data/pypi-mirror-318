You can use multibyte characters as table data.
Multibyte characters are also properly padded and aligned.

:Sample Code:
    .. code-block:: python
        :caption: Write a table with multi-byte character

        import pytablewriter as ptw


        def main():
            writer = ptw.RstSimpleTableWriter(
                table_name="生成に関するパターン",
                headers=["パターン名", "概要", "GoF", "Code Complete[1]"],
                value_matrix=[
                    ["Abstract Factory", "関連する一連のインスタンスを状況に応じて、適切に生成する方法を提供する。", "Yes", "Yes"],
                    ["Builder", "複合化されたインスタンスの生成過程を隠蔽する。", "Yes", "No"],
                    ["Factory Method", "実際に生成されるインスタンスに依存しない、インスタンスの生成方法を提供する。", "Yes", "Yes"],
                    ["Prototype", "同様のインスタンスを生成するために、原型のインスタンスを複製する。", "Yes", "No"],
                    ["Singleton", "あるクラスについて、インスタンスが単一であることを保証する。", "Yes", "Yes"],
                ],
            )
            writer.write_table()


        if __name__ == "__main__":
            main()

:Output:
    .. figure:: https://cdn.jsdelivr.net/gh/thombashi/pytablewriter@master/docs/pages/examples/multibyte/ss/multi_byte_char.png
       :scale: 100%
       :alt: https://github.com/thombashi/pytablewriter/blob/master/docs/pages/examples/multibyte/ss/multi_byte_char.png

       Output of multi-byte character table
