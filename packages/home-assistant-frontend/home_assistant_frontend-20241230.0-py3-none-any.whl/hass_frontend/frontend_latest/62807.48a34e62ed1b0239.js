export const ids=["62807"];export const modules={4322:function(e,a,t){t.a(e,(async function(e,a){try{var i=t(44249),n=t(57243),s=t(15093),o=t(36522),c=(t(19993),t(74633),t(42603)),d=t(7111),l=t(26779),u=e([l]);l=(u.then?(await u)():u)[0];const h="M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z";(0,i.Z)([(0,s.Mo)("ha-backup-config-encryption-key")],(function(e,a){return{F:class extends a{constructor(...a){super(...a),e(this)}},d:[{kind:"field",decorators:[(0,s.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,s.SB)()],key:"value",value:void 0},{kind:"get",key:"_value",value:function(){return this.value??""}},{kind:"method",key:"render",value:function(){return this._value?n.dy` <ha-md-list> <ha-md-list-item> <span slot="headline">Download emergency kit</span> <span slot="supporting-text"> We recommend to save this encryption key somewhere secure. </span> <ha-button slot="end" @click="${this._download}"> <ha-svg-icon .path="${h}" slot="icon"></ha-svg-icon> Download </ha-button> </ha-md-list-item> <ha-md-list-item> <span slot="headline">Change encryption key</span> <span slot="supporting-text"> All next backups will use this encryption key. </span> <ha-button class="danger" slot="end" @click="${this._change}"> Change </ha-button> </ha-md-list-item> </ha-md-list> `:n.dy` <ha-md-list> <ha-md-list-item> <span slot="headline">Set encryption key</span> <span slot="supporting-text"> Set an encryption key for your backups. </span> <ha-button slot="end" @click="${this._set}"> Set </ha-button> </ha-md-list-item> </ha-md-list> `}},{kind:"method",key:"_download",value:function(){this._value&&(0,l.VY)(this.hass,this._value)}},{kind:"method",key:"_change",value:function(){(0,c.k)(this,{currentKey:this._value,saveKey:e=>{(0,o.B)(this,"value-changed",{value:e})}})}},{kind:"method",key:"_set",value:function(){(0,d.S)(this,{saveKey:e=>{(0,o.B)(this,"value-changed",{value:e})}})}},{kind:"field",static:!0,key:"styles",value:()=>n.iv`ha-md-list{background:0 0;--md-list-item-leading-space:0;--md-list-item-trailing-space:0}.danger{--mdc-theme-primary:var(--error-color)}`}]}}),n.oi);a()}catch(e){a(e)}}))},42603:function(e,a,t){t.d(a,{k:function(){return s}});var i=t(36522);const n=()=>Promise.all([t.e("7442"),t.e("50437")]).then(t.bind(t,36943)),s=(e,a)=>new Promise((t=>{const s=a?.cancel,o=a?.submit;(0,i.B)(e,"show-dialog",{dialogTag:"ha-dialog-change-backup-encryption-key",dialogImport:n,dialogParams:{...a,cancel:()=>{t(!1),s&&s()},submit:e=>{t(e),o&&o(e)}}})}))},7111:function(e,a,t){t.d(a,{S:function(){return s}});var i=t(36522);const n=()=>Promise.all([t.e("7442"),t.e("28501")]).then(t.bind(t,82023)),s=(e,a)=>new Promise((t=>{const s=a?.cancel,o=a?.submit;(0,i.B)(e,"show-dialog",{dialogTag:"ha-dialog-set-backup-encryption-key",dialogImport:n,dialogParams:{...a,cancel:()=>{t(!1),s&&s()},submit:e=>{t(e),o&&o(e)}}})}))},13310:function(e,a,t){t.a(e,(async function(e,i){try{t.r(a);var n=t(44249),s=t(72621),o=t(57243),c=t(15093),d=t(72344),l=t(36522),u=t(22381),h=t(76320),r=(t(59826),t(54977),t(13928),t(34326),t(26779)),p=(t(87979),t(68545)),k=(t(5131),t(4322)),g=t(6384),_=e([p,k,g,r]);[p,k,g,r]=_.then?(await _)():_;(0,n.Z)([(0,c.Mo)("ha-config-backup-settings")],(function(e,a){class t extends a{constructor(...a){super(...a),e(this)}}return{F:t,d:[{kind:"field",decorators:[(0,c.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,c.Cb)({attribute:!1})],key:"cloudStatus",value:void 0},{kind:"field",decorators:[(0,c.Cb)({type:Boolean})],key:"narrow",value:()=>!1},{kind:"field",decorators:[(0,c.Cb)({attribute:!1})],key:"config",value:void 0},{kind:"field",decorators:[(0,c.SB)()],key:"_config",value:void 0},{kind:"method",key:"willUpdate",value:function(e){(0,s.Z)(t,"willUpdate",this,3)([e]),e.has("config")&&!this._config&&(this._config=this.config)}},{kind:"method",key:"firstUpdated",value:function(e){(0,s.Z)(t,"firstUpdated",this,3)([e]),this._scrollToSection()}},{kind:"method",key:"_scrollToSection",value:async function(){if("locations"===window.location.hash.substring(1)&&(0,d.p)(this.hass,"hassio")&&!this._config?.create_backup.include_all_addons&&this._config?.create_backup.include_addons?.length)return this.addEventListener("backup-addons-fetched",(async()=>{await(0,h.y)(),this._scrolltoHash()})),void setTimeout((()=>{this._clearHash()}),500);await(0,h.y)(),this._scrolltoHash()}},{kind:"method",key:"_scrolltoHash",value:function(){const e=window.location.hash.substring(1);if(e){const a=this.shadowRoot.getElementById(e);a?.scrollIntoView(),this._clearHash()}}},{kind:"method",key:"_clearHash",value:function(){history.replaceState(null,"",window.location.pathname)}},{kind:"method",key:"render",value:function(){return this._config?o.dy` <hass-subpage back-path="/config/backup" .hass="${this.hass}" .narrow="${this.narrow}" .header="${"Automatic backups"}"> <div class="content"> <ha-card id="schedule"> <div class="card-header">Automatic backups</div> <div class="card-content"> <p> Let Home Assistant take care of your backups by creating a scheduled backup that also removes older backups. </p> <ha-backup-config-schedule .hass="${this.hass}" .value="${this._config}" @value-changed="${this._scheduleConfigChanged}"></ha-backup-config-schedule> </div> </ha-card> <ha-card id="data"> <div class="card-header">Backup data</div> <div class="card-content"> <ha-backup-config-data .hass="${this.hass}" .value="${this._dataConfig}" @value-changed="${this._dataConfigChanged}" force-home-assistant hide-addon-version></ha-backup-config-data> </div> </ha-card> <ha-card class="agents" id="locations"> <div class="card-header">Locations</div> <div class="card-content"> <p> Your backup will be stored on these locations when this default backup is created. You can use all locations for custom backups. </p> <ha-backup-config-agents .hass="${this.hass}" .value="${this._config.create_backup.agent_ids}" .cloudStatus="${this.cloudStatus}" @value-changed="${this._agentsConfigChanged}"></ha-backup-config-agents> </div> </ha-card> <ha-card> <div class="card-header">Encryption key</div> <div class="card-content"> <p> Keep this encryption key in a safe place, as you will need it to access your backup, allowing it to be restored. Download them as an emergency kit file and store it somewhere safe. Encryption keeps your backups private and secure. </p> <ha-backup-config-encryption-key .hass="${this.hass}" .value="${this._config.create_backup.password}" @value-changed="${this._encryptionKeyChanged}"></ha-backup-config-encryption-key> </div> </ha-card> </div> </hass-subpage> `:o.Ld}},{kind:"method",key:"_scheduleConfigChanged",value:function(e){const a=e.detail.value;this._config={...this._config,schedule:a.schedule,retention:a.retention},this._debounceSave()}},{kind:"get",key:"_dataConfig",value:function(){const{include_addons:e,include_all_addons:a,include_database:t,include_folders:i}=this._config.create_backup;return{include_homeassistant:!0,include_database:t,include_folders:i||void 0,include_all_addons:a,include_addons:e||void 0}}},{kind:"method",key:"_dataConfigChanged",value:function(e){const a=e.detail.value;this._config={...this._config,create_backup:{...this.config.create_backup,include_database:a.include_database,include_folders:a.include_folders||null,include_all_addons:a.include_all_addons,include_addons:a.include_addons||null}},this._debounceSave()}},{kind:"method",key:"_agentsConfigChanged",value:function(e){const a=e.detail.value;this._config={...this._config,create_backup:{...this._config.create_backup,agent_ids:a}},this._debounceSave()}},{kind:"method",key:"_encryptionKeyChanged",value:function(e){const a=e.detail.value;this._config={...this._config,create_backup:{...this._config.create_backup,password:a}},this._debounceSave()}},{kind:"field",key:"_debounceSave",value(){return(0,u.D)((()=>this._save()),500)}},{kind:"method",key:"_save",value:async function(){await(0,r._r)(this.hass,{create_backup:{agent_ids:this._config.create_backup.agent_ids,include_folders:this._config.create_backup.include_folders??[],include_database:this._config.create_backup.include_database,include_addons:this._config.create_backup.include_addons??[],include_all_addons:this._config.create_backup.include_all_addons,password:this._config.create_backup.password},retention:this._config.retention,schedule:this._config.schedule.state}),(0,l.B)(this,"ha-refresh-backup-config")}},{kind:"field",static:!0,key:"styles",value:()=>o.iv`ha-card{scroll-margin-top:16px}.content{padding:28px 20px 0;max-width:690px;margin:0 auto;gap:24px;display:flex;flex-direction:column;margin-bottom:24px}.alert{--mdc-theme-primary:var(--error-color)}.card-header{padding-bottom:8px}.card-content{padding-bottom:0}`}]}}),o.oi);i()}catch(e){i(e)}}))}};
//# sourceMappingURL=62807.48a34e62ed1b0239.js.map