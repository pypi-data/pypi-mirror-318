# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var Wt=Object.defineProperty;var jt=(A,e)=>{for(var r in e)Wt(A,r,{get:e[r],enumerable:!0})};var _t="5.3.1",qA=_t;var Vt={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},p=Vt;var zt={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},R=zt;function Zt(A,e){let r=null;switch(A){case p.UInt8:{r=new Uint8Array(e);break}case p.Int8:{r=new Int8Array(e);break}case p.UInt16:{r=new Uint16Array(e);break}case p.Int16:{r=new Int16Array(e);break}case p.UInt32:{r=new Uint32Array(e);break}case p.Int32:{r=new Int32Array(e);break}case p.UInt64:{typeof globalThis.BigUint64Array=="function"?r=new BigUint64Array(e):r=new Uint8Array(e);break}case p.Int64:{typeof globalThis.BigInt64Array=="function"?r=new BigInt64Array(e):r=new Uint8Array(e);break}case R.Float32:{r=new Float32Array(e);break}case R.Float64:{r=new Float64Array(e);break}case"null":{r=null;break}case null:{r=null;break}default:throw new Error("Type is not supported as a TypedArray")}return r}var O=Zt;var Xt={Unknown:"Unknown",Scalar:"Scalar",RGB:"RGB",RGBA:"RGBA",Offset:"Offset",Vector:"Vector",Point:"Point",CovariantVector:"CovariantVector",SymmetricSecondRankTensor:"SymmetricSecondRankTensor",DiffusionTensor3D:"DiffusionTensor3D",Complex:"Complex",FixedArray:"FixedArray",Array:"Array",Matrix:"Matrix",VariableLengthVector:"VariableLengthVector",VariableSizeMatrix:"VariableSizeMatrix"},k=Xt;var YA=class{dimension;componentType;pixelType;components;constructor(e=2,r=p.UInt8,t=k.Scalar,n=1){this.dimension=e,this.componentType=r,this.pixelType=t,this.components=n}},Fe=YA;function $t(A,e,r,t,n){A[t+r*e]=n}var ke=$t;var KA=class{imageType;name="Image";origin;spacing;direction;size;metadata;data;constructor(e=new Fe){this.imageType=e;let r=e.dimension;this.origin=new Array(r),this.origin.fill(0),this.spacing=new Array(r),this.spacing.fill(1),this.direction=new Float64Array(r*r),this.direction.fill(0);for(let t=0;t<r;t++)ke(this.direction,r,t,t,1);this.size=new Array(r),this.size.fill(0),this.metadata=new Map,this.data=null}},Ue=KA;function Ar(A,e){let r={...A.imageType};if(typeof e<"u"&&typeof e.pixelType<"u"&&(r.pixelType=e.pixelType,e.pixelType===k.Scalar&&r.components!==1))throw new Error("Cannot cast multi-component image to a scalar image");typeof e<"u"&&typeof e.componentType<"u"&&e.componentType!==A.imageType.componentType&&(r.componentType=e.componentType);let t=new Ue(r);if(t.name=A.name,t.origin=Array.from(A.origin),t.spacing=Array.from(A.spacing),t.direction=A.direction.slice(),t.size=Array.from(A.size),t.metadata=new Map(JSON.parse(JSON.stringify(Array.from(A.metadata)))),A.data!==null)if(typeof e<"u"&&typeof e.componentType<"u"&&e.componentType!==A.imageType.componentType)switch(A.imageType.componentType){case p.UInt8:case p.Int8:case p.UInt16:case p.Int16:case p.UInt32:case p.Int32:case R.Float32:case R.Float64:switch(t.imageType.componentType){case p.UInt8:t.data=new Uint8Array(A.data);break;case p.Int8:t.data=new Int8Array(A.data);break;case p.UInt16:t.data=new Uint16Array(A.data);break;case p.Int16:t.data=new Int16Array(A.data);break;case p.UInt32:t.data=new Uint32Array(A.data);break;case p.Int32:t.data=new Int32Array(A.data);break;case R.Float32:t.data=new Float32Array(A.data);break;case R.Float64:t.data=new Float64Array(A.data);break;case p.UInt64:t.data=new BigUint64Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=BigInt.asIntN(64,BigInt(A.data[n]));break;case p.Int64:t.data=new BigInt64Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=BigInt.asUintN(64,BigInt(A.data[n]));break}break;case p.UInt64:case p.Int64:switch(t.imageType.componentType){case p.UInt8:t.data=new Uint8Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=Number(A.data[n]);break;case p.Int8:t.data=new Int8Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=Number(A.data[n]);break;case p.UInt16:t.data=new Uint16Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=Number(A.data[n]);break;case p.Int16:t.data=new Int16Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=Number(A.data[n]);break;case p.UInt32:t.data=new Uint32Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=Number(A.data[n]);break;case p.Int32:t.data=new Int32Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=Number(A.data[n]);break;case R.Float32:t.data=new Float32Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=Number(A.data[n]);break;case R.Float64:t.data=new Float64Array(A.data.length);for(let n=0;n<t.data.length;n++)t.data[n]=Number(A.data[n]);break;case p.UInt64:t.data=new BigUint64Array(A.data);break;case p.Int64:t.data=new BigInt64Array(A.data);break}break}else{let n=A.data.constructor;t.data=new n(A.data.length),t.data!=null&&t.data.set(A.data,0)}return t}var EA=Ar;var er={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},m=er;var Te=Symbol("Comlink.proxy"),tr=Symbol("Comlink.endpoint"),jA=Symbol("Comlink.releaseProxy"),vA=Symbol("Comlink.finalizer"),uA=Symbol("Comlink.thrown"),Le=A=>typeof A=="object"&&A!==null||typeof A=="function",rr={canHandle:A=>Le(A)&&A[Te],serialize(A){let{port1:e,port2:r}=new MessageChannel;return xe(A,e),[r,[r]]},deserialize(A){return A.start(),_A(A)}},nr={canHandle:A=>Le(A)&&uA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},Ge=new Map([["proxy",rr],["throw",nr]]);function or(A,e){for(let r of A)if(e===r||r==="*"||r instanceof RegExp&&r.test(e))return!0;return!1}function xe(A,e=globalThis,r=["*"]){e.addEventListener("message",function t(n){if(!n||!n.data)return;if(!or(r,n.origin)){console.warn(`Invalid origin '${n.origin}' for comlink proxy`);return}let{id:o,type:i,path:l}=Object.assign({path:[]},n.data),c=(n.data.argumentList||[]).map(Y),C;try{let s=l.slice(0,-1).reduce((f,g)=>f[g],A),I=l.reduce((f,g)=>f[g],A);switch(i){case"GET":C=I;break;case"SET":s[l.slice(-1)[0]]=Y(n.data.value),C=!0;break;case"APPLY":C=I.apply(s,c);break;case"CONSTRUCT":{let f=new I(...c);C=gr(f)}break;case"ENDPOINT":{let{port1:f,port2:g}=new MessageChannel;xe(A,g),C=VA(f,[f])}break;case"RELEASE":C=void 0;break;default:return}}catch(s){C={value:s,[uA]:0}}Promise.resolve(C).catch(s=>({value:s,[uA]:0})).then(s=>{let[I,f]=dA(s);e.postMessage(Object.assign(Object.assign({},I),{id:o}),f),i==="RELEASE"&&(e.removeEventListener("message",t),Oe(e),vA in A&&typeof A[vA]=="function"&&A[vA]())}).catch(s=>{let[I,f]=dA({value:new TypeError("Unserializable return value"),[uA]:0});e.postMessage(Object.assign(Object.assign({},I),{id:o}),f)})}),e.start&&e.start()}function ir(A){return A.constructor.name==="MessagePort"}function Oe(A){ir(A)&&A.close()}function _A(A,e){return WA(A,[],e)}function fA(A){if(A)throw new Error("Proxy has been released and is not useable")}function Pe(A){return v(A,{type:"RELEASE"}).then(()=>{Oe(A)})}var QA=new WeakMap,pA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(QA.get(A)||0)-1;QA.set(A,e),e===0&&Pe(A)});function ar(A,e){let r=(QA.get(e)||0)+1;QA.set(e,r),pA&&pA.register(A,e,A)}function sr(A){pA&&pA.unregister(A)}function WA(A,e=[],r=function(){}){let t=!1,n=new Proxy(r,{get(o,i){if(fA(t),i===jA)return()=>{sr(n),Pe(A),t=!0};if(i==="then"){if(e.length===0)return{then:()=>n};let l=v(A,{type:"GET",path:e.map(c=>c.toString())}).then(Y);return l.then.bind(l)}return WA(A,[...e,i])},set(o,i,l){fA(t);let[c,C]=dA(l);return v(A,{type:"SET",path:[...e,i].map(s=>s.toString()),value:c},C).then(Y)},apply(o,i,l){fA(t);let c=e[e.length-1];if(c===tr)return v(A,{type:"ENDPOINT"}).then(Y);if(c==="bind")return WA(A,e.slice(0,-1));let[C,s]=Ne(l);return v(A,{type:"APPLY",path:e.map(I=>I.toString()),argumentList:C},s).then(Y)},construct(o,i){fA(t);let[l,c]=Ne(i);return v(A,{type:"CONSTRUCT",path:e.map(C=>C.toString()),argumentList:l},c).then(Y)}});return ar(n,A),n}function Ir(A){return Array.prototype.concat.apply([],A)}function Ne(A){let e=A.map(dA);return[e.map(r=>r[0]),Ir(e.map(r=>r[1]))]}var Je=new WeakMap;function VA(A,e){return Je.set(A,e),A}function gr(A){return Object.assign(A,{[Te]:!0})}function dA(A){for(let[e,r]of Ge)if(r.canHandle(A)){let[t,n]=r.serialize(A);return[{type:"HANDLER",name:e,value:t},n]}return[{type:"RAW",value:A},Je.get(A)||[]]}function Y(A){switch(A.type){case"HANDLER":return Ge.get(A.name).deserialize(A.value);case"RAW":return A.value}}function v(A,e,r){return new Promise(t=>{let n=lr();A.addEventListener("message",function o(i){!i.data||!i.data.id||i.data.id!==n||(A.removeEventListener("message",o),t(i.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:n},e),r)})}function lr(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function eA(A,e){return function(){return A.apply(e,arguments)}}var{toString:Cr}=Object.prototype,{getPrototypeOf:XA}=Object,hA=(A=>e=>{let r=Cr.call(e);return A[r]||(A[r]=r.slice(8,-1).toLowerCase())})(Object.create(null)),T=A=>(A=A.toLowerCase(),e=>hA(e)===A),yA=A=>e=>typeof e===A,{isArray:W}=Array,tA=yA("undefined");function cr(A){return A!==null&&!tA(A)&&A.constructor!==null&&!tA(A.constructor)&&U(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var Ye=T("ArrayBuffer");function Br(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&Ye(A.buffer),e}var Er=yA("string"),U=yA("function"),Ke=yA("number"),wA=A=>A!==null&&typeof A=="object",fr=A=>A===!0||A===!1,mA=A=>{if(hA(A)!=="object")return!1;let e=XA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},ur=T("Date"),Qr=T("File"),pr=T("Blob"),dr=T("FileList"),mr=A=>wA(A)&&U(A.pipe),hr=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||U(A.append)&&((e=hA(A))==="formdata"||e==="object"&&U(A.toString)&&A.toString()==="[object FormData]"))},yr=T("URLSearchParams"),[wr,Dr,Sr,br]=["ReadableStream","Request","Response","Headers"].map(T),Rr=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function rA(A,e,{allOwnKeys:r=!1}={}){if(A===null||typeof A>"u")return;let t,n;if(typeof A!="object"&&(A=[A]),W(A))for(t=0,n=A.length;t<n;t++)e.call(null,A[t],t,A);else{let o=r?Object.getOwnPropertyNames(A):Object.keys(A),i=o.length,l;for(t=0;t<i;t++)l=o[t],e.call(null,A[l],l,A)}}function ve(A,e){e=e.toLowerCase();let r=Object.keys(A),t=r.length,n;for(;t-- >0;)if(n=r[t],e===n.toLowerCase())return n;return null}var K=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,We=A=>!tA(A)&&A!==K;function ZA(){let{caseless:A}=We(this)&&this||{},e={},r=(t,n)=>{let o=A&&ve(e,n)||n;mA(e[o])&&mA(t)?e[o]=ZA(e[o],t):mA(t)?e[o]=ZA({},t):W(t)?e[o]=t.slice():e[o]=t};for(let t=0,n=arguments.length;t<n;t++)arguments[t]&&rA(arguments[t],r);return e}var Fr=(A,e,r,{allOwnKeys:t}={})=>(rA(e,(n,o)=>{r&&U(n)?A[o]=eA(n,r):A[o]=n},{allOwnKeys:t}),A),kr=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Ur=(A,e,r,t)=>{A.prototype=Object.create(e.prototype,t),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),r&&Object.assign(A.prototype,r)},Nr=(A,e,r,t)=>{let n,o,i,l={};if(e=e||{},A==null)return e;do{for(n=Object.getOwnPropertyNames(A),o=n.length;o-- >0;)i=n[o],(!t||t(i,A,e))&&!l[i]&&(e[i]=A[i],l[i]=!0);A=r!==!1&&XA(A)}while(A&&(!r||r(A,e))&&A!==Object.prototype);return e},Tr=(A,e,r)=>{A=String(A),(r===void 0||r>A.length)&&(r=A.length),r-=e.length;let t=A.indexOf(e,r);return t!==-1&&t===r},Lr=A=>{if(!A)return null;if(W(A))return A;let e=A.length;if(!Ke(e))return null;let r=new Array(e);for(;e-- >0;)r[e]=A[e];return r},Gr=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&XA(Uint8Array)),xr=(A,e)=>{let t=(A&&A[Symbol.iterator]).call(A),n;for(;(n=t.next())&&!n.done;){let o=n.value;e.call(A,o[0],o[1])}},Or=(A,e)=>{let r,t=[];for(;(r=A.exec(e))!==null;)t.push(r);return t},Pr=T("HTMLFormElement"),Jr=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(r,t,n){return t.toUpperCase()+n}),He=(({hasOwnProperty:A})=>(e,r)=>A.call(e,r))(Object.prototype),Mr=T("RegExp"),je=(A,e)=>{let r=Object.getOwnPropertyDescriptors(A),t={};rA(r,(n,o)=>{let i;(i=e(n,o,A))!==!1&&(t[o]=i||n)}),Object.defineProperties(A,t)},Hr=A=>{je(A,(e,r)=>{if(U(A)&&["arguments","caller","callee"].indexOf(r)!==-1)return!1;let t=A[r];if(U(t)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+r+"'")})}})},qr=(A,e)=>{let r={},t=n=>{n.forEach(o=>{r[o]=!0})};return W(A)?t(A):t(String(A).split(e)),r},Yr=()=>{},Kr=(A,e)=>A!=null&&Number.isFinite(A=+A)?A:e,zA="abcdefghijklmnopqrstuvwxyz",qe="0123456789",_e={DIGIT:qe,ALPHA:zA,ALPHA_DIGIT:zA+zA.toUpperCase()+qe},vr=(A=16,e=_e.ALPHA_DIGIT)=>{let r="",{length:t}=e;for(;A--;)r+=e[Math.random()*t|0];return r};function Wr(A){return!!(A&&U(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var jr=A=>{let e=new Array(10),r=(t,n)=>{if(wA(t)){if(e.indexOf(t)>=0)return;if(!("toJSON"in t)){e[n]=t;let o=W(t)?[]:{};return rA(t,(i,l)=>{let c=r(i,n+1);!tA(c)&&(o[l]=c)}),e[n]=void 0,o}}return t};return r(A,0)},_r=T("AsyncFunction"),Vr=A=>A&&(wA(A)||U(A))&&U(A.then)&&U(A.catch),Ve=((A,e)=>A?setImmediate:e?((r,t)=>(K.addEventListener("message",({source:n,data:o})=>{n===K&&o===r&&t.length&&t.shift()()},!1),n=>{t.push(n),K.postMessage(r,"*")}))(`axios@${Math.random()}`,[]):r=>setTimeout(r))(typeof setImmediate=="function",U(K.postMessage)),zr=typeof queueMicrotask<"u"?queueMicrotask.bind(K):typeof process<"u"&&process.nextTick||Ve,a={isArray:W,isArrayBuffer:Ye,isBuffer:cr,isFormData:hr,isArrayBufferView:Br,isString:Er,isNumber:Ke,isBoolean:fr,isObject:wA,isPlainObject:mA,isReadableStream:wr,isRequest:Dr,isResponse:Sr,isHeaders:br,isUndefined:tA,isDate:ur,isFile:Qr,isBlob:pr,isRegExp:Mr,isFunction:U,isStream:mr,isURLSearchParams:yr,isTypedArray:Gr,isFileList:dr,forEach:rA,merge:ZA,extend:Fr,trim:Rr,stripBOM:kr,inherits:Ur,toFlatObject:Nr,kindOf:hA,kindOfTest:T,endsWith:Tr,toArray:Lr,forEachEntry:xr,matchAll:Or,isHTMLForm:Pr,hasOwnProperty:He,hasOwnProp:He,reduceDescriptors:je,freezeMethods:Hr,toObjectSet:qr,toCamelCase:Jr,noop:Yr,toFiniteNumber:Kr,findKey:ve,global:K,isContextDefined:We,ALPHABET:_e,generateString:vr,isSpecCompliantForm:Wr,toJSONObject:jr,isAsyncFn:_r,isThenable:Vr,setImmediate:Ve,asap:zr};function j(A,e,r,t,n){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),r&&(this.config=r),t&&(this.request=t),n&&(this.response=n)}a.inherits(j,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:a.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var ze=j.prototype,Ze={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Ze[A]={value:A}});Object.defineProperties(j,Ze);Object.defineProperty(ze,"isAxiosError",{value:!0});j.from=(A,e,r,t,n,o)=>{let i=Object.create(ze);return a.toFlatObject(A,i,function(c){return c!==Error.prototype},l=>l!=="isAxiosError"),j.call(i,A.message,e,r,t,n),i.cause=A,i.name=A.name,o&&Object.assign(i,o),i};var Q=j;var DA=null;function $A(A){return a.isPlainObject(A)||a.isArray(A)}function $e(A){return a.endsWith(A,"[]")?A.slice(0,-2):A}function Xe(A,e,r){return A?A.concat(e).map(function(n,o){return n=$e(n),!r&&o?"["+n+"]":n}).join(r?".":""):e}function Zr(A){return a.isArray(A)&&!A.some($A)}var Xr=a.toFlatObject(a,{},null,function(e){return/^is[A-Z]/.test(e)});function $r(A,e,r){if(!a.isObject(A))throw new TypeError("target must be an object");e=e||new(DA||FormData),r=a.toFlatObject(r,{metaTokens:!0,dots:!1,indexes:!1},!1,function(u,B){return!a.isUndefined(B[u])});let t=r.metaTokens,n=r.visitor||s,o=r.dots,i=r.indexes,c=(r.Blob||typeof Blob<"u"&&Blob)&&a.isSpecCompliantForm(e);if(!a.isFunction(n))throw new TypeError("visitor must be a function");function C(E){if(E===null)return"";if(a.isDate(E))return E.toISOString();if(!c&&a.isBlob(E))throw new Q("Blob is not supported. Use a Buffer instead.");return a.isArrayBuffer(E)||a.isTypedArray(E)?c&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function s(E,u,B){let h=E;if(E&&!B&&typeof E=="object"){if(a.endsWith(u,"{}"))u=t?u:u.slice(0,-2),E=JSON.stringify(E);else if(a.isArray(E)&&Zr(E)||(a.isFileList(E)||a.endsWith(u,"[]"))&&(h=a.toArray(E)))return u=$e(u),h.forEach(function(d,N){!(a.isUndefined(d)||d===null)&&e.append(i===!0?Xe([u],N,o):i===null?u:u+"[]",C(d))}),!1}return $A(E)?!0:(e.append(Xe(B,u,o),C(E)),!1)}let I=[],f=Object.assign(Xr,{defaultVisitor:s,convertValue:C,isVisitable:$A});function g(E,u){if(!a.isUndefined(E)){if(I.indexOf(E)!==-1)throw Error("Circular reference detected in "+u.join("."));I.push(E),a.forEach(E,function(h,b){(!(a.isUndefined(h)||h===null)&&n.call(e,h,a.isString(b)?b.trim():b,u,f))===!0&&g(h,u?u.concat(b):[b])}),I.pop()}}if(!a.isObject(A))throw new TypeError("data must be an object");return g(A),e}var J=$r;function At(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(t){return e[t]})}function et(A,e){this._pairs=[],A&&J(A,this,e)}var tt=et.prototype;tt.append=function(e,r){this._pairs.push([e,r])};tt.toString=function(e){let r=e?function(t){return e.call(this,t,At)}:At;return this._pairs.map(function(n){return r(n[0])+"="+r(n[1])},"").join("&")};var SA=et;function An(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function nA(A,e,r){if(!e)return A;let t=r&&r.encode||An,n=r&&r.serialize,o;if(n?o=n(e,r):o=a.isURLSearchParams(e)?e.toString():new SA(e,r).toString(t),o){let i=A.indexOf("#");i!==-1&&(A=A.slice(0,i)),A+=(A.indexOf("?")===-1?"?":"&")+o}return A}var Ae=class{constructor(){this.handlers=[]}use(e,r,t){return this.handlers.push({fulfilled:e,rejected:r,synchronous:t?t.synchronous:!1,runWhen:t?t.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){a.forEach(this.handlers,function(t){t!==null&&e(t)})}},ee=Ae;var bA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var rt=typeof URLSearchParams<"u"?URLSearchParams:SA;var nt=typeof FormData<"u"?FormData:null;var ot=typeof Blob<"u"?Blob:null;var it={isBrowser:!0,classes:{URLSearchParams:rt,FormData:nt,Blob:ot},protocols:["http","https","file","blob","url","data"]};var re={};jt(re,{hasBrowserEnv:()=>te,hasStandardBrowserEnv:()=>en,hasStandardBrowserWebWorkerEnv:()=>tn,origin:()=>rn});var te=typeof window<"u"&&typeof document<"u",en=(A=>te&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),tn=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",rn=te&&window.location.href||"http://localhost";var S={...re,...it};function ne(A,e){return J(A,new S.classes.URLSearchParams,Object.assign({visitor:function(r,t,n,o){return S.isNode&&a.isBuffer(r)?(this.append(t,r.toString("base64")),!1):o.defaultVisitor.apply(this,arguments)}},e))}function nn(A){return a.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function on(A){let e={},r=Object.keys(A),t,n=r.length,o;for(t=0;t<n;t++)o=r[t],e[o]=A[o];return e}function an(A){function e(r,t,n,o){let i=r[o++];if(i==="__proto__")return!0;let l=Number.isFinite(+i),c=o>=r.length;return i=!i&&a.isArray(n)?n.length:i,c?(a.hasOwnProp(n,i)?n[i]=[n[i],t]:n[i]=t,!l):((!n[i]||!a.isObject(n[i]))&&(n[i]=[]),e(r,t,n[i],o)&&a.isArray(n[i])&&(n[i]=on(n[i])),!l)}if(a.isFormData(A)&&a.isFunction(A.entries)){let r={};return a.forEachEntry(A,(t,n)=>{e(nn(t),n,r,0)}),r}return null}var RA=an;function sn(A,e,r){if(a.isString(A))try{return(e||JSON.parse)(A),a.trim(A)}catch(t){if(t.name!=="SyntaxError")throw t}return(r||JSON.stringify)(A)}var oe={transitional:bA,adapter:["xhr","http","fetch"],transformRequest:[function(e,r){let t=r.getContentType()||"",n=t.indexOf("application/json")>-1,o=a.isObject(e);if(o&&a.isHTMLForm(e)&&(e=new FormData(e)),a.isFormData(e))return n?JSON.stringify(RA(e)):e;if(a.isArrayBuffer(e)||a.isBuffer(e)||a.isStream(e)||a.isFile(e)||a.isBlob(e)||a.isReadableStream(e))return e;if(a.isArrayBufferView(e))return e.buffer;if(a.isURLSearchParams(e))return r.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let l;if(o){if(t.indexOf("application/x-www-form-urlencoded")>-1)return ne(e,this.formSerializer).toString();if((l=a.isFileList(e))||t.indexOf("multipart/form-data")>-1){let c=this.env&&this.env.FormData;return J(l?{"files[]":e}:e,c&&new c,this.formSerializer)}}return o||n?(r.setContentType("application/json",!1),sn(e)):e}],transformResponse:[function(e){let r=this.transitional||oe.transitional,t=r&&r.forcedJSONParsing,n=this.responseType==="json";if(a.isResponse(e)||a.isReadableStream(e))return e;if(e&&a.isString(e)&&(t&&!this.responseType||n)){let i=!(r&&r.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(l){if(i)throw l.name==="SyntaxError"?Q.from(l,Q.ERR_BAD_RESPONSE,this,null,this.response):l}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:S.classes.FormData,Blob:S.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};a.forEach(["delete","get","head","post","put","patch"],A=>{oe.headers[A]={}});var _=oe;var In=a.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),at=A=>{let e={},r,t,n;return A&&A.split(`
`).forEach(function(i){n=i.indexOf(":"),r=i.substring(0,n).trim().toLowerCase(),t=i.substring(n+1).trim(),!(!r||e[r]&&In[r])&&(r==="set-cookie"?e[r]?e[r].push(t):e[r]=[t]:e[r]=e[r]?e[r]+", "+t:t)}),e};var st=Symbol("internals");function oA(A){return A&&String(A).trim().toLowerCase()}function FA(A){return A===!1||A==null?A:a.isArray(A)?A.map(FA):String(A)}function gn(A){let e=Object.create(null),r=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,t;for(;t=r.exec(A);)e[t[1]]=t[2];return e}var ln=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function ie(A,e,r,t,n){if(a.isFunction(t))return t.call(this,e,r);if(n&&(e=r),!!a.isString(e)){if(a.isString(t))return e.indexOf(t)!==-1;if(a.isRegExp(t))return t.test(e)}}function Cn(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,r,t)=>r.toUpperCase()+t)}function cn(A,e){let r=a.toCamelCase(" "+e);["get","set","has"].forEach(t=>{Object.defineProperty(A,t+r,{value:function(n,o,i){return this[t].call(this,e,n,o,i)},configurable:!0})})}var V=class{constructor(e){e&&this.set(e)}set(e,r,t){let n=this;function o(l,c,C){let s=oA(c);if(!s)throw new Error("header name must be a non-empty string");let I=a.findKey(n,s);(!I||n[I]===void 0||C===!0||C===void 0&&n[I]!==!1)&&(n[I||c]=FA(l))}let i=(l,c)=>a.forEach(l,(C,s)=>o(C,s,c));if(a.isPlainObject(e)||e instanceof this.constructor)i(e,r);else if(a.isString(e)&&(e=e.trim())&&!ln(e))i(at(e),r);else if(a.isHeaders(e))for(let[l,c]of e.entries())o(c,l,t);else e!=null&&o(r,e,t);return this}get(e,r){if(e=oA(e),e){let t=a.findKey(this,e);if(t){let n=this[t];if(!r)return n;if(r===!0)return gn(n);if(a.isFunction(r))return r.call(this,n,t);if(a.isRegExp(r))return r.exec(n);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,r){if(e=oA(e),e){let t=a.findKey(this,e);return!!(t&&this[t]!==void 0&&(!r||ie(this,this[t],t,r)))}return!1}delete(e,r){let t=this,n=!1;function o(i){if(i=oA(i),i){let l=a.findKey(t,i);l&&(!r||ie(t,t[l],l,r))&&(delete t[l],n=!0)}}return a.isArray(e)?e.forEach(o):o(e),n}clear(e){let r=Object.keys(this),t=r.length,n=!1;for(;t--;){let o=r[t];(!e||ie(this,this[o],o,e,!0))&&(delete this[o],n=!0)}return n}normalize(e){let r=this,t={};return a.forEach(this,(n,o)=>{let i=a.findKey(t,o);if(i){r[i]=FA(n),delete r[o];return}let l=e?Cn(o):String(o).trim();l!==o&&delete r[o],r[l]=FA(n),t[l]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let r=Object.create(null);return a.forEach(this,(t,n)=>{t!=null&&t!==!1&&(r[n]=e&&a.isArray(t)?t.join(", "):t)}),r}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,r])=>e+": "+r).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...r){let t=new this(e);return r.forEach(n=>t.set(n)),t}static accessor(e){let t=(this[st]=this[st]={accessors:{}}).accessors,n=this.prototype;function o(i){let l=oA(i);t[l]||(cn(n,i),t[l]=!0)}return a.isArray(e)?e.forEach(o):o(e),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);a.reduceDescriptors(V.prototype,({value:A},e)=>{let r=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(t){this[r]=t}}});a.freezeMethods(V);var D=V;function iA(A,e){let r=this||_,t=e||r,n=D.from(t.headers),o=t.data;return a.forEach(A,function(l){o=l.call(r,o,n.normalize(),e?e.status:void 0)}),n.normalize(),o}function aA(A){return!!(A&&A.__CANCEL__)}function It(A,e,r){Q.call(this,A??"canceled",Q.ERR_CANCELED,e,r),this.name="CanceledError"}a.inherits(It,Q,{__CANCEL__:!0});var P=It;function sA(A,e,r){let t=r.config.validateStatus;!r.status||!t||t(r.status)?A(r):e(new Q("Request failed with status code "+r.status,[Q.ERR_BAD_REQUEST,Q.ERR_BAD_RESPONSE][Math.floor(r.status/100)-4],r.config,r.request,r))}function ae(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function Bn(A,e){A=A||10;let r=new Array(A),t=new Array(A),n=0,o=0,i;return e=e!==void 0?e:1e3,function(c){let C=Date.now(),s=t[o];i||(i=C),r[n]=c,t[n]=C;let I=o,f=0;for(;I!==n;)f+=r[I++],I=I%A;if(n=(n+1)%A,n===o&&(o=(o+1)%A),C-i<e)return;let g=s&&C-s;return g?Math.round(f*1e3/g):void 0}}var gt=Bn;function En(A,e){let r=0,t=1e3/e,n,o,i=(C,s=Date.now())=>{r=s,n=null,o&&(clearTimeout(o),o=null),A.apply(null,C)};return[(...C)=>{let s=Date.now(),I=s-r;I>=t?i(C,s):(n=C,o||(o=setTimeout(()=>{o=null,i(n)},t-I)))},()=>n&&i(n)]}var lt=En;var z=(A,e,r=3)=>{let t=0,n=gt(50,250);return lt(o=>{let i=o.loaded,l=o.lengthComputable?o.total:void 0,c=i-t,C=n(c),s=i<=l;t=i;let I={loaded:i,total:l,progress:l?i/l:void 0,bytes:c,rate:C||void 0,estimated:C&&l&&s?(l-i)/C:void 0,event:o,lengthComputable:l!=null,[e?"download":"upload"]:!0};A(I)},r)},se=(A,e)=>{let r=A!=null;return[t=>e[0]({lengthComputable:r,total:A,loaded:t}),e[1]]},Ie=A=>(...e)=>a.asap(()=>A(...e));var Ct=S.hasStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a"),t;function n(o){let i=o;return e&&(r.setAttribute("href",i),i=r.href),r.setAttribute("href",i),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:r.pathname.charAt(0)==="/"?r.pathname:"/"+r.pathname}}return t=n(window.location.href),function(i){let l=a.isString(i)?n(i):i;return l.protocol===t.protocol&&l.host===t.host}}():function(){return function(){return!0}}();var ct=S.hasStandardBrowserEnv?{write(A,e,r,t,n,o){let i=[A+"="+encodeURIComponent(e)];a.isNumber(r)&&i.push("expires="+new Date(r).toGMTString()),a.isString(t)&&i.push("path="+t),a.isString(n)&&i.push("domain="+n),o===!0&&i.push("secure"),document.cookie=i.join("; ")},read(A){let e=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function ge(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function le(A,e){return e?A.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):A}function IA(A,e){return A&&!ge(e)?le(A,e):e}var Bt=A=>A instanceof D?{...A}:A;function L(A,e){e=e||{};let r={};function t(C,s,I){return a.isPlainObject(C)&&a.isPlainObject(s)?a.merge.call({caseless:I},C,s):a.isPlainObject(s)?a.merge({},s):a.isArray(s)?s.slice():s}function n(C,s,I){if(a.isUndefined(s)){if(!a.isUndefined(C))return t(void 0,C,I)}else return t(C,s,I)}function o(C,s){if(!a.isUndefined(s))return t(void 0,s)}function i(C,s){if(a.isUndefined(s)){if(!a.isUndefined(C))return t(void 0,C)}else return t(void 0,s)}function l(C,s,I){if(I in e)return t(C,s);if(I in A)return t(void 0,C)}let c={url:o,method:o,data:o,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,withXSRFToken:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:l,headers:(C,s)=>n(Bt(C),Bt(s),!0)};return a.forEach(Object.keys(Object.assign({},A,e)),function(s){let I=c[s]||n,f=I(A[s],e[s],s);a.isUndefined(f)&&I!==l||(r[s]=f)}),r}var kA=A=>{let e=L({},A),{data:r,withXSRFToken:t,xsrfHeaderName:n,xsrfCookieName:o,headers:i,auth:l}=e;e.headers=i=D.from(i),e.url=nA(IA(e.baseURL,e.url),A.params,A.paramsSerializer),l&&i.set("Authorization","Basic "+btoa((l.username||"")+":"+(l.password?unescape(encodeURIComponent(l.password)):"")));let c;if(a.isFormData(r)){if(S.hasStandardBrowserEnv||S.hasStandardBrowserWebWorkerEnv)i.setContentType(void 0);else if((c=i.getContentType())!==!1){let[C,...s]=c?c.split(";").map(I=>I.trim()).filter(Boolean):[];i.setContentType([C||"multipart/form-data",...s].join("; "))}}if(S.hasStandardBrowserEnv&&(t&&a.isFunction(t)&&(t=t(e)),t||t!==!1&&Ct(e.url))){let C=n&&o&&ct.read(o);C&&i.set(n,C)}return e};var fn=typeof XMLHttpRequest<"u",Et=fn&&function(A){return new Promise(function(r,t){let n=kA(A),o=n.data,i=D.from(n.headers).normalize(),{responseType:l,onUploadProgress:c,onDownloadProgress:C}=n,s,I,f,g,E;function u(){g&&g(),E&&E(),n.cancelToken&&n.cancelToken.unsubscribe(s),n.signal&&n.signal.removeEventListener("abort",s)}let B=new XMLHttpRequest;B.open(n.method.toUpperCase(),n.url,!0),B.timeout=n.timeout;function h(){if(!B)return;let d=D.from("getAllResponseHeaders"in B&&B.getAllResponseHeaders()),q={data:!l||l==="text"||l==="json"?B.responseText:B.response,status:B.status,statusText:B.statusText,headers:d,config:A,request:B};sA(function(x){r(x),u()},function(x){t(x),u()},q),B=null}"onloadend"in B?B.onloadend=h:B.onreadystatechange=function(){!B||B.readyState!==4||B.status===0&&!(B.responseURL&&B.responseURL.indexOf("file:")===0)||setTimeout(h)},B.onabort=function(){B&&(t(new Q("Request aborted",Q.ECONNABORTED,A,B)),B=null)},B.onerror=function(){t(new Q("Network Error",Q.ERR_NETWORK,A,B)),B=null},B.ontimeout=function(){let N=n.timeout?"timeout of "+n.timeout+"ms exceeded":"timeout exceeded",q=n.transitional||bA;n.timeoutErrorMessage&&(N=n.timeoutErrorMessage),t(new Q(N,q.clarifyTimeoutError?Q.ETIMEDOUT:Q.ECONNABORTED,A,B)),B=null},o===void 0&&i.setContentType(null),"setRequestHeader"in B&&a.forEach(i.toJSON(),function(N,q){B.setRequestHeader(q,N)}),a.isUndefined(n.withCredentials)||(B.withCredentials=!!n.withCredentials),l&&l!=="json"&&(B.responseType=n.responseType),C&&([f,E]=z(C,!0),B.addEventListener("progress",f)),c&&B.upload&&([I,g]=z(c),B.upload.addEventListener("progress",I),B.upload.addEventListener("loadend",g)),(n.cancelToken||n.signal)&&(s=d=>{B&&(t(!d||d.type?new P(null,A,B):d),B.abort(),B=null)},n.cancelToken&&n.cancelToken.subscribe(s),n.signal&&(n.signal.aborted?s():n.signal.addEventListener("abort",s)));let b=ae(n.url);if(b&&S.protocols.indexOf(b)===-1){t(new Q("Unsupported protocol "+b+":",Q.ERR_BAD_REQUEST,A));return}B.send(o||null)})};var un=(A,e)=>{let r=new AbortController,t,n=function(c){if(!t){t=!0,i();let C=c instanceof Error?c:this.reason;r.abort(C instanceof Q?C:new P(C instanceof Error?C.message:C))}},o=e&&setTimeout(()=>{n(new Q(`timeout ${e} of ms exceeded`,Q.ETIMEDOUT))},e),i=()=>{A&&(o&&clearTimeout(o),o=null,A.forEach(c=>{c&&(c.removeEventListener?c.removeEventListener("abort",n):c.unsubscribe(n))}),A=null)};A.forEach(c=>c&&c.addEventListener&&c.addEventListener("abort",n));let{signal:l}=r;return l.unsubscribe=i,[l,()=>{o&&clearTimeout(o),o=null}]},ft=un;var Qn=function*(A,e){let r=A.byteLength;if(!e||r<e){yield A;return}let t=0,n;for(;t<r;)n=t+e,yield A.slice(t,n),t=n},pn=async function*(A,e,r){for await(let t of A)yield*Qn(ArrayBuffer.isView(t)?t:await r(String(t)),e)},Ce=(A,e,r,t,n)=>{let o=pn(A,e,n),i=0,l,c=C=>{l||(l=!0,t&&t(C))};return new ReadableStream({async pull(C){try{let{done:s,value:I}=await o.next();if(s){c(),C.close();return}let f=I.byteLength;if(r){let g=i+=f;r(g)}C.enqueue(new Uint8Array(I))}catch(s){throw c(s),s}},cancel(C){return c(C),o.return()}},{highWaterMark:2})};var NA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",Qt=NA&&typeof ReadableStream=="function",ce=NA&&(typeof TextEncoder=="function"?(A=>e=>A.encode(e))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),pt=(A,...e)=>{try{return!!A(...e)}catch{return!1}},dn=Qt&&pt(()=>{let A=!1,e=new Request(S.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!e}),ut=64*1024,Be=Qt&&pt(()=>a.isReadableStream(new Response("").body)),UA={stream:Be&&(A=>A.body)};NA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(e=>{!UA[e]&&(UA[e]=a.isFunction(A[e])?r=>r[e]():(r,t)=>{throw new Q(`Response type '${e}' is not supported`,Q.ERR_NOT_SUPPORT,t)})})})(new Response);var mn=async A=>{if(A==null)return 0;if(a.isBlob(A))return A.size;if(a.isSpecCompliantForm(A))return(await new Request(A).arrayBuffer()).byteLength;if(a.isArrayBufferView(A)||a.isArrayBuffer(A))return A.byteLength;if(a.isURLSearchParams(A)&&(A=A+""),a.isString(A))return(await ce(A)).byteLength},hn=async(A,e)=>{let r=a.toFiniteNumber(A.getContentLength());return r??mn(e)},dt=NA&&(async A=>{let{url:e,method:r,data:t,signal:n,cancelToken:o,timeout:i,onDownloadProgress:l,onUploadProgress:c,responseType:C,headers:s,withCredentials:I="same-origin",fetchOptions:f}=kA(A);C=C?(C+"").toLowerCase():"text";let[g,E]=n||o||i?ft([n,o],i):[],u,B,h=()=>{!u&&setTimeout(()=>{g&&g.unsubscribe()}),u=!0},b;try{if(c&&dn&&r!=="get"&&r!=="head"&&(b=await hn(s,t))!==0){let G=new Request(e,{method:"POST",body:t,duplex:"half"}),x;if(a.isFormData(t)&&(x=G.headers.get("content-type"))&&s.setContentType(x),G.body){let[HA,BA]=se(b,z(Ie(c)));t=Ce(G.body,ut,HA,BA,ce)}}a.isString(I)||(I=I?"include":"omit"),B=new Request(e,{...f,signal:g,method:r.toUpperCase(),headers:s.normalize().toJSON(),body:t,duplex:"half",credentials:I});let d=await fetch(B),N=Be&&(C==="stream"||C==="response");if(Be&&(l||N)){let G={};["status","statusText","headers"].forEach(Re=>{G[Re]=d[Re]});let x=a.toFiniteNumber(d.headers.get("content-length")),[HA,BA]=l&&se(x,z(Ie(l),!0))||[];d=new Response(Ce(d.body,ut,HA,()=>{BA&&BA(),N&&h()},ce),G)}C=C||"text";let q=await UA[a.findKey(UA,C)||"text"](d,A);return!N&&h(),E&&E(),await new Promise((G,x)=>{sA(G,x,{data:q,headers:D.from(d.headers),status:d.status,statusText:d.statusText,config:A,request:B})})}catch(d){throw h(),d&&d.name==="TypeError"&&/fetch/i.test(d.message)?Object.assign(new Q("Network Error",Q.ERR_NETWORK,A,B),{cause:d.cause||d}):Q.from(d,d&&d.code,A,B)}});var Ee={http:DA,xhr:Et,fetch:dt};a.forEach(Ee,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var mt=A=>`- ${A}`,yn=A=>a.isFunction(A)||A===null||A===!1,TA={getAdapter:A=>{A=a.isArray(A)?A:[A];let{length:e}=A,r,t,n={};for(let o=0;o<e;o++){r=A[o];let i;if(t=r,!yn(r)&&(t=Ee[(i=String(r)).toLowerCase()],t===void 0))throw new Q(`Unknown adapter '${i}'`);if(t)break;n[i||"#"+o]=t}if(!t){let o=Object.entries(n).map(([l,c])=>`adapter ${l} `+(c===!1?"is not supported by the environment":"is not available in the build")),i=e?o.length>1?`since :
`+o.map(mt).join(`
`):" "+mt(o[0]):"as no adapter specified";throw new Q("There is no suitable adapter to dispatch the request "+i,"ERR_NOT_SUPPORT")}return t},adapters:Ee};function fe(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new P(null,A)}function LA(A){return fe(A),A.headers=D.from(A.headers),A.data=iA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),TA.getAdapter(A.adapter||_.adapter)(A).then(function(t){return fe(A),t.data=iA.call(A,A.transformResponse,t),t.headers=D.from(t.headers),t},function(t){return aA(t)||(fe(A),t&&t.response&&(t.response.data=iA.call(A,A.transformResponse,t.response),t.response.headers=D.from(t.response.headers))),Promise.reject(t)})}var GA="1.7.4";var ue={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{ue[A]=function(t){return typeof t===A||"a"+(e<1?"n ":" ")+A}});var ht={};ue.transitional=function(e,r,t){function n(o,i){return"[Axios v"+GA+"] Transitional option '"+o+"'"+i+(t?". "+t:"")}return(o,i,l)=>{if(e===!1)throw new Q(n(i," has been removed"+(r?" in "+r:"")),Q.ERR_DEPRECATED);return r&&!ht[i]&&(ht[i]=!0,console.warn(n(i," has been deprecated since v"+r+" and will be removed in the near future"))),e?e(o,i,l):!0}};function wn(A,e,r){if(typeof A!="object")throw new Q("options must be an object",Q.ERR_BAD_OPTION_VALUE);let t=Object.keys(A),n=t.length;for(;n-- >0;){let o=t[n],i=e[o];if(i){let l=A[o],c=l===void 0||i(l,o,A);if(c!==!0)throw new Q("option "+o+" must be "+c,Q.ERR_BAD_OPTION_VALUE);continue}if(r!==!0)throw new Q("Unknown option "+o,Q.ERR_BAD_OPTION)}}var xA={assertOptions:wn,validators:ue};var M=xA.validators,Z=class{constructor(e){this.defaults=e,this.interceptors={request:new ee,response:new ee}}async request(e,r){try{return await this._request(e,r)}catch(t){if(t instanceof Error){let n;Error.captureStackTrace?Error.captureStackTrace(n={}):n=new Error;let o=n.stack?n.stack.replace(/^.+\n/,""):"";try{t.stack?o&&!String(t.stack).endsWith(o.replace(/^.+\n.+\n/,""))&&(t.stack+=`
`+o):t.stack=o}catch{}}throw t}}_request(e,r){typeof e=="string"?(r=r||{},r.url=e):r=e||{},r=L(this.defaults,r);let{transitional:t,paramsSerializer:n,headers:o}=r;t!==void 0&&xA.assertOptions(t,{silentJSONParsing:M.transitional(M.boolean),forcedJSONParsing:M.transitional(M.boolean),clarifyTimeoutError:M.transitional(M.boolean)},!1),n!=null&&(a.isFunction(n)?r.paramsSerializer={serialize:n}:xA.assertOptions(n,{encode:M.function,serialize:M.function},!0)),r.method=(r.method||this.defaults.method||"get").toLowerCase();let i=o&&a.merge(o.common,o[r.method]);o&&a.forEach(["delete","get","head","post","put","patch","common"],E=>{delete o[E]}),r.headers=D.concat(i,o);let l=[],c=!0;this.interceptors.request.forEach(function(u){typeof u.runWhen=="function"&&u.runWhen(r)===!1||(c=c&&u.synchronous,l.unshift(u.fulfilled,u.rejected))});let C=[];this.interceptors.response.forEach(function(u){C.push(u.fulfilled,u.rejected)});let s,I=0,f;if(!c){let E=[LA.bind(this),void 0];for(E.unshift.apply(E,l),E.push.apply(E,C),f=E.length,s=Promise.resolve(r);I<f;)s=s.then(E[I++],E[I++]);return s}f=l.length;let g=r;for(I=0;I<f;){let E=l[I++],u=l[I++];try{g=E(g)}catch(B){u.call(this,B);break}}try{s=LA.call(this,g)}catch(E){return Promise.reject(E)}for(I=0,f=C.length;I<f;)s=s.then(C[I++],C[I++]);return s}getUri(e){e=L(this.defaults,e);let r=IA(e.baseURL,e.url);return nA(r,e.params,e.paramsSerializer)}};a.forEach(["delete","get","head","options"],function(e){Z.prototype[e]=function(r,t){return this.request(L(t||{},{method:e,url:r,data:(t||{}).data}))}});a.forEach(["post","put","patch"],function(e){function r(t){return function(o,i,l){return this.request(L(l||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:o,data:i}))}}Z.prototype[e]=r(),Z.prototype[e+"Form"]=r(!0)});var gA=Z;var Qe=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let r;this.promise=new Promise(function(o){r=o});let t=this;this.promise.then(n=>{if(!t._listeners)return;let o=t._listeners.length;for(;o-- >0;)t._listeners[o](n);t._listeners=null}),this.promise.then=n=>{let o,i=new Promise(l=>{t.subscribe(l),o=l}).then(n);return i.cancel=function(){t.unsubscribe(o)},i},e(function(o,i,l){t.reason||(t.reason=new P(o,i,l),r(t.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let r=this._listeners.indexOf(e);r!==-1&&this._listeners.splice(r,1)}static source(){let e;return{token:new A(function(n){e=n}),cancel:e}}},yt=Qe;function pe(A){return function(r){return A.apply(null,r)}}function de(A){return a.isObject(A)&&A.isAxiosError===!0}var me={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(me).forEach(([A,e])=>{me[e]=A});var wt=me;function Dt(A){let e=new gA(A),r=eA(gA.prototype.request,e);return a.extend(r,gA.prototype,e,{allOwnKeys:!0}),a.extend(r,e,null,{allOwnKeys:!0}),r.create=function(n){return Dt(L(A,n))},r}var y=Dt(_);y.Axios=gA;y.CanceledError=P;y.CancelToken=yt;y.isCancel=aA;y.VERSION=GA;y.toFormData=J;y.AxiosError=Q;y.Cancel=y.CanceledError;y.all=function(e){return Promise.all(e)};y.spread=pe;y.isAxiosError=de;y.mergeConfig=L;y.AxiosHeaders=D;y.formToJSON=A=>RA(a.isHTMLForm(A)?new FormData(A):A);y.getAdapter=TA.getAdapter;y.HttpStatusCode=wt;y.default=y;var X=y;var{Axios:Us,AxiosError:Ns,CanceledError:Ts,isCancel:Ls,CancelToken:Gs,VERSION:xs,all:Os,Cancel:Ps,isAxiosError:Js,spread:Ms,toFormData:Hs,AxiosHeaders:qs,HttpStatusCode:Ys,formToJSON:Ks,getAdapter:vs,mergeConfig:Ws}=X;async function Dn(A,e){let r=A,t=null;if(r==null)t=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(r.startsWith("http")){let n=await X.get(r,{responseType:"blob",params:e}),o=URL.createObjectURL(n.data);t=new Worker(o,{type:"module"})}else t=new Worker(r,{type:"module"});return t}var lA=Dn;function St(A){let e=_A(A),r=A;return r.terminated=!1,r.workerProxy=e,r.originalTerminate=r.terminate,r.terminate=()=>{r.terminated=!0,r.workerProxy[jA](),r.originalTerminate()},{workerProxy:e,worker:r}}async function Sn(A,e,r){let t;if(A!=null){let o=A;return o.workerProxy!==void 0?(t=o.workerProxy,{workerProxy:t,worker:o}):St(A)}let n=await lA(e,r);return St(n)}var bt=Sn;async function bn(A,e,r){let t="unknown";typeof A!="string"?t=A.href:A.startsWith("http")?t=A:t=typeof e<"u"?`${e}/${A}`:A,t.endsWith(".js")&&(t=t.substring(0,t.length-3)),t.endsWith(".wasm")&&(t=t.substring(0,t.length-5));let n=`${t}.wasm`,i=(await X.get(n,{responseType:"arraybuffer",params:r})).data;return(await import(`${t}.js`)).default({wasmBinary:i})}var Rt=bn;var Ft=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var Nt=typeof globalThis.SharedArrayBuffer=="function",kt=new TextEncoder,Ut=new TextDecoder("utf-8");function Rn(A,e){let r={flags:"r",encoding:"binary"},t=A.fs_open(e,r.flags),o=A.fs_stat(e).size,i=null;Nt?i=new SharedArrayBuffer(o):i=new ArrayBuffer(o);let l=new Uint8Array(i);return A.fs_read(t,l,0,o,0),A.fs_close(t),l}function Tt(A,e,r){let t=null;Nt?t=new SharedArrayBuffer(r):t=new ArrayBuffer(r);let n=new Uint8Array(t),o=new Uint8Array(A.HEAPU8.buffer,e,r);return n.set(o),n}function w(A,e,r,t){let n=0;return e!==null&&(n=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,r,t,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),n)),n}function H(A,e,r){let t=JSON.stringify(e),n=A.lengthBytesUTF8(t)+1,o=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,r,n]);A.stringToUTF8(t,o,n)}function F(A,e,r,t){let n=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,r]),o=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,r]),i=Tt(A,n,o);return O(t,i.buffer)}function CA(A,e){let r=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),t=A.UTF8ToString(r);return JSON.parse(t)}function Fn(A,e,r,t){t!=null&&t.length>0&&t.forEach(function(C,s){switch(C.type){case m.TextStream:{let I=kt.encode(C.data.data),f=w(A,I,s,0),g={size:I.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};H(A,g,s);break}case m.JsonCompatible:{let I=kt.encode(JSON.stringify(C.data)),f=w(A,I,s,0),g={size:I.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};H(A,g,s);break}case m.BinaryStream:{let I=C.data.data,f=w(A,I,s,0),g={size:I.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};H(A,g,s);break}case m.TextFile:{A.fs_writeFile(C.data.path,C.data.data);break}case m.BinaryFile:{A.fs_writeFile(C.data.path,C.data.data);break}case m.Image:{let I=C.data,f=w(A,I.data,s,0),g=w(A,I.direction,s,1),E=typeof I.metadata?.entries<"u"?Array.from(I.metadata.entries()):[],u={imageType:I.imageType,name:I.name,origin:I.origin,spacing:I.spacing,direction:`data:application/vnd.itk.address,0:${g}`,size:I.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};H(A,u,s);break}case m.Mesh:{let I=C.data,f=w(A,I.points,s,0),g=w(A,I.cells,s,1),E=w(A,I.pointData,s,2),u=w(A,I.cellData,s,3),B={meshType:I.meshType,name:I.name,numberOfPoints:I.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:I.numberOfCells,cells:`data:application/vnd.itk.address,0:${g}`,cellBufferSize:I.cellBufferSize,numberOfPointPixels:I.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:I.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${u}`};H(A,B,s);break}case m.PointSet:{let I=C.data,f=w(A,I.points,s,0),g=w(A,I.pointData,s,1),E={pointSetType:I.pointSetType,name:I.name,numberOfPoints:I.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:I.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${g}`};H(A,E,s);break}case m.TransformList:{let I=C.data,f=[];I.forEach((g,E)=>{let B=`data:application/vnd.itk.address,0:${w(A,g.fixedParameters,s,E*2)}`,b=`data:application/vnd.itk.address,0:${w(A,g.parameters,s,E*2+1)}`,d={transformType:g.transformType,numberOfFixedParameters:g.numberOfFixedParameters,numberOfParameters:g.numberOfParameters,name:g.name,inputSpaceName:g.inputSpaceName,outputSpaceName:g.outputSpaceName,parameters:b,fixedParameters:B};f.push(d)}),H(A,f,s);break}case m.PolyData:{let I=C.data,f=w(A,I.points,s,0),g=w(A,I.vertices,s,1),E=w(A,I.lines,s,2),u=w(A,I.polygons,s,3),B=w(A,I.triangleStrips,s,4),h=w(A,I.pointData,s,5),b=w(A,I.pointData,s,6),d={polyDataType:I.polyDataType,name:I.name,numberOfPoints:I.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:I.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${g}`,linesBufferSize:I.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:I.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${u}`,triangleStripsBufferSize:I.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${B}`,numberOfPointPixels:I.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${h}`,numberOfCellPixels:I.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${b}`};H(A,d,s);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let n=A.stackSave(),o=0;try{o=A.callMain(e.slice())}catch(C){throw typeof C=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(C)):console.error("Build module in Debug mode for exception message information.")),C}finally{A.stackRestore(n)}let i=A.getModuleStdout(),l=A.getModuleStderr(),c=[];return r!=null&&r.length>0&&o===0&&r.forEach(function(C,s){let I=null;switch(C.type){case m.TextStream:{let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),u=new Uint8Array(A.HEAPU8.buffer,g,E);I={data:Ut.decode(u)};break}case m.JsonCompatible:{let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]),u=new Uint8Array(A.HEAPU8.buffer,g,E);I=JSON.parse(Ut.decode(u));break}case m.BinaryStream:{let g=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,s,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,s,0]);I={data:Tt(A,g,E)};break}case m.TextFile:{I={path:C.data.path,data:A.fs_readFile(C.data.path,{encoding:"utf8"})};break}case m.BinaryFile:{I={path:C.data.path,data:Rn(A,C.data.path)};break}case m.Image:{let g=CA(A,s);g.data=F(A,s,0,g.imageType.componentType),g.direction=F(A,s,1,R.Float64),g.metadata=new Map(g.metadata),I=g;break}case m.Mesh:{let g=CA(A,s);g.numberOfPoints>0?g.points=F(A,s,0,g.meshType.pointComponentType):g.points=O(g.meshType.pointComponentType,new ArrayBuffer(0)),g.numberOfCells>0?g.cells=F(A,s,1,g.meshType.cellComponentType):g.cells=O(g.meshType.cellComponentType,new ArrayBuffer(0)),g.numberOfPointPixels>0?g.pointData=F(A,s,2,g.meshType.pointPixelComponentType):g.pointData=O(g.meshType.pointPixelComponentType,new ArrayBuffer(0)),g.numberOfCellPixels>0?g.cellData=F(A,s,3,g.meshType.cellPixelComponentType):g.cellData=O(g.meshType.cellPixelComponentType,new ArrayBuffer(0)),I=g;break}case m.PointSet:{let g=CA(A,s);g.numberOfPoints>0?g.points=F(A,s,0,g.pointSetType.pointComponentType):g.points=O(g.pointSetType.pointComponentType,new ArrayBuffer(0)),g.numberOfPointPixels>0?g.pointData=F(A,s,1,g.pointSetType.pointPixelComponentType):g.pointData=O(g.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),I=g;break}case m.TransformList:{let g=CA(A,s);g.forEach((E,u)=>{E.numberOfFixedParameters>0&&(g[u].fixedParameters=F(A,s,u*2,E.transformType.parametersValueType)),E.numberOfFixedParameters>0&&(g[u].parameters=F(A,s,u*2+1,E.transformType.parametersValueType))}),I=g;break}case m.PolyData:{let g=CA(A,s);g.numberOfPoints>0?g.points=F(A,s,0,R.Float32):g.points=new Float32Array,g.verticesBufferSize>0?g.vertices=F(A,s,1,p.UInt32):g.vertices=new Uint32Array,g.linesBufferSize>0?g.lines=F(A,s,2,p.UInt32):g.lines=new Uint32Array,g.polygonsBufferSize>0?g.polygons=F(A,s,3,p.UInt32):g.polygons=new Uint32Array,g.triangleStripsBufferSize>0?g.triangleStrips=F(A,s,4,p.UInt32):g.triangleStrips=new Uint32Array,g.numberOfPointPixels>0?g.pointData=F(A,s,5,g.polyDataType.pointPixelComponentType):g.pointData=O(g.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),g.numberOfCellPixels>0?g.cellData=F(A,s,6,g.polyDataType.cellPixelComponentType):g.cellData=O(g.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),I=g;break}default:throw Error("Unsupported output InterfaceType")}let f={type:C.type,data:I};c.push(f)}),{returnValue:o,stdout:i,stderr:l,outputs:c}}var Lt=Fn;var kn=typeof globalThis.SharedArrayBuffer<"u";function Un(A,e){if(A==null)return[];let r=[];for(let t=0;t<A.length;t++){let n=Nn(A[t],e);n!==null&&r.push(n)}return r}function Nn(A,e){if(A==null)return null;let r=null;return A.buffer!==void 0?r=A.buffer:A.byteLength!==void 0&&(r=A),kn&&r instanceof SharedArrayBuffer?null:e?r:r.slice(0)}var Gt=Un;function Tn(A){return[A.data,A.direction]}var xt=Tn;function Ln(A){return[A.points,A.pointData,A.cells,A.cellData]}var Ot=Ln;function Gn(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var Pt=Gn;var xn;function OA(){return xn}var On;function Jt(){return On}var Pn;function PA(){return Pn}var he=new Map;function Jn(){let A=PA();return typeof A>"u"&&(A=null),A}function Mt(){let A=OA();return typeof A>"u"&&(A=new URL("/pipelines",document.location.origin).href),A}function JA(){let A=Jt();return typeof A>"u"&&(A={}),A}async function Mn(A,e,r){let t=A,n=A;if(typeof A!="string"&&(t=new URL(A.href),n=t.href),he.has(n))return he.get(n);{let o=await Rt(A,e?.toString()??Mt(),r??JA());return he.set(n,o),o}}async function Hn(A,e,r,t,n){if(!await Ft()){let B="WebAssembly SIMD support is required -- please update your browser.";throw alert(B),new Error(B)}let o=n?.webWorker??null;if(o===!1){let B=await Mn(A.toString(),n?.pipelineBaseUrl,n?.pipelineQueryParams??JA());return Lt(B,e,r,t)}let i=o,l=n?.pipelineWorkerUrl??Jn(),c=typeof l!="string"&&typeof l?.href<"u"?l.href:l,{workerProxy:C,worker:s}=await bt(i,c,n?.pipelineQueryParams??JA());i=s;let I=[];t!=null&&t.length>0&&t.forEach(function(B){if(B.type===m.BinaryStream){let h=B.data.data;I.push(h)}else if(B.type===m.BinaryFile){let h=B.data.data;I.push(h)}else if(B.type===m.Image){let h=B.data;h.data!==null&&I.push(...xt(h))}else if(B.type===m.Mesh){let h=B.data;I.push(...Ot(h))}else if(B.type===m.PolyData){let h=B.data;I.push(...Pt(h))}});let f=n?.pipelineBaseUrl??Mt(),g=typeof f!="string"&&typeof f?.href<"u"?f.href:f,E=t!=null?VA(t,Gt(I,n?.noCopy)):null,u=await C.runPipeline(A.toString(),g,e,r,E,n?.pipelineQueryParams??JA());return{returnValue:u.returnValue,stdout:u.stdout,stderr:u.stderr,outputs:u.outputs,webWorker:i}}var cA=Hn;var qn=null;function Ht(){return qn}var ye,Yn=`https://cdn.jsdelivr.net/npm/@itk-wasm/compare-images@${qA}/dist/pipelines`;function xI(A){ye=A}function MA(){if(typeof ye<"u")return ye;let A=OA();return typeof A<"u"?A:Yn}var we,Kn=null;function qt(A){we=A}function $(){if(typeof we<"u")return we;let A=PA();return typeof A<"u"?A:Kn}var AA=null;async function Yt(){let A=$(),e=typeof A!="string"&&typeof A?.href<"u"?A.href:A;AA=await lA(e)}function YI(A){AA=A}async function Kt(){if(AA!==null)return AA.terminated&&await Yt(),AA;let A=Ht();return A!==null?A:(await Yt(),AA)}async function vn(A,e={baselineImages:[]}){let r=[{type:m.JsonCompatible},{type:m.Image},{type:m.Image}],t=[{type:m.Image,data:A}],n=[];if(n.push("0"),n.push("0"),n.push("1"),n.push("2"),n.push("--memory-io"),typeof e.baselineImages<"u"){if(e.baselineImages.length<1)throw new Error('"baseline-images" option must have a length > 1');n.push("--baseline-images"),await Promise.all(e.baselineImages.map(async u=>{let B=t.length.toString();t.push({type:m.Image,data:u}),n.push(B)}))}typeof e.differenceThreshold<"u"&&n.push("--difference-threshold",e.differenceThreshold.toString()),typeof e.radiusTolerance<"u"&&n.push("--radius-tolerance",e.radiusTolerance.toString()),typeof e.spatialTolerance<"u"&&n.push("--spatial-tolerance",e.spatialTolerance.toString()),typeof e.numberOfPixelsTolerance<"u"&&n.push("--number-of-pixels-tolerance",e.numberOfPixelsTolerance.toString()),typeof e.ignoreBoundaryPixels<"u"&&e.ignoreBoundaryPixels&&n.push("--ignore-boundary-pixels");let C="compare-double-images",{webWorker:s,returnValue:I,stderr:f,outputs:g}=await cA(C,n,r,t,{pipelineBaseUrl:MA(),pipelineWorkerUrl:$(),webWorker:e?.webWorker??null});if(I!==0)throw new Error(f);return{webWorker:s,metrics:g[0].data,differenceImage:g[1].data,differenceUchar2dImage:g[2].data}}var De=vn;async function Wn(A,e){let r=e;if(r.imageType.componentType!==R.Float64){let t;e.imageType.pixelType!==k.Scalar&&e.imageType.pixelType!==k.VariableLengthVector&&(t=k.VariableLengthVector),r=EA(e,{componentType:R.Float64,pixelType:t})}else if(e.imageType.pixelType!==k.Scalar&&e.imageType.pixelType!==k.VariableLengthVector){let t=k.VariableLengthVector;r=EA(e,{pixelType:t})}return r.imageType.pixelType===k.VariableLengthVector&&(r=(await A(r)).magnitudeImage),r}var Se=Wn;async function jn(A,e={}){let r=[{type:m.Image}],t=[{type:m.Image,data:A}],n=[];n.push("0"),n.push("0"),n.push("--memory-io");let l="vector-magnitude",c=e?.webWorker;c===void 0&&(c=await Kt());let{webWorker:C,returnValue:s,stderr:I,outputs:f}=await cA(l,n,r,t,{pipelineBaseUrl:MA(),pipelineWorkerUrl:$(),webWorker:c,noCopy:e?.noCopy});if(s!==0&&I!=="")throw new Error(I);return{webWorker:C,magnitudeImage:f[0]?.data}}var be=jn;async function _n(A,e={baselineImages:[]}){async function r(i){let{webWorker:l,magnitudeImage:c}=await be(i);return l?.terminate(),{magnitudeImage:c}}let t=await Se(r,A),n=await Promise.all(e.baselineImages.map(async i=>await Se(r,i))),o={...e};return o.baselineImages=n,De(t,o)}var Vn=_n;var vt='data:text/javascript;charset=utf-8,var me=Object.defineProperty;var we=(A,t)=>{for(var e in t)me(A,e,{get:t[e],enumerable:!0})};var ft=Symbol("Comlink.proxy"),pe=Symbol("Comlink.endpoint"),Se=Symbol("Comlink.releaseProxy"),YA=Symbol("Comlink.finalizer"),aA=Symbol("Comlink.thrown"),lt=A=>typeof A=="object"&&A!==null||typeof A=="function",Fe={canHandle:A=>lt(A)&&A[ft],serialize(A){let{port1:t,port2:e}=new MessageChannel;return fA(A,t),[e,[e]]},deserialize(A){return A.start(),Ge(A)}},Re={canHandle:A=>lt(A)&&aA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},ut=new Map([["proxy",Fe],["throw",Re]]);function Ne(A,t){for(let e of A)if(t===e||e==="*"||e instanceof RegExp&&e.test(t))return!0;return!1}function fA(A,t=globalThis,e=["*"]){t.addEventListener("message",function I(r){if(!r||!r.data)return;if(!Ne(e,r.origin)){console.warn(`Invalid origin \'${r.origin}\' for comlink proxy`);return}let{id:o,type:g,path:C}=Object.assign({path:[]},r.data),Q=(r.data.argumentList||[]).map(O),a;try{let n=C.slice(0,-1).reduce((f,B)=>f[B],A),s=C.reduce((f,B)=>f[B],A);switch(g){case"GET":a=s;break;case"SET":n[C.slice(-1)[0]]=O(r.data.value),a=!0;break;case"APPLY":a=s.apply(n,Q);break;case"CONSTRUCT":{let f=new s(...Q);a=be(f)}break;case"ENDPOINT":{let{port1:f,port2:B}=new MessageChannel;fA(A,B),a=MA(f,[f])}break;case"RELEASE":a=void 0;break;default:return}}catch(n){a={value:n,[aA]:0}}Promise.resolve(a).catch(n=>({value:n,[aA]:0})).then(n=>{let[s,f]=cA(n);t.postMessage(Object.assign(Object.assign({},s),{id:o}),f),g==="RELEASE"&&(t.removeEventListener("message",I),Dt(t),YA in A&&typeof A[YA]=="function"&&A[YA]())}).catch(n=>{let[s,f]=cA({value:new TypeError("Unserializable return value"),[aA]:0});t.postMessage(Object.assign(Object.assign({},s),{id:o}),f)})}),t.start&&t.start()}function Ue(A){return A.constructor.name==="MessagePort"}function Dt(A){Ue(A)&&A.close()}function Ge(A,t){return qA(A,[],t)}function BA(A){if(A)throw new Error("Proxy has been released and is not useable")}function ht(A){return P(A,{type:"RELEASE"}).then(()=>{Dt(A)})}var QA=new WeakMap,EA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(QA.get(A)||0)-1;QA.set(A,t),t===0&&ht(A)});function ke(A,t){let e=(QA.get(t)||0)+1;QA.set(t,e),EA&&EA.register(A,t,A)}function Le(A){EA&&EA.unregister(A)}function qA(A,t=[],e=function(){}){let I=!1,r=new Proxy(e,{get(o,g){if(BA(I),g===Se)return()=>{Le(r),ht(A),I=!0};if(g==="then"){if(t.length===0)return{then:()=>r};let C=P(A,{type:"GET",path:t.map(Q=>Q.toString())}).then(O);return C.then.bind(C)}return qA(A,[...t,g])},set(o,g,C){BA(I);let[Q,a]=cA(C);return P(A,{type:"SET",path:[...t,g].map(n=>n.toString()),value:Q},a).then(O)},apply(o,g,C){BA(I);let Q=t[t.length-1];if(Q===pe)return P(A,{type:"ENDPOINT"}).then(O);if(Q==="bind")return qA(A,t.slice(0,-1));let[a,n]=ct(C);return P(A,{type:"APPLY",path:t.map(s=>s.toString()),argumentList:a},n).then(O)},construct(o,g){BA(I);let[C,Q]=ct(g);return P(A,{type:"CONSTRUCT",path:t.map(a=>a.toString()),argumentList:C},Q).then(O)}});return ke(r,A),r}function Je(A){return Array.prototype.concat.apply([],A)}function ct(A){let t=A.map(cA);return[t.map(e=>e[0]),Je(t.map(e=>e[1]))]}var dt=new WeakMap;function MA(A,t){return dt.set(A,t),A}function be(A){return Object.assign(A,{[ft]:!0})}function cA(A){for(let[t,e]of ut)if(e.canHandle(A)){let[I,r]=e.serialize(A);return[{type:"HANDLER",name:t,value:I},r]}return[{type:"RAW",value:A},dt.get(A)||[]]}function O(A){switch(A.type){case"HANDLER":return ut.get(A.name).deserialize(A.value);case"RAW":return A.value}}function P(A,t,e){return new Promise(I=>{let r=He();A.addEventListener("message",function o(g){!g.data||!g.data.id||g.data.id!==r||(A.removeEventListener("message",o),I(g.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},t),e)})}function He(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function v(A,t){return function(){return A.apply(t,arguments)}}var{toString:Ye}=Object.prototype,{getPrototypeOf:OA}=Object,uA=(A=>t=>{let e=Ye.call(t);return A[e]||(A[e]=e.slice(8,-1).toLowerCase())})(Object.create(null)),G=A=>(A=A.toLowerCase(),t=>uA(t)===A),DA=A=>t=>typeof t===A,{isArray:j}=Array,$=DA("undefined");function qe(A){return A!==null&&!$(A)&&A.constructor!==null&&!$(A.constructor)&&N(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var pt=G("ArrayBuffer");function Me(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&pt(A.buffer),t}var Te=DA("string"),N=DA("function"),St=DA("number"),hA=A=>A!==null&&typeof A=="object",Ke=A=>A===!0||A===!1,lA=A=>{if(uA(A)!=="object")return!1;let t=OA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Oe=G("Date"),xe=G("File"),Pe=G("Blob"),je=G("FileList"),We=A=>hA(A)&&N(A.pipe),Ze=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||N(A.append)&&((t=uA(A))==="formdata"||t==="object"&&N(A.toString)&&A.toString()==="[object FormData]"))},Ve=G("URLSearchParams"),[_e,Xe,ze,ve]=["ReadableStream","Request","Response","Headers"].map(G),$e=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function AA(A,t,{allOwnKeys:e=!1}={}){if(A===null||typeof A>"u")return;let I,r;if(typeof A!="object"&&(A=[A]),j(A))for(I=0,r=A.length;I<r;I++)t.call(null,A[I],I,A);else{let o=e?Object.getOwnPropertyNames(A):Object.keys(A),g=o.length,C;for(I=0;I<g;I++)C=o[I],t.call(null,A[C],C,A)}}function Ft(A,t){t=t.toLowerCase();let e=Object.keys(A),I=e.length,r;for(;I-- >0;)if(r=e[I],t===r.toLowerCase())return r;return null}var x=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Rt=A=>!$(A)&&A!==x;function KA(){let{caseless:A}=Rt(this)&&this||{},t={},e=(I,r)=>{let o=A&&Ft(t,r)||r;lA(t[o])&&lA(I)?t[o]=KA(t[o],I):lA(I)?t[o]=KA({},I):j(I)?t[o]=I.slice():t[o]=I};for(let I=0,r=arguments.length;I<r;I++)arguments[I]&&AA(arguments[I],e);return t}var AI=(A,t,e,{allOwnKeys:I}={})=>(AA(t,(r,o)=>{e&&N(r)?A[o]=v(r,e):A[o]=r},{allOwnKeys:I}),A),tI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),eI=(A,t,e,I)=>{A.prototype=Object.create(t.prototype,I),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),e&&Object.assign(A.prototype,e)},II=(A,t,e,I)=>{let r,o,g,C={};if(t=t||{},A==null)return t;do{for(r=Object.getOwnPropertyNames(A),o=r.length;o-- >0;)g=r[o],(!I||I(g,A,t))&&!C[g]&&(t[g]=A[g],C[g]=!0);A=e!==!1&&OA(A)}while(A&&(!e||e(A,t))&&A!==Object.prototype);return t},rI=(A,t,e)=>{A=String(A),(e===void 0||e>A.length)&&(e=A.length),e-=t.length;let I=A.indexOf(t,e);return I!==-1&&I===e},oI=A=>{if(!A)return null;if(j(A))return A;let t=A.length;if(!St(t))return null;let e=new Array(t);for(;t-- >0;)e[t]=A[t];return e},gI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&OA(Uint8Array)),iI=(A,t)=>{let I=(A&&A[Symbol.iterator]).call(A),r;for(;(r=I.next())&&!r.done;){let o=r.value;t.call(A,o[0],o[1])}},nI=(A,t)=>{let e,I=[];for(;(e=A.exec(t))!==null;)I.push(e);return I},sI=G("HTMLFormElement"),CI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(e,I,r){return I.toUpperCase()+r}),mt=(({hasOwnProperty:A})=>(t,e)=>A.call(t,e))(Object.prototype),BI=G("RegExp"),Nt=(A,t)=>{let e=Object.getOwnPropertyDescriptors(A),I={};AA(e,(r,o)=>{let g;(g=t(r,o,A))!==!1&&(I[o]=g||r)}),Object.defineProperties(A,I)},aI=A=>{Nt(A,(t,e)=>{if(N(A)&&["arguments","caller","callee"].indexOf(e)!==-1)return!1;let I=A[e];if(N(I)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+e+"\'")})}})},QI=(A,t)=>{let e={},I=r=>{r.forEach(o=>{e[o]=!0})};return j(A)?I(A):I(String(A).split(t)),e},EI=()=>{},cI=(A,t)=>A!=null&&Number.isFinite(A=+A)?A:t,TA="abcdefghijklmnopqrstuvwxyz",wt="0123456789",Ut={DIGIT:wt,ALPHA:TA,ALPHA_DIGIT:TA+TA.toUpperCase()+wt},fI=(A=16,t=Ut.ALPHA_DIGIT)=>{let e="",{length:I}=t;for(;A--;)e+=t[Math.random()*I|0];return e};function lI(A){return!!(A&&N(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var uI=A=>{let t=new Array(10),e=(I,r)=>{if(hA(I)){if(t.indexOf(I)>=0)return;if(!("toJSON"in I)){t[r]=I;let o=j(I)?[]:{};return AA(I,(g,C)=>{let Q=e(g,r+1);!$(Q)&&(o[C]=Q)}),t[r]=void 0,o}}return I};return e(A,0)},DI=G("AsyncFunction"),hI=A=>A&&(hA(A)||N(A))&&N(A.then)&&N(A.catch),Gt=((A,t)=>A?setImmediate:t?((e,I)=>(x.addEventListener("message",({source:r,data:o})=>{r===x&&o===e&&I.length&&I.shift()()},!1),r=>{I.push(r),x.postMessage(e,"*")}))(`axios@${Math.random()}`,[]):e=>setTimeout(e))(typeof setImmediate=="function",N(x.postMessage)),dI=typeof queueMicrotask<"u"?queueMicrotask.bind(x):typeof process<"u"&&process.nextTick||Gt,i={isArray:j,isArrayBuffer:pt,isBuffer:qe,isFormData:Ze,isArrayBufferView:Me,isString:Te,isNumber:St,isBoolean:Ke,isObject:hA,isPlainObject:lA,isReadableStream:_e,isRequest:Xe,isResponse:ze,isHeaders:ve,isUndefined:$,isDate:Oe,isFile:xe,isBlob:Pe,isRegExp:BI,isFunction:N,isStream:We,isURLSearchParams:Ve,isTypedArray:gI,isFileList:je,forEach:AA,merge:KA,extend:AI,trim:$e,stripBOM:tI,inherits:eI,toFlatObject:II,kindOf:uA,kindOfTest:G,endsWith:rI,toArray:oI,forEachEntry:iI,matchAll:nI,isHTMLForm:sI,hasOwnProperty:mt,hasOwnProp:mt,reduceDescriptors:Nt,freezeMethods:aI,toObjectSet:QI,toCamelCase:CI,noop:EI,toFiniteNumber:cI,findKey:Ft,global:x,isContextDefined:Rt,ALPHABET:Ut,generateString:fI,isSpecCompliantForm:lI,toJSONObject:uI,isAsyncFn:DI,isThenable:hI,setImmediate:Gt,asap:dI};function W(A,t,e,I,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),e&&(this.config=e),I&&(this.request=I),r&&(this.response=r)}i.inherits(W,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:i.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var kt=W.prototype,Lt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Lt[A]={value:A}});Object.defineProperties(W,Lt);Object.defineProperty(kt,"isAxiosError",{value:!0});W.from=(A,t,e,I,r,o)=>{let g=Object.create(kt);return i.toFlatObject(A,g,function(Q){return Q!==Error.prototype},C=>C!=="isAxiosError"),W.call(g,A.message,t,e,I,r),g.cause=A,g.name=A.name,o&&Object.assign(g,o),g};var u=W;var dA=null;function xA(A){return i.isPlainObject(A)||i.isArray(A)}function bt(A){return i.endsWith(A,"[]")?A.slice(0,-2):A}function Jt(A,t,e){return A?A.concat(t).map(function(r,o){return r=bt(r),!e&&o?"["+r+"]":r}).join(e?".":""):t}function yI(A){return i.isArray(A)&&!A.some(xA)}var mI=i.toFlatObject(i,{},null,function(t){return/^is[A-Z]/.test(t)});function wI(A,t,e){if(!i.isObject(A))throw new TypeError("target must be an object");t=t||new(dA||FormData),e=i.toFlatObject(e,{metaTokens:!0,dots:!1,indexes:!1},!1,function(l,c){return!i.isUndefined(c[l])});let I=e.metaTokens,r=e.visitor||n,o=e.dots,g=e.indexes,Q=(e.Blob||typeof Blob<"u"&&Blob)&&i.isSpecCompliantForm(t);if(!i.isFunction(r))throw new TypeError("visitor must be a function");function a(E){if(E===null)return"";if(i.isDate(E))return E.toISOString();if(!Q&&i.isBlob(E))throw new u("Blob is not supported. Use a Buffer instead.");return i.isArrayBuffer(E)||i.isTypedArray(E)?Q&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function n(E,l,c){let p=E;if(E&&!c&&typeof E=="object"){if(i.endsWith(l,"{}"))l=I?l:l.slice(0,-2),E=JSON.stringify(E);else if(i.isArray(E)&&yI(E)||(i.isFileList(E)||i.endsWith(l,"[]"))&&(p=i.toArray(E)))return l=bt(l),p.forEach(function(D,U){!(i.isUndefined(D)||D===null)&&t.append(g===!0?Jt([l],U,o):g===null?l:l+"[]",a(D))}),!1}return xA(E)?!0:(t.append(Jt(c,l,o),a(E)),!1)}let s=[],f=Object.assign(mI,{defaultVisitor:n,convertValue:a,isVisitable:xA});function B(E,l){if(!i.isUndefined(E)){if(s.indexOf(E)!==-1)throw Error("Circular reference detected in "+l.join("."));s.push(E),i.forEach(E,function(p,S){(!(i.isUndefined(p)||p===null)&&r.call(t,p,i.isString(S)?S.trim():S,l,f))===!0&&B(p,l?l.concat(S):[S])}),s.pop()}}if(!i.isObject(A))throw new TypeError("data must be an object");return B(A),t}var q=wI;function Ht(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(I){return t[I]})}function Yt(A,t){this._pairs=[],A&&q(A,this,t)}var qt=Yt.prototype;qt.append=function(t,e){this._pairs.push([t,e])};qt.toString=function(t){let e=t?function(I){return t.call(this,I,Ht)}:Ht;return this._pairs.map(function(r){return e(r[0])+"="+e(r[1])},"").join("&")};var yA=Yt;function pI(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function tA(A,t,e){if(!t)return A;let I=e&&e.encode||pI,r=e&&e.serialize,o;if(r?o=r(t,e):o=i.isURLSearchParams(t)?t.toString():new yA(t,e).toString(I),o){let g=A.indexOf("%23");g!==-1&&(A=A.slice(0,g)),A+=(A.indexOf("?")===-1?"?":"&")+o}return A}var PA=class{constructor(){this.handlers=[]}use(t,e,I){return this.handlers.push({fulfilled:t,rejected:e,synchronous:I?I.synchronous:!1,runWhen:I?I.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){i.forEach(this.handlers,function(I){I!==null&&t(I)})}},jA=PA;var mA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Mt=typeof URLSearchParams<"u"?URLSearchParams:yA;var Tt=typeof FormData<"u"?FormData:null;var Kt=typeof Blob<"u"?Blob:null;var Ot={isBrowser:!0,classes:{URLSearchParams:Mt,FormData:Tt,Blob:Kt},protocols:["http","https","file","blob","url","data"]};var ZA={};we(ZA,{hasBrowserEnv:()=>WA,hasStandardBrowserEnv:()=>SI,hasStandardBrowserWebWorkerEnv:()=>FI,origin:()=>RI});var WA=typeof window<"u"&&typeof document<"u",SI=(A=>WA&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),FI=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",RI=WA&&window.location.href||"http://localhost";var w={...ZA,...Ot};function VA(A,t){return q(A,new w.classes.URLSearchParams,Object.assign({visitor:function(e,I,r,o){return w.isNode&&i.isBuffer(e)?(this.append(I,e.toString("base64")),!1):o.defaultVisitor.apply(this,arguments)}},t))}function NI(A){return i.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function UI(A){let t={},e=Object.keys(A),I,r=e.length,o;for(I=0;I<r;I++)o=e[I],t[o]=A[o];return t}function GI(A){function t(e,I,r,o){let g=e[o++];if(g==="__proto__")return!0;let C=Number.isFinite(+g),Q=o>=e.length;return g=!g&&i.isArray(r)?r.length:g,Q?(i.hasOwnProp(r,g)?r[g]=[r[g],I]:r[g]=I,!C):((!r[g]||!i.isObject(r[g]))&&(r[g]=[]),t(e,I,r[g],o)&&i.isArray(r[g])&&(r[g]=UI(r[g])),!C)}if(i.isFormData(A)&&i.isFunction(A.entries)){let e={};return i.forEachEntry(A,(I,r)=>{t(NI(I),r,e,0)}),e}return null}var wA=GI;function kI(A,t,e){if(i.isString(A))try{return(t||JSON.parse)(A),i.trim(A)}catch(I){if(I.name!=="SyntaxError")throw I}return(e||JSON.stringify)(A)}var _A={transitional:mA,adapter:["xhr","http","fetch"],transformRequest:[function(t,e){let I=e.getContentType()||"",r=I.indexOf("application/json")>-1,o=i.isObject(t);if(o&&i.isHTMLForm(t)&&(t=new FormData(t)),i.isFormData(t))return r?JSON.stringify(wA(t)):t;if(i.isArrayBuffer(t)||i.isBuffer(t)||i.isStream(t)||i.isFile(t)||i.isBlob(t)||i.isReadableStream(t))return t;if(i.isArrayBufferView(t))return t.buffer;if(i.isURLSearchParams(t))return e.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let C;if(o){if(I.indexOf("application/x-www-form-urlencoded")>-1)return VA(t,this.formSerializer).toString();if((C=i.isFileList(t))||I.indexOf("multipart/form-data")>-1){let Q=this.env&&this.env.FormData;return q(C?{"files[]":t}:t,Q&&new Q,this.formSerializer)}}return o||r?(e.setContentType("application/json",!1),kI(t)):t}],transformResponse:[function(t){let e=this.transitional||_A.transitional,I=e&&e.forcedJSONParsing,r=this.responseType==="json";if(i.isResponse(t)||i.isReadableStream(t))return t;if(t&&i.isString(t)&&(I&&!this.responseType||r)){let g=!(e&&e.silentJSONParsing)&&r;try{return JSON.parse(t)}catch(C){if(g)throw C.name==="SyntaxError"?u.from(C,u.ERR_BAD_RESPONSE,this,null,this.response):C}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};i.forEach(["delete","get","head","post","put","patch"],A=>{_A.headers[A]={}});var Z=_A;var LI=i.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),xt=A=>{let t={},e,I,r;return A&&A.split(`%0A`).forEach(function(g){r=g.indexOf(":"),e=g.substring(0,r).trim().toLowerCase(),I=g.substring(r+1).trim(),!(!e||t[e]&&LI[e])&&(e==="set-cookie"?t[e]?t[e].push(I):t[e]=[I]:t[e]=t[e]?t[e]+", "+I:I)}),t};var Pt=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function pA(A){return A===!1||A==null?A:i.isArray(A)?A.map(pA):String(A)}function JI(A){let t=Object.create(null),e=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,I;for(;I=e.exec(A);)t[I[1]]=I[2];return t}var bI=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function XA(A,t,e,I,r){if(i.isFunction(I))return I.call(this,t,e);if(r&&(t=e),!!i.isString(t)){if(i.isString(I))return t.indexOf(I)!==-1;if(i.isRegExp(I))return I.test(t)}}function HI(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,e,I)=>e.toUpperCase()+I)}function YI(A,t){let e=i.toCamelCase(" "+t);["get","set","has"].forEach(I=>{Object.defineProperty(A,I+e,{value:function(r,o,g){return this[I].call(this,t,r,o,g)},configurable:!0})})}var V=class{constructor(t){t&&this.set(t)}set(t,e,I){let r=this;function o(C,Q,a){let n=eA(Q);if(!n)throw new Error("header name must be a non-empty string");let s=i.findKey(r,n);(!s||r[s]===void 0||a===!0||a===void 0&&r[s]!==!1)&&(r[s||Q]=pA(C))}let g=(C,Q)=>i.forEach(C,(a,n)=>o(a,n,Q));if(i.isPlainObject(t)||t instanceof this.constructor)g(t,e);else if(i.isString(t)&&(t=t.trim())&&!bI(t))g(xt(t),e);else if(i.isHeaders(t))for(let[C,Q]of t.entries())o(Q,C,I);else t!=null&&o(e,t,I);return this}get(t,e){if(t=eA(t),t){let I=i.findKey(this,t);if(I){let r=this[I];if(!e)return r;if(e===!0)return JI(r);if(i.isFunction(e))return e.call(this,r,I);if(i.isRegExp(e))return e.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,e){if(t=eA(t),t){let I=i.findKey(this,t);return!!(I&&this[I]!==void 0&&(!e||XA(this,this[I],I,e)))}return!1}delete(t,e){let I=this,r=!1;function o(g){if(g=eA(g),g){let C=i.findKey(I,g);C&&(!e||XA(I,I[C],C,e))&&(delete I[C],r=!0)}}return i.isArray(t)?t.forEach(o):o(t),r}clear(t){let e=Object.keys(this),I=e.length,r=!1;for(;I--;){let o=e[I];(!t||XA(this,this[o],o,t,!0))&&(delete this[o],r=!0)}return r}normalize(t){let e=this,I={};return i.forEach(this,(r,o)=>{let g=i.findKey(I,o);if(g){e[g]=pA(r),delete e[o];return}let C=t?HI(o):String(o).trim();C!==o&&delete e[o],e[C]=pA(r),I[C]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let e=Object.create(null);return i.forEach(this,(I,r)=>{I!=null&&I!==!1&&(e[r]=t&&i.isArray(I)?I.join(", "):I)}),e}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,e])=>t+": "+e).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...e){let I=new this(t);return e.forEach(r=>I.set(r)),I}static accessor(t){let I=(this[Pt]=this[Pt]={accessors:{}}).accessors,r=this.prototype;function o(g){let C=eA(g);I[C]||(YI(r,g),I[C]=!0)}return i.isArray(t)?t.forEach(o):o(t),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);i.reduceDescriptors(V.prototype,({value:A},t)=>{let e=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(I){this[e]=I}}});i.freezeMethods(V);var m=V;function IA(A,t){let e=this||Z,I=t||e,r=m.from(I.headers),o=I.data;return i.forEach(A,function(C){o=C.call(e,o,r.normalize(),t?t.status:void 0)}),r.normalize(),o}function rA(A){return!!(A&&A.__CANCEL__)}function jt(A,t,e){u.call(this,A??"canceled",u.ERR_CANCELED,t,e),this.name="CanceledError"}i.inherits(jt,u,{__CANCEL__:!0});var b=jt;function oA(A,t,e){let I=e.config.validateStatus;!e.status||!I||I(e.status)?A(e):t(new u("Request failed with status code "+e.status,[u.ERR_BAD_REQUEST,u.ERR_BAD_RESPONSE][Math.floor(e.status/100)-4],e.config,e.request,e))}function zA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function qI(A,t){A=A||10;let e=new Array(A),I=new Array(A),r=0,o=0,g;return t=t!==void 0?t:1e3,function(Q){let a=Date.now(),n=I[o];g||(g=a),e[r]=Q,I[r]=a;let s=o,f=0;for(;s!==r;)f+=e[s++],s=s%A;if(r=(r+1)%A,r===o&&(o=(o+1)%A),a-g<t)return;let B=n&&a-n;return B?Math.round(f*1e3/B):void 0}}var Wt=qI;function MI(A,t){let e=0,I=1e3/t,r,o,g=(a,n=Date.now())=>{e=n,r=null,o&&(clearTimeout(o),o=null),A.apply(null,a)};return[(...a)=>{let n=Date.now(),s=n-e;s>=I?g(a,n):(r=a,o||(o=setTimeout(()=>{o=null,g(r)},I-s)))},()=>r&&g(r)]}var Zt=MI;var _=(A,t,e=3)=>{let I=0,r=Wt(50,250);return Zt(o=>{let g=o.loaded,C=o.lengthComputable?o.total:void 0,Q=g-I,a=r(Q),n=g<=C;I=g;let s={loaded:g,total:C,progress:C?g/C:void 0,bytes:Q,rate:a||void 0,estimated:a&&C&&n?(C-g)/a:void 0,event:o,lengthComputable:C!=null,[t?"download":"upload"]:!0};A(s)},e)},vA=(A,t)=>{let e=A!=null;return[I=>t[0]({lengthComputable:e,total:A,loaded:I}),t[1]]},$A=A=>(...t)=>i.asap(()=>A(...t));var Vt=w.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement("a"),I;function r(o){let g=o;return t&&(e.setAttribute("href",g),g=e.href),e.setAttribute("href",g),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,""):"",host:e.host,search:e.search?e.search.replace(/^\\?/,""):"",hash:e.hash?e.hash.replace(/^%23/,""):"",hostname:e.hostname,port:e.port,pathname:e.pathname.charAt(0)==="/"?e.pathname:"/"+e.pathname}}return I=r(window.location.href),function(g){let C=i.isString(g)?r(g):g;return C.protocol===I.protocol&&C.host===I.host}}():function(){return function(){return!0}}();var _t=w.hasStandardBrowserEnv?{write(A,t,e,I,r,o){let g=[A+"="+encodeURIComponent(t)];i.isNumber(e)&&g.push("expires="+new Date(e).toGMTString()),i.isString(I)&&g.push("path="+I),i.isString(r)&&g.push("domain="+r),o===!0&&g.push("secure"),document.cookie=g.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function At(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function tt(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function gA(A,t){return A&&!At(t)?tt(A,t):t}var Xt=A=>A instanceof m?{...A}:A;function k(A,t){t=t||{};let e={};function I(a,n,s){return i.isPlainObject(a)&&i.isPlainObject(n)?i.merge.call({caseless:s},a,n):i.isPlainObject(n)?i.merge({},n):i.isArray(n)?n.slice():n}function r(a,n,s){if(i.isUndefined(n)){if(!i.isUndefined(a))return I(void 0,a,s)}else return I(a,n,s)}function o(a,n){if(!i.isUndefined(n))return I(void 0,n)}function g(a,n){if(i.isUndefined(n)){if(!i.isUndefined(a))return I(void 0,a)}else return I(void 0,n)}function C(a,n,s){if(s in t)return I(a,n);if(s in A)return I(void 0,a)}let Q={url:o,method:o,data:o,baseURL:g,transformRequest:g,transformResponse:g,paramsSerializer:g,timeout:g,timeoutMessage:g,withCredentials:g,withXSRFToken:g,adapter:g,responseType:g,xsrfCookieName:g,xsrfHeaderName:g,onUploadProgress:g,onDownloadProgress:g,decompress:g,maxContentLength:g,maxBodyLength:g,beforeRedirect:g,transport:g,httpAgent:g,httpsAgent:g,cancelToken:g,socketPath:g,responseEncoding:g,validateStatus:C,headers:(a,n)=>r(Xt(a),Xt(n),!0)};return i.forEach(Object.keys(Object.assign({},A,t)),function(n){let s=Q[n]||r,f=s(A[n],t[n],n);i.isUndefined(f)&&s!==C||(e[n]=f)}),e}var SA=A=>{let t=k({},A),{data:e,withXSRFToken:I,xsrfHeaderName:r,xsrfCookieName:o,headers:g,auth:C}=t;t.headers=g=m.from(g),t.url=tA(gA(t.baseURL,t.url),A.params,A.paramsSerializer),C&&g.set("Authorization","Basic "+btoa((C.username||"")+":"+(C.password?unescape(encodeURIComponent(C.password)):"")));let Q;if(i.isFormData(e)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)g.setContentType(void 0);else if((Q=g.getContentType())!==!1){let[a,...n]=Q?Q.split(";").map(s=>s.trim()).filter(Boolean):[];g.setContentType([a||"multipart/form-data",...n].join("; "))}}if(w.hasStandardBrowserEnv&&(I&&i.isFunction(I)&&(I=I(t)),I||I!==!1&&Vt(t.url))){let a=r&&o&&_t.read(o);a&&g.set(r,a)}return t};var TI=typeof XMLHttpRequest<"u",zt=TI&&function(A){return new Promise(function(e,I){let r=SA(A),o=r.data,g=m.from(r.headers).normalize(),{responseType:C,onUploadProgress:Q,onDownloadProgress:a}=r,n,s,f,B,E;function l(){B&&B(),E&&E(),r.cancelToken&&r.cancelToken.unsubscribe(n),r.signal&&r.signal.removeEventListener("abort",n)}let c=new XMLHttpRequest;c.open(r.method.toUpperCase(),r.url,!0),c.timeout=r.timeout;function p(){if(!c)return;let D=m.from("getAllResponseHeaders"in c&&c.getAllResponseHeaders()),K={data:!C||C==="text"||C==="json"?c.responseText:c.response,status:c.status,statusText:c.statusText,headers:D,config:A,request:c};oA(function(J){e(J),l()},function(J){I(J),l()},K),c=null}"onloadend"in c?c.onloadend=p:c.onreadystatechange=function(){!c||c.readyState!==4||c.status===0&&!(c.responseURL&&c.responseURL.indexOf("file:")===0)||setTimeout(p)},c.onabort=function(){c&&(I(new u("Request aborted",u.ECONNABORTED,A,c)),c=null)},c.onerror=function(){I(new u("Network Error",u.ERR_NETWORK,A,c)),c=null},c.ontimeout=function(){let U=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded",K=r.transitional||mA;r.timeoutErrorMessage&&(U=r.timeoutErrorMessage),I(new u(U,K.clarifyTimeoutError?u.ETIMEDOUT:u.ECONNABORTED,A,c)),c=null},o===void 0&&g.setContentType(null),"setRequestHeader"in c&&i.forEach(g.toJSON(),function(U,K){c.setRequestHeader(K,U)}),i.isUndefined(r.withCredentials)||(c.withCredentials=!!r.withCredentials),C&&C!=="json"&&(c.responseType=r.responseType),a&&([f,E]=_(a,!0),c.addEventListener("progress",f)),Q&&c.upload&&([s,B]=_(Q),c.upload.addEventListener("progress",s),c.upload.addEventListener("loadend",B)),(r.cancelToken||r.signal)&&(n=D=>{c&&(I(!D||D.type?new b(null,A,c):D),c.abort(),c=null)},r.cancelToken&&r.cancelToken.subscribe(n),r.signal&&(r.signal.aborted?n():r.signal.addEventListener("abort",n)));let S=zA(r.url);if(S&&w.protocols.indexOf(S)===-1){I(new u("Unsupported protocol "+S+":",u.ERR_BAD_REQUEST,A));return}c.send(o||null)})};var KI=(A,t)=>{let e=new AbortController,I,r=function(Q){if(!I){I=!0,g();let a=Q instanceof Error?Q:this.reason;e.abort(a instanceof u?a:new b(a instanceof Error?a.message:a))}},o=t&&setTimeout(()=>{r(new u(`timeout ${t} of ms exceeded`,u.ETIMEDOUT))},t),g=()=>{A&&(o&&clearTimeout(o),o=null,A.forEach(Q=>{Q&&(Q.removeEventListener?Q.removeEventListener("abort",r):Q.unsubscribe(r))}),A=null)};A.forEach(Q=>Q&&Q.addEventListener&&Q.addEventListener("abort",r));let{signal:C}=e;return C.unsubscribe=g,[C,()=>{o&&clearTimeout(o),o=null}]},vt=KI;var OI=function*(A,t){let e=A.byteLength;if(!t||e<t){yield A;return}let I=0,r;for(;I<e;)r=I+t,yield A.slice(I,r),I=r},xI=async function*(A,t,e){for await(let I of A)yield*OI(ArrayBuffer.isView(I)?I:await e(String(I)),t)},et=(A,t,e,I,r)=>{let o=xI(A,t,r),g=0,C,Q=a=>{C||(C=!0,I&&I(a))};return new ReadableStream({async pull(a){try{let{done:n,value:s}=await o.next();if(n){Q(),a.close();return}let f=s.byteLength;if(e){let B=g+=f;e(B)}a.enqueue(new Uint8Array(s))}catch(n){throw Q(n),n}},cancel(a){return Q(a),o.return()}},{highWaterMark:2})};var RA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",Ae=RA&&typeof ReadableStream=="function",It=RA&&(typeof TextEncoder=="function"?(A=>t=>A.encode(t))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),te=(A,...t)=>{try{return!!A(...t)}catch{return!1}},PI=Ae&&te(()=>{let A=!1,t=new Request(w.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!t}),$t=64*1024,rt=Ae&&te(()=>i.isReadableStream(new Response("").body)),FA={stream:rt&&(A=>A.body)};RA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(t=>{!FA[t]&&(FA[t]=i.isFunction(A[t])?e=>e[t]():(e,I)=>{throw new u(`Response type \'${t}\' is not supported`,u.ERR_NOT_SUPPORT,I)})})})(new Response);var jI=async A=>{if(A==null)return 0;if(i.isBlob(A))return A.size;if(i.isSpecCompliantForm(A))return(await new Request(A).arrayBuffer()).byteLength;if(i.isArrayBufferView(A)||i.isArrayBuffer(A))return A.byteLength;if(i.isURLSearchParams(A)&&(A=A+""),i.isString(A))return(await It(A)).byteLength},WI=async(A,t)=>{let e=i.toFiniteNumber(A.getContentLength());return e??jI(t)},ee=RA&&(async A=>{let{url:t,method:e,data:I,signal:r,cancelToken:o,timeout:g,onDownloadProgress:C,onUploadProgress:Q,responseType:a,headers:n,withCredentials:s="same-origin",fetchOptions:f}=SA(A);a=a?(a+"").toLowerCase():"text";let[B,E]=r||o||g?vt([r,o],g):[],l,c,p=()=>{!l&&setTimeout(()=>{B&&B.unsubscribe()}),l=!0},S;try{if(Q&&PI&&e!=="get"&&e!=="head"&&(S=await WI(n,I))!==0){let L=new Request(t,{method:"POST",body:I,duplex:"half"}),J;if(i.isFormData(I)&&(J=L.headers.get("content-type"))&&n.setContentType(J),L.body){let[HA,CA]=vA(S,_($A(Q)));I=et(L.body,$t,HA,CA,It)}}i.isString(s)||(s=s?"include":"omit"),c=new Request(t,{...f,signal:B,method:e.toUpperCase(),headers:n.normalize().toJSON(),body:I,duplex:"half",credentials:s});let D=await fetch(c),U=rt&&(a==="stream"||a==="response");if(rt&&(C||U)){let L={};["status","statusText","headers"].forEach(Et=>{L[Et]=D[Et]});let J=i.toFiniteNumber(D.headers.get("content-length")),[HA,CA]=C&&vA(J,_($A(C),!0))||[];D=new Response(et(D.body,$t,HA,()=>{CA&&CA(),U&&p()},It),L)}a=a||"text";let K=await FA[i.findKey(FA,a)||"text"](D,A);return!U&&p(),E&&E(),await new Promise((L,J)=>{oA(L,J,{data:K,headers:m.from(D.headers),status:D.status,statusText:D.statusText,config:A,request:c})})}catch(D){throw p(),D&&D.name==="TypeError"&&/fetch/i.test(D.message)?Object.assign(new u("Network Error",u.ERR_NETWORK,A,c),{cause:D.cause||D}):u.from(D,D&&D.code,A,c)}});var ot={http:dA,xhr:zt,fetch:ee};i.forEach(ot,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var Ie=A=>`- ${A}`,ZI=A=>i.isFunction(A)||A===null||A===!1,NA={getAdapter:A=>{A=i.isArray(A)?A:[A];let{length:t}=A,e,I,r={};for(let o=0;o<t;o++){e=A[o];let g;if(I=e,!ZI(e)&&(I=ot[(g=String(e)).toLowerCase()],I===void 0))throw new u(`Unknown adapter \'${g}\'`);if(I)break;r[g||"%23"+o]=I}if(!I){let o=Object.entries(r).map(([C,Q])=>`adapter ${C} `+(Q===!1?"is not supported by the environment":"is not available in the build")),g=t?o.length>1?`since :%0A`+o.map(Ie).join(`%0A`):" "+Ie(o[0]):"as no adapter specified";throw new u("There is no suitable adapter to dispatch the request "+g,"ERR_NOT_SUPPORT")}return I},adapters:ot};function gt(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new b(null,A)}function UA(A){return gt(A),A.headers=m.from(A.headers),A.data=IA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),NA.getAdapter(A.adapter||Z.adapter)(A).then(function(I){return gt(A),I.data=IA.call(A,A.transformResponse,I),I.headers=m.from(I.headers),I},function(I){return rA(I)||(gt(A),I&&I.response&&(I.response.data=IA.call(A,A.transformResponse,I.response),I.response.headers=m.from(I.response.headers))),Promise.reject(I)})}var GA="1.7.4";var it={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{it[A]=function(I){return typeof I===A||"a"+(t<1?"n ":" ")+A}});var re={};it.transitional=function(t,e,I){function r(o,g){return"[Axios v"+GA+"] Transitional option \'"+o+"\'"+g+(I?". "+I:"")}return(o,g,C)=>{if(t===!1)throw new u(r(g," has been removed"+(e?" in "+e:"")),u.ERR_DEPRECATED);return e&&!re[g]&&(re[g]=!0,console.warn(r(g," has been deprecated since v"+e+" and will be removed in the near future"))),t?t(o,g,C):!0}};function VI(A,t,e){if(typeof A!="object")throw new u("options must be an object",u.ERR_BAD_OPTION_VALUE);let I=Object.keys(A),r=I.length;for(;r-- >0;){let o=I[r],g=t[o];if(g){let C=A[o],Q=C===void 0||g(C,o,A);if(Q!==!0)throw new u("option "+o+" must be "+Q,u.ERR_BAD_OPTION_VALUE);continue}if(e!==!0)throw new u("Unknown option "+o,u.ERR_BAD_OPTION)}}var kA={assertOptions:VI,validators:it};var M=kA.validators,X=class{constructor(t){this.defaults=t,this.interceptors={request:new jA,response:new jA}}async request(t,e){try{return await this._request(t,e)}catch(I){if(I instanceof Error){let r;Error.captureStackTrace?Error.captureStackTrace(r={}):r=new Error;let o=r.stack?r.stack.replace(/^.+\\n/,""):"";try{I.stack?o&&!String(I.stack).endsWith(o.replace(/^.+\\n.+\\n/,""))&&(I.stack+=`%0A`+o):I.stack=o}catch{}}throw I}}_request(t,e){typeof t=="string"?(e=e||{},e.url=t):e=t||{},e=k(this.defaults,e);let{transitional:I,paramsSerializer:r,headers:o}=e;I!==void 0&&kA.assertOptions(I,{silentJSONParsing:M.transitional(M.boolean),forcedJSONParsing:M.transitional(M.boolean),clarifyTimeoutError:M.transitional(M.boolean)},!1),r!=null&&(i.isFunction(r)?e.paramsSerializer={serialize:r}:kA.assertOptions(r,{encode:M.function,serialize:M.function},!0)),e.method=(e.method||this.defaults.method||"get").toLowerCase();let g=o&&i.merge(o.common,o[e.method]);o&&i.forEach(["delete","get","head","post","put","patch","common"],E=>{delete o[E]}),e.headers=m.concat(g,o);let C=[],Q=!0;this.interceptors.request.forEach(function(l){typeof l.runWhen=="function"&&l.runWhen(e)===!1||(Q=Q&&l.synchronous,C.unshift(l.fulfilled,l.rejected))});let a=[];this.interceptors.response.forEach(function(l){a.push(l.fulfilled,l.rejected)});let n,s=0,f;if(!Q){let E=[UA.bind(this),void 0];for(E.unshift.apply(E,C),E.push.apply(E,a),f=E.length,n=Promise.resolve(e);s<f;)n=n.then(E[s++],E[s++]);return n}f=C.length;let B=e;for(s=0;s<f;){let E=C[s++],l=C[s++];try{B=E(B)}catch(c){l.call(this,c);break}}try{n=UA.call(this,B)}catch(E){return Promise.reject(E)}for(s=0,f=a.length;s<f;)n=n.then(a[s++],a[s++]);return n}getUri(t){t=k(this.defaults,t);let e=gA(t.baseURL,t.url);return tA(e,t.params,t.paramsSerializer)}};i.forEach(["delete","get","head","options"],function(t){X.prototype[t]=function(e,I){return this.request(k(I||{},{method:t,url:e,data:(I||{}).data}))}});i.forEach(["post","put","patch"],function(t){function e(I){return function(o,g,C){return this.request(k(C||{},{method:t,headers:I?{"Content-Type":"multipart/form-data"}:{},url:o,data:g}))}}X.prototype[t]=e(),X.prototype[t+"Form"]=e(!0)});var iA=X;var nt=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let e;this.promise=new Promise(function(o){e=o});let I=this;this.promise.then(r=>{if(!I._listeners)return;let o=I._listeners.length;for(;o-- >0;)I._listeners[o](r);I._listeners=null}),this.promise.then=r=>{let o,g=new Promise(C=>{I.subscribe(C),o=C}).then(r);return g.cancel=function(){I.unsubscribe(o)},g},t(function(o,g,C){I.reason||(I.reason=new b(o,g,C),e(I.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let e=this._listeners.indexOf(t);e!==-1&&this._listeners.splice(e,1)}static source(){let t;return{token:new A(function(r){t=r}),cancel:t}}},oe=nt;function st(A){return function(e){return A.apply(null,e)}}function Ct(A){return i.isObject(A)&&A.isAxiosError===!0}var Bt={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Bt).forEach(([A,t])=>{Bt[t]=A});var ge=Bt;function ie(A){let t=new iA(A),e=v(iA.prototype.request,t);return i.extend(e,iA.prototype,t,{allOwnKeys:!0}),i.extend(e,t,null,{allOwnKeys:!0}),e.create=function(r){return ie(k(A,r))},e}var d=ie(Z);d.Axios=iA;d.CanceledError=b;d.CancelToken=oe;d.isCancel=rA;d.VERSION=GA;d.toFormData=q;d.AxiosError=u;d.Cancel=d.CanceledError;d.all=function(t){return Promise.all(t)};d.spread=st;d.isAxiosError=Ct;d.mergeConfig=k;d.AxiosHeaders=m;d.formToJSON=A=>wA(i.isHTMLForm(A)?new FormData(A):A);d.getAdapter=NA.getAdapter;d.HttpStatusCode=ge;d.default=d;var LA=d;var{Axios:Ei,AxiosError:ci,CanceledError:fi,isCancel:li,CancelToken:ui,VERSION:Di,all:hi,Cancel:di,isAxiosError:yi,spread:mi,toFormData:wi,AxiosHeaders:pi,HttpStatusCode:Si,formToJSON:Fi,getAdapter:Ri,mergeConfig:Ni}=LA;var nA,Y,Qt,at={env:{emscripten_notify_memory_growth:function(A){Qt=new Uint8Array(Y.exports.memory.buffer)}}},JA=class{init(){return nA||(typeof fetch<"u"?nA=fetch("data:application/wasm;base64,"+ne).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,at)).then(this._init):nA=WebAssembly.instantiate(Buffer.from(ne,"base64"),at).then(this._init),nA)}_init(t){Y=t.instance,at.env.emscripten_notify_memory_growth(0)}decode(t,e=0){if(!Y)throw new Error("ZSTDDecoder: Await .init() before decoding.");let I=t.byteLength,r=Y.exports.malloc(I);Qt.set(t,r),e=e||Number(Y.exports.ZSTD_findDecompressedSize(r,I));let o=Y.exports.malloc(e),g=Y.exports.ZSTD_decompress(o,e,r,I),C=Qt.slice(o,o+g);return Y.exports.free(r),Y.exports.free(o),C}},ne="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var se=new JA,Ce=!1;async function _I(A,t,e){let I=null;typeof A!="string"?I=A.href:A.startsWith("http")?I=A:I=`${t}/${A}`,I.endsWith(".js")&&(I=I.substring(0,I.length-3)),I.endsWith(".wasm")&&(I=I.substring(0,I.length-5));let r=`${I}.wasm`,o=await LA.get(`${r}.zst`,{responseType:"arraybuffer",params:e});Ce||(await se.init(),Ce=!0);let C=se.decode(new Uint8Array(o.data)).buffer;return(await import(`${I}.js`)).default({wasmBinary:C})}var Be=_I;var bA=new Map;async function XI(A,t,e){let I=A,r=A,o=null;return typeof A!="string"&&(I=new URL(A.href),r=I.href),bA.has(r)?o=await bA.get(r):(bA.set(r,Be(I,t,e)),o=await bA.get(r)),o}var ae=XI;var zI={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},h=zI;var vI={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},R=vI;var $I={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},z=$I;function Ar(A,t){let e=null;switch(A){case R.UInt8:{e=new Uint8Array(t);break}case R.Int8:{e=new Int8Array(t);break}case R.UInt16:{e=new Uint16Array(t);break}case R.Int16:{e=new Int16Array(t);break}case R.UInt32:{e=new Uint32Array(t);break}case R.Int32:{e=new Int32Array(t);break}case R.UInt64:{typeof globalThis.BigUint64Array=="function"?e=new BigUint64Array(t):e=new Uint8Array(t);break}case R.Int64:{typeof globalThis.BigInt64Array=="function"?e=new BigInt64Array(t):e=new Uint8Array(t);break}case z.Float32:{e=new Float32Array(t);break}case z.Float64:{e=new Float64Array(t);break}case"null":{e=null;break}case null:{e=null;break}default:throw new Error("Type is not supported as a TypedArray")}return e}var H=Ar;var ce=typeof globalThis.SharedArrayBuffer=="function",Qe=new TextEncoder,Ee=new TextDecoder("utf-8");function tr(A,t){let e={flags:"r",encoding:"binary"},I=A.fs_open(t,e.flags),o=A.fs_stat(t).size,g=null;ce?g=new SharedArrayBuffer(o):g=new ArrayBuffer(o);let C=new Uint8Array(g);return A.fs_read(I,C,0,o,0),A.fs_close(I),C}function fe(A,t,e){let I=null;ce?I=new SharedArrayBuffer(e):I=new ArrayBuffer(e);let r=new Uint8Array(I),o=new Uint8Array(A.HEAPU8.buffer,t,e);return r.set(o),r}function y(A,t,e,I){let r=0;return t!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,e,I,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),r)),r}function T(A,t,e){let I=JSON.stringify(t),r=A.lengthBytesUTF8(I)+1,o=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,e,r]);A.stringToUTF8(I,o,r)}function F(A,t,e,I){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,e]),o=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,e]),g=fe(A,r,o);return H(I,g.buffer)}function sA(A,t){let e=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),I=A.UTF8ToString(e);return JSON.parse(I)}function er(A,t,e,I){I!=null&&I.length>0&&I.forEach(function(a,n){switch(a.type){case h.TextStream:{let s=Qe.encode(a.data.data),f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.JsonCompatible:{let s=Qe.encode(JSON.stringify(a.data)),f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.BinaryStream:{let s=a.data.data,f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.TextFile:{A.fs_writeFile(a.data.path,a.data.data);break}case h.BinaryFile:{A.fs_writeFile(a.data.path,a.data.data);break}case h.Image:{let s=a.data,f=y(A,s.data,n,0),B=y(A,s.direction,n,1),E=typeof s.metadata?.entries<"u"?Array.from(s.metadata.entries()):[],l={imageType:s.imageType,name:s.name,origin:s.origin,spacing:s.spacing,direction:`data:application/vnd.itk.address,0:${B}`,size:s.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};T(A,l,n);break}case h.Mesh:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.cells,n,1),E=y(A,s.pointData,n,2),l=y(A,s.cellData,n,3),c={meshType:s.meshType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:s.numberOfCells,cells:`data:application/vnd.itk.address,0:${B}`,cellBufferSize:s.cellBufferSize,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${l}`};T(A,c,n);break}case h.PointSet:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.pointData,n,1),E={pointSetType:s.pointSetType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${B}`};T(A,E,n);break}case h.TransformList:{let s=a.data,f=[];s.forEach((B,E)=>{let c=`data:application/vnd.itk.address,0:${y(A,B.fixedParameters,n,E*2)}`,S=`data:application/vnd.itk.address,0:${y(A,B.parameters,n,E*2+1)}`,D={transformType:B.transformType,numberOfFixedParameters:B.numberOfFixedParameters,numberOfParameters:B.numberOfParameters,name:B.name,inputSpaceName:B.inputSpaceName,outputSpaceName:B.outputSpaceName,parameters:S,fixedParameters:c};f.push(D)}),T(A,f,n);break}case h.PolyData:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.vertices,n,1),E=y(A,s.lines,n,2),l=y(A,s.polygons,n,3),c=y(A,s.triangleStrips,n,4),p=y(A,s.pointData,n,5),S=y(A,s.pointData,n,6),D={polyDataType:s.polyDataType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:s.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${B}`,linesBufferSize:s.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:s.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${l}`,triangleStripsBufferSize:s.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${c}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${p}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${S}`};T(A,D,n);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),o=0;try{o=A.callMain(t.slice())}catch(a){throw typeof a=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(a)):console.error("Build module in Debug mode for exception message information.")),a}finally{A.stackRestore(r)}let g=A.getModuleStdout(),C=A.getModuleStderr(),Q=[];return e!=null&&e.length>0&&o===0&&e.forEach(function(a,n){let s=null;switch(a.type){case h.TextStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),l=new Uint8Array(A.HEAPU8.buffer,B,E);s={data:Ee.decode(l)};break}case h.JsonCompatible:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),l=new Uint8Array(A.HEAPU8.buffer,B,E);s=JSON.parse(Ee.decode(l));break}case h.BinaryStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]);s={data:fe(A,B,E)};break}case h.TextFile:{s={path:a.data.path,data:A.fs_readFile(a.data.path,{encoding:"utf8"})};break}case h.BinaryFile:{s={path:a.data.path,data:tr(A,a.data.path)};break}case h.Image:{let B=sA(A,n);B.data=F(A,n,0,B.imageType.componentType),B.direction=F(A,n,1,z.Float64),B.metadata=new Map(B.metadata),s=B;break}case h.Mesh:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,B.meshType.pointComponentType):B.points=H(B.meshType.pointComponentType,new ArrayBuffer(0)),B.numberOfCells>0?B.cells=F(A,n,1,B.meshType.cellComponentType):B.cells=H(B.meshType.cellComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,n,2,B.meshType.pointPixelComponentType):B.pointData=H(B.meshType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,n,3,B.meshType.cellPixelComponentType):B.cellData=H(B.meshType.cellPixelComponentType,new ArrayBuffer(0)),s=B;break}case h.PointSet:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,B.pointSetType.pointComponentType):B.points=H(B.pointSetType.pointComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,n,1,B.pointSetType.pointPixelComponentType):B.pointData=H(B.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),s=B;break}case h.TransformList:{let B=sA(A,n);B.forEach((E,l)=>{E.numberOfFixedParameters>0&&(B[l].fixedParameters=F(A,n,l*2,E.transformType.parametersValueType)),E.numberOfFixedParameters>0&&(B[l].parameters=F(A,n,l*2+1,E.transformType.parametersValueType))}),s=B;break}case h.PolyData:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,z.Float32):B.points=new Float32Array,B.verticesBufferSize>0?B.vertices=F(A,n,1,R.UInt32):B.vertices=new Uint32Array,B.linesBufferSize>0?B.lines=F(A,n,2,R.UInt32):B.lines=new Uint32Array,B.polygonsBufferSize>0?B.polygons=F(A,n,3,R.UInt32):B.polygons=new Uint32Array,B.triangleStripsBufferSize>0?B.triangleStrips=F(A,n,4,R.UInt32):B.triangleStrips=new Uint32Array,B.numberOfPointPixels>0?B.pointData=F(A,n,5,B.polyDataType.pointPixelComponentType):B.pointData=H(B.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,n,6,B.polyDataType.cellPixelComponentType):B.cellData=H(B.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),s=B;break}default:throw Error("Unsupported output InterfaceType")}let f={type:a.type,data:s};Q.push(f)}),{returnValue:o,stdout:g,stderr:C,outputs:Q}}var le=er;var Ir=typeof globalThis.SharedArrayBuffer<"u";function rr(A,t){if(A==null)return[];let e=[];for(let I=0;I<A.length;I++){let r=or(A[I],t);r!==null&&e.push(r)}return e}function or(A,t){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),Ir&&e instanceof SharedArrayBuffer?null:t?e:e.slice(0)}var ue=rr;function gr(A){return[A.data,A.direction]}var De=gr;function ir(A){return[A.points,A.pointData,A.cells,A.cellData]}var he=ir;function nr(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var de=nr;async function sr(A,t,e,I){let r=le(A,t,e,I),o=[];return r.outputs.forEach(function(g){if(g.type===h.BinaryStream||g.type===h.BinaryFile){let C=g.data;o.push(C)}else if(g.type===h.Image){let C=g.data;o.push(...De(C))}else if(g.type===h.Mesh){let C=g.data;o.push(...he(C))}else if(g.type===h.PolyData){let C=g.data;o.push(...de(C))}}),MA(r,ue(o,!0))}var ye=sr;var Cr={runPipeline:async function(A,t,e,I,r,o){let g=await ae(A,t,o);return await ye(g,e,I,r)}};fA(Cr);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';qt(vt);export{De as compareDoubleImages,Vn as compareImages,Kt as getDefaultWebWorker,$ as getPipelineWorkerUrl,MA as getPipelinesBaseUrl,YI as setDefaultWebWorker,qt as setPipelineWorkerUrl,xI as setPipelinesBaseUrl,be as vectorMagnitude,qA as version};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
