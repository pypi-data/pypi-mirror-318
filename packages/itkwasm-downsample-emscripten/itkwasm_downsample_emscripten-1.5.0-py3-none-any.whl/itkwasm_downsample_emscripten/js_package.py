# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,var Ot=Object.defineProperty;var Pt=(A,e)=>{for(var t in e)Ot(A,t,{get:e[t],enumerable:!0})};var xt="1.5.0",MA=xt;var Jt={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},R=Jt;var Ht={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},j=Ht;function Mt(A,e){let t=null;switch(A){case R.UInt8:{t=new Uint8Array(e);break}case R.Int8:{t=new Int8Array(e);break}case R.UInt16:{t=new Uint16Array(e);break}case R.Int16:{t=new Int16Array(e);break}case R.UInt32:{t=new Uint32Array(e);break}case R.Int32:{t=new Int32Array(e);break}case R.UInt64:{typeof globalThis.BigUint64Array=="function"?t=new BigUint64Array(e):t=new Uint8Array(e);break}case R.Int64:{typeof globalThis.BigInt64Array=="function"?t=new BigInt64Array(e):t=new Uint8Array(e);break}case j.Float32:{t=new Float32Array(e);break}case j.Float64:{t=new Float64Array(e);break}case"null":{t=null;break}case null:{t=null;break}default:throw new Error("Type is not supported as a TypedArray")}return t}var P=Mt;var qt={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},p=qt;var we=Symbol("Comlink.proxy"),Yt=Symbol("Comlink.endpoint"),KA=Symbol("Comlink.releaseProxy"),qA=Symbol("Comlink.finalizer"),fA=Symbol("Comlink.thrown"),De=A=>typeof A=="object"&&A!==null||typeof A=="function",Kt={canHandle:A=>De(A)&&A[we],serialize(A){let{port1:e,port2:t}=new MessageChannel;return be(A,e),[t,[t]]},deserialize(A){return A.start(),WA(A)}},Wt={canHandle:A=>De(A)&&fA in A,serialize({value:A}){let e;return A instanceof Error?e={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:e={isError:!1,value:A},[e,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},Se=new Map([["proxy",Kt],["throw",Wt]]);function vt(A,e){for(let t of A)if(e===t||t==="*"||t instanceof RegExp&&t.test(e))return!0;return!1}function be(A,e=globalThis,t=["*"]){e.addEventListener("message",function r(n){if(!n||!n.data)return;if(!vt(t,n.origin)){console.warn(`Invalid origin '${n.origin}' for comlink proxy`);return}let{id:o,type:i,path:g}=Object.assign({path:[]},n.data),B=(n.data.argumentList||[]).map(W),C;try{let a=g.slice(0,-1).reduce((E,l)=>E[l],A),I=g.reduce((E,l)=>E[l],A);switch(i){case"GET":C=I;break;case"SET":a[g.slice(-1)[0]]=W(n.data.value),C=!0;break;case"APPLY":C=I.apply(a,B);break;case"CONSTRUCT":{let E=new I(...B);C=Zt(E)}break;case"ENDPOINT":{let{port1:E,port2:l}=new MessageChannel;be(A,l),C=vA(E,[E])}break;case"RELEASE":C=void 0;break;default:return}}catch(a){C={value:a,[fA]:0}}Promise.resolve(C).catch(a=>({value:a,[fA]:0})).then(a=>{let[I,E]=dA(a);e.postMessage(Object.assign(Object.assign({},I),{id:o}),E),i==="RELEASE"&&(e.removeEventListener("message",r),Re(e),qA in A&&typeof A[qA]=="function"&&A[qA]())}).catch(a=>{let[I,E]=dA({value:new TypeError("Unserializable return value"),[fA]:0});e.postMessage(Object.assign(Object.assign({},I),{id:o}),E)})}),e.start&&e.start()}function jt(A){return A.constructor.name==="MessagePort"}function Re(A){jt(A)&&A.close()}function WA(A,e){return YA(A,[],e)}function EA(A){if(A)throw new Error("Proxy has been released and is not useable")}function ke(A){return _(A,{type:"RELEASE"}).then(()=>{Re(A)})}var QA=new WeakMap,pA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let e=(QA.get(A)||0)-1;QA.set(A,e),e===0&&ke(A)});function _t(A,e){let t=(QA.get(e)||0)+1;QA.set(e,t),pA&&pA.register(A,e,A)}function zt(A){pA&&pA.unregister(A)}function YA(A,e=[],t=function(){}){let r=!1,n=new Proxy(t,{get(o,i){if(EA(r),i===KA)return()=>{zt(n),ke(A),r=!0};if(i==="then"){if(e.length===0)return{then:()=>n};let g=_(A,{type:"GET",path:e.map(B=>B.toString())}).then(W);return g.then.bind(g)}return YA(A,[...e,i])},set(o,i,g){EA(r);let[B,C]=dA(g);return _(A,{type:"SET",path:[...e,i].map(a=>a.toString()),value:B},C).then(W)},apply(o,i,g){EA(r);let B=e[e.length-1];if(B===Yt)return _(A,{type:"ENDPOINT"}).then(W);if(B==="bind")return YA(A,e.slice(0,-1));let[C,a]=ye(g);return _(A,{type:"APPLY",path:e.map(I=>I.toString()),argumentList:C},a).then(W)},construct(o,i){EA(r);let[g,B]=ye(i);return _(A,{type:"CONSTRUCT",path:e.map(C=>C.toString()),argumentList:g},B).then(W)}});return _t(n,A),n}function Vt(A){return Array.prototype.concat.apply([],A)}function ye(A){let e=A.map(dA);return[e.map(t=>t[0]),Vt(e.map(t=>t[1]))]}var Fe=new WeakMap;function vA(A,e){return Fe.set(A,e),A}function Zt(A){return Object.assign(A,{[we]:!0})}function dA(A){for(let[e,t]of Se)if(t.canHandle(A)){let[r,n]=t.serialize(A);return[{type:"HANDLER",name:e,value:r},n]}return[{type:"RAW",value:A},Fe.get(A)||[]]}function W(A){switch(A.type){case"HANDLER":return Se.get(A.name).deserialize(A.value);case"RAW":return A.value}}function _(A,e,t){return new Promise(r=>{let n=Xt();A.addEventListener("message",function o(i){!i.data||!i.data.id||i.data.id!==n||(A.removeEventListener("message",o),r(i.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:n},e),t)})}function Xt(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function rA(A,e){return function(){return A.apply(e,arguments)}}var{toString:$t}=Object.prototype,{getPrototypeOf:zA}=Object,hA=(A=>e=>{let t=$t.call(e);return A[t]||(A[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),N=A=>(A=A.toLowerCase(),e=>hA(e)===A),yA=A=>e=>typeof e===A,{isArray:z}=Array,nA=yA("undefined");function Ar(A){return A!==null&&!nA(A)&&A.constructor!==null&&!nA(A.constructor)&&k(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var Ge=N("ArrayBuffer");function er(A){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(A):e=A&&A.buffer&&Ge(A.buffer),e}var tr=yA("string"),k=yA("function"),Te=yA("number"),wA=A=>A!==null&&typeof A=="object",rr=A=>A===!0||A===!1,mA=A=>{if(hA(A)!=="object")return!1;let e=zA(A);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},nr=N("Date"),or=N("File"),ir=N("Blob"),ar=N("FileList"),sr=A=>wA(A)&&k(A.pipe),Ir=A=>{let e;return A&&(typeof FormData=="function"&&A instanceof FormData||k(A.append)&&((e=hA(A))==="formdata"||e==="object"&&k(A.toString)&&A.toString()==="[object FormData]"))},gr=N("URLSearchParams"),[lr,Cr,Br,cr]=["ReadableStream","Request","Response","Headers"].map(N),ur=A=>A.trim?A.trim():A.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function oA(A,e,{allOwnKeys:t=!1}={}){if(A===null||typeof A>"u")return;let r,n;if(typeof A!="object"&&(A=[A]),z(A))for(r=0,n=A.length;r<n;r++)e.call(null,A[r],r,A);else{let o=t?Object.getOwnPropertyNames(A):Object.keys(A),i=o.length,g;for(r=0;r<i;r++)g=o[r],e.call(null,A[g],g,A)}}function Oe(A,e){e=e.toLowerCase();let t=Object.keys(A),r=t.length,n;for(;r-- >0;)if(n=t[r],e===n.toLowerCase())return n;return null}var v=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Pe=A=>!nA(A)&&A!==v;function _A(){let{caseless:A}=Pe(this)&&this||{},e={},t=(r,n)=>{let o=A&&Oe(e,n)||n;mA(e[o])&&mA(r)?e[o]=_A(e[o],r):mA(r)?e[o]=_A({},r):z(r)?e[o]=r.slice():e[o]=r};for(let r=0,n=arguments.length;r<n;r++)arguments[r]&&oA(arguments[r],t);return e}var Er=(A,e,t,{allOwnKeys:r}={})=>(oA(e,(n,o)=>{t&&k(n)?A[o]=rA(n,t):A[o]=n},{allOwnKeys:r}),A),fr=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),Qr=(A,e,t,r)=>{A.prototype=Object.create(e.prototype,r),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:e.prototype}),t&&Object.assign(A.prototype,t)},pr=(A,e,t,r)=>{let n,o,i,g={};if(e=e||{},A==null)return e;do{for(n=Object.getOwnPropertyNames(A),o=n.length;o-- >0;)i=n[o],(!r||r(i,A,e))&&!g[i]&&(e[i]=A[i],g[i]=!0);A=t!==!1&&zA(A)}while(A&&(!t||t(A,e))&&A!==Object.prototype);return e},dr=(A,e,t)=>{A=String(A),(t===void 0||t>A.length)&&(t=A.length),t-=e.length;let r=A.indexOf(e,t);return r!==-1&&r===t},mr=A=>{if(!A)return null;if(z(A))return A;let e=A.length;if(!Te(e))return null;let t=new Array(e);for(;e-- >0;)t[e]=A[e];return t},hr=(A=>e=>A&&e instanceof A)(typeof Uint8Array<"u"&&zA(Uint8Array)),yr=(A,e)=>{let r=(A&&A[Symbol.iterator]).call(A),n;for(;(n=r.next())&&!n.done;){let o=n.value;e.call(A,o[0],o[1])}},wr=(A,e)=>{let t,r=[];for(;(t=A.exec(e))!==null;)r.push(t);return r},Dr=N("HTMLFormElement"),Sr=A=>A.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,r,n){return r.toUpperCase()+n}),Ne=(({hasOwnProperty:A})=>(e,t)=>A.call(e,t))(Object.prototype),br=N("RegExp"),xe=(A,e)=>{let t=Object.getOwnPropertyDescriptors(A),r={};oA(t,(n,o)=>{let i;(i=e(n,o,A))!==!1&&(r[o]=i||n)}),Object.defineProperties(A,r)},Rr=A=>{xe(A,(e,t)=>{if(k(A)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;let r=A[t];if(k(r)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},kr=(A,e)=>{let t={},r=n=>{n.forEach(o=>{t[o]=!0})};return z(A)?r(A):r(String(A).split(e)),t},Fr=()=>{},Ur=(A,e)=>A!=null&&Number.isFinite(A=+A)?A:e,jA="abcdefghijklmnopqrstuvwxyz",Le="0123456789",Je={DIGIT:Le,ALPHA:jA,ALPHA_DIGIT:jA+jA.toUpperCase()+Le},Nr=(A=16,e=Je.ALPHA_DIGIT)=>{let t="",{length:r}=e;for(;A--;)t+=e[Math.random()*r|0];return t};function Lr(A){return!!(A&&k(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var Gr=A=>{let e=new Array(10),t=(r,n)=>{if(wA(r)){if(e.indexOf(r)>=0)return;if(!("toJSON"in r)){e[n]=r;let o=z(r)?[]:{};return oA(r,(i,g)=>{let B=t(i,n+1);!nA(B)&&(o[g]=B)}),e[n]=void 0,o}}return r};return t(A,0)},Tr=N("AsyncFunction"),Or=A=>A&&(wA(A)||k(A))&&k(A.then)&&k(A.catch),He=((A,e)=>A?setImmediate:e?((t,r)=>(v.addEventListener("message",({source:n,data:o})=>{n===v&&o===t&&r.length&&r.shift()()},!1),n=>{r.push(n),v.postMessage(t,"*")}))(`axios@${Math.random()}`,[]):t=>setTimeout(t))(typeof setImmediate=="function",k(v.postMessage)),Pr=typeof queueMicrotask<"u"?queueMicrotask.bind(v):typeof process<"u"&&process.nextTick||He,s={isArray:z,isArrayBuffer:Ge,isBuffer:Ar,isFormData:Ir,isArrayBufferView:er,isString:tr,isNumber:Te,isBoolean:rr,isObject:wA,isPlainObject:mA,isReadableStream:lr,isRequest:Cr,isResponse:Br,isHeaders:cr,isUndefined:nA,isDate:nr,isFile:or,isBlob:ir,isRegExp:br,isFunction:k,isStream:sr,isURLSearchParams:gr,isTypedArray:hr,isFileList:ar,forEach:oA,merge:_A,extend:Er,trim:ur,stripBOM:fr,inherits:Qr,toFlatObject:pr,kindOf:hA,kindOfTest:N,endsWith:dr,toArray:mr,forEachEntry:yr,matchAll:wr,isHTMLForm:Dr,hasOwnProperty:Ne,hasOwnProp:Ne,reduceDescriptors:xe,freezeMethods:Rr,toObjectSet:kr,toCamelCase:Sr,noop:Fr,toFiniteNumber:Ur,findKey:Oe,global:v,isContextDefined:Pe,ALPHABET:Je,generateString:Nr,isSpecCompliantForm:Lr,toJSONObject:Gr,isAsyncFn:Tr,isThenable:Or,setImmediate:He,asap:Pr};function V(A,e,t,r,n){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),r&&(this.request=r),n&&(this.response=n)}s.inherits(V,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:s.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var Me=V.prototype,qe={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{qe[A]={value:A}});Object.defineProperties(V,qe);Object.defineProperty(Me,"isAxiosError",{value:!0});V.from=(A,e,t,r,n,o)=>{let i=Object.create(Me);return s.toFlatObject(A,i,function(B){return B!==Error.prototype},g=>g!=="isAxiosError"),V.call(i,A.message,e,t,r,n),i.cause=A,i.name=A.name,o&&Object.assign(i,o),i};var Q=V;var DA=null;function VA(A){return s.isPlainObject(A)||s.isArray(A)}function Ke(A){return s.endsWith(A,"[]")?A.slice(0,-2):A}function Ye(A,e,t){return A?A.concat(e).map(function(n,o){return n=Ke(n),!t&&o?"["+n+"]":n}).join(t?".":""):e}function xr(A){return s.isArray(A)&&!A.some(VA)}var Jr=s.toFlatObject(s,{},null,function(e){return/^is[A-Z]/.test(e)});function Hr(A,e,t){if(!s.isObject(A))throw new TypeError("target must be an object");e=e||new(DA||FormData),t=s.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(f,u){return!s.isUndefined(u[f])});let r=t.metaTokens,n=t.visitor||a,o=t.dots,i=t.indexes,B=(t.Blob||typeof Blob<"u"&&Blob)&&s.isSpecCompliantForm(e);if(!s.isFunction(n))throw new TypeError("visitor must be a function");function C(c){if(c===null)return"";if(s.isDate(c))return c.toISOString();if(!B&&s.isBlob(c))throw new Q("Blob is not supported. Use a Buffer instead.");return s.isArrayBuffer(c)||s.isTypedArray(c)?B&&typeof Blob=="function"?new Blob([c]):Buffer.from(c):c}function a(c,f,u){let m=c;if(c&&!u&&typeof c=="object"){if(s.endsWith(f,"{}"))f=r?f:f.slice(0,-2),c=JSON.stringify(c);else if(s.isArray(c)&&xr(c)||(s.isFileList(c)||s.endsWith(f,"[]"))&&(m=s.toArray(c)))return f=Ke(f),m.forEach(function(d,U){!(s.isUndefined(d)||d===null)&&e.append(i===!0?Ye([f],U,o):i===null?f:f+"[]",C(d))}),!1}return VA(c)?!0:(e.append(Ye(u,f,o),C(c)),!1)}let I=[],E=Object.assign(Jr,{defaultVisitor:a,convertValue:C,isVisitable:VA});function l(c,f){if(!s.isUndefined(c)){if(I.indexOf(c)!==-1)throw Error("Circular reference detected in "+f.join("."));I.push(c),s.forEach(c,function(m,S){(!(s.isUndefined(m)||m===null)&&n.call(e,m,s.isString(S)?S.trim():S,f,E))===!0&&l(m,f?f.concat(S):[S])}),I.pop()}}if(!s.isObject(A))throw new TypeError("data must be an object");return l(A),e}var M=Hr;function We(A){let e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(A).replace(/[!'()~]|%20|%00/g,function(r){return e[r]})}function ve(A,e){this._pairs=[],A&&M(A,this,e)}var je=ve.prototype;je.append=function(e,t){this._pairs.push([e,t])};je.toString=function(e){let t=e?function(r){return e.call(this,r,We)}:We;return this._pairs.map(function(n){return t(n[0])+"="+t(n[1])},"").join("&")};var SA=ve;function Mr(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function iA(A,e,t){if(!e)return A;let r=t&&t.encode||Mr,n=t&&t.serialize,o;if(n?o=n(e,t):o=s.isURLSearchParams(e)?e.toString():new SA(e,t).toString(r),o){let i=A.indexOf("#");i!==-1&&(A=A.slice(0,i)),A+=(A.indexOf("?")===-1?"?":"&")+o}return A}var ZA=class{constructor(){this.handlers=[]}use(e,t,r){return this.handlers.push({fulfilled:e,rejected:t,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){s.forEach(this.handlers,function(r){r!==null&&e(r)})}},XA=ZA;var bA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var _e=typeof URLSearchParams<"u"?URLSearchParams:SA;var ze=typeof FormData<"u"?FormData:null;var Ve=typeof Blob<"u"?Blob:null;var Ze={isBrowser:!0,classes:{URLSearchParams:_e,FormData:ze,Blob:Ve},protocols:["http","https","file","blob","url","data"]};var Ae={};Pt(Ae,{hasBrowserEnv:()=>$A,hasStandardBrowserEnv:()=>qr,hasStandardBrowserWebWorkerEnv:()=>Yr,origin:()=>Kr});var $A=typeof window<"u"&&typeof document<"u",qr=(A=>$A&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),Yr=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",Kr=$A&&window.location.href||"http://localhost";var D={...Ae,...Ze};function ee(A,e){return M(A,new D.classes.URLSearchParams,Object.assign({visitor:function(t,r,n,o){return D.isNode&&s.isBuffer(t)?(this.append(r,t.toString("base64")),!1):o.defaultVisitor.apply(this,arguments)}},e))}function Wr(A){return s.matchAll(/\w+|\[(\w*)]/g,A).map(e=>e[0]==="[]"?"":e[1]||e[0])}function vr(A){let e={},t=Object.keys(A),r,n=t.length,o;for(r=0;r<n;r++)o=t[r],e[o]=A[o];return e}function jr(A){function e(t,r,n,o){let i=t[o++];if(i==="__proto__")return!0;let g=Number.isFinite(+i),B=o>=t.length;return i=!i&&s.isArray(n)?n.length:i,B?(s.hasOwnProp(n,i)?n[i]=[n[i],r]:n[i]=r,!g):((!n[i]||!s.isObject(n[i]))&&(n[i]=[]),e(t,r,n[i],o)&&s.isArray(n[i])&&(n[i]=vr(n[i])),!g)}if(s.isFormData(A)&&s.isFunction(A.entries)){let t={};return s.forEachEntry(A,(r,n)=>{e(Wr(r),n,t,0)}),t}return null}var RA=jr;function _r(A,e,t){if(s.isString(A))try{return(e||JSON.parse)(A),s.trim(A)}catch(r){if(r.name!=="SyntaxError")throw r}return(t||JSON.stringify)(A)}var te={transitional:bA,adapter:["xhr","http","fetch"],transformRequest:[function(e,t){let r=t.getContentType()||"",n=r.indexOf("application/json")>-1,o=s.isObject(e);if(o&&s.isHTMLForm(e)&&(e=new FormData(e)),s.isFormData(e))return n?JSON.stringify(RA(e)):e;if(s.isArrayBuffer(e)||s.isBuffer(e)||s.isStream(e)||s.isFile(e)||s.isBlob(e)||s.isReadableStream(e))return e;if(s.isArrayBufferView(e))return e.buffer;if(s.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let g;if(o){if(r.indexOf("application/x-www-form-urlencoded")>-1)return ee(e,this.formSerializer).toString();if((g=s.isFileList(e))||r.indexOf("multipart/form-data")>-1){let B=this.env&&this.env.FormData;return M(g?{"files[]":e}:e,B&&new B,this.formSerializer)}}return o||n?(t.setContentType("application/json",!1),_r(e)):e}],transformResponse:[function(e){let t=this.transitional||te.transitional,r=t&&t.forcedJSONParsing,n=this.responseType==="json";if(s.isResponse(e)||s.isReadableStream(e))return e;if(e&&s.isString(e)&&(r&&!this.responseType||n)){let i=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(g){if(i)throw g.name==="SyntaxError"?Q.from(g,Q.ERR_BAD_RESPONSE,this,null,this.response):g}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:D.classes.FormData,Blob:D.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};s.forEach(["delete","get","head","post","put","patch"],A=>{te.headers[A]={}});var Z=te;var zr=s.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Xe=A=>{let e={},t,r,n;return A&&A.split(`
`).forEach(function(i){n=i.indexOf(":"),t=i.substring(0,n).trim().toLowerCase(),r=i.substring(n+1).trim(),!(!t||e[t]&&zr[t])&&(t==="set-cookie"?e[t]?e[t].push(r):e[t]=[r]:e[t]=e[t]?e[t]+", "+r:r)}),e};var $e=Symbol("internals");function aA(A){return A&&String(A).trim().toLowerCase()}function kA(A){return A===!1||A==null?A:s.isArray(A)?A.map(kA):String(A)}function Vr(A){let e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g,r;for(;r=t.exec(A);)e[r[1]]=r[2];return e}var Zr=A=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(A.trim());function re(A,e,t,r,n){if(s.isFunction(r))return r.call(this,e,t);if(n&&(e=t),!!s.isString(e)){if(s.isString(r))return e.indexOf(r)!==-1;if(s.isRegExp(r))return r.test(e)}}function Xr(A){return A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,r)=>t.toUpperCase()+r)}function $r(A,e){let t=s.toCamelCase(" "+e);["get","set","has"].forEach(r=>{Object.defineProperty(A,r+t,{value:function(n,o,i){return this[r].call(this,e,n,o,i)},configurable:!0})})}var X=class{constructor(e){e&&this.set(e)}set(e,t,r){let n=this;function o(g,B,C){let a=aA(B);if(!a)throw new Error("header name must be a non-empty string");let I=s.findKey(n,a);(!I||n[I]===void 0||C===!0||C===void 0&&n[I]!==!1)&&(n[I||B]=kA(g))}let i=(g,B)=>s.forEach(g,(C,a)=>o(C,a,B));if(s.isPlainObject(e)||e instanceof this.constructor)i(e,t);else if(s.isString(e)&&(e=e.trim())&&!Zr(e))i(Xe(e),t);else if(s.isHeaders(e))for(let[g,B]of e.entries())o(B,g,r);else e!=null&&o(t,e,r);return this}get(e,t){if(e=aA(e),e){let r=s.findKey(this,e);if(r){let n=this[r];if(!t)return n;if(t===!0)return Vr(n);if(s.isFunction(t))return t.call(this,n,r);if(s.isRegExp(t))return t.exec(n);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=aA(e),e){let r=s.findKey(this,e);return!!(r&&this[r]!==void 0&&(!t||re(this,this[r],r,t)))}return!1}delete(e,t){let r=this,n=!1;function o(i){if(i=aA(i),i){let g=s.findKey(r,i);g&&(!t||re(r,r[g],g,t))&&(delete r[g],n=!0)}}return s.isArray(e)?e.forEach(o):o(e),n}clear(e){let t=Object.keys(this),r=t.length,n=!1;for(;r--;){let o=t[r];(!e||re(this,this[o],o,e,!0))&&(delete this[o],n=!0)}return n}normalize(e){let t=this,r={};return s.forEach(this,(n,o)=>{let i=s.findKey(r,o);if(i){t[i]=kA(n),delete t[o];return}let g=e?Xr(o):String(o).trim();g!==o&&delete t[o],t[g]=kA(n),r[g]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){let t=Object.create(null);return s.forEach(this,(r,n)=>{r!=null&&r!==!1&&(t[n]=e&&s.isArray(r)?r.join(", "):r)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){let r=new this(e);return t.forEach(n=>r.set(n)),r}static accessor(e){let r=(this[$e]=this[$e]={accessors:{}}).accessors,n=this.prototype;function o(i){let g=aA(i);r[g]||($r(n,i),r[g]=!0)}return s.isArray(e)?e.forEach(o):o(e),this}};X.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);s.reduceDescriptors(X.prototype,({value:A},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>A,set(r){this[t]=r}}});s.freezeMethods(X);var w=X;function sA(A,e){let t=this||Z,r=e||t,n=w.from(r.headers),o=r.data;return s.forEach(A,function(g){o=g.call(t,o,n.normalize(),e?e.status:void 0)}),n.normalize(),o}function IA(A){return!!(A&&A.__CANCEL__)}function At(A,e,t){Q.call(this,A??"canceled",Q.ERR_CANCELED,e,t),this.name="CanceledError"}s.inherits(At,Q,{__CANCEL__:!0});var x=At;function gA(A,e,t){let r=t.config.validateStatus;!t.status||!r||r(t.status)?A(t):e(new Q("Request failed with status code "+t.status,[Q.ERR_BAD_REQUEST,Q.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}function ne(A){let e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(A);return e&&e[1]||""}function An(A,e){A=A||10;let t=new Array(A),r=new Array(A),n=0,o=0,i;return e=e!==void 0?e:1e3,function(B){let C=Date.now(),a=r[o];i||(i=C),t[n]=B,r[n]=C;let I=o,E=0;for(;I!==n;)E+=t[I++],I=I%A;if(n=(n+1)%A,n===o&&(o=(o+1)%A),C-i<e)return;let l=a&&C-a;return l?Math.round(E*1e3/l):void 0}}var et=An;function en(A,e){let t=0,r=1e3/e,n,o,i=(C,a=Date.now())=>{t=a,n=null,o&&(clearTimeout(o),o=null),A.apply(null,C)};return[(...C)=>{let a=Date.now(),I=a-t;I>=r?i(C,a):(n=C,o||(o=setTimeout(()=>{o=null,i(n)},r-I)))},()=>n&&i(n)]}var tt=en;var $=(A,e,t=3)=>{let r=0,n=et(50,250);return tt(o=>{let i=o.loaded,g=o.lengthComputable?o.total:void 0,B=i-r,C=n(B),a=i<=g;r=i;let I={loaded:i,total:g,progress:g?i/g:void 0,bytes:B,rate:C||void 0,estimated:C&&g&&a?(g-i)/C:void 0,event:o,lengthComputable:g!=null,[e?"download":"upload"]:!0};A(I)},t)},oe=(A,e)=>{let t=A!=null;return[r=>e[0]({lengthComputable:t,total:A,loaded:r}),e[1]]},ie=A=>(...e)=>s.asap(()=>A(...e));var rt=D.hasStandardBrowserEnv?function(){let e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a"),r;function n(o){let i=o;return e&&(t.setAttribute("href",i),i=t.href),t.setAttribute("href",i),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return r=n(window.location.href),function(i){let g=s.isString(i)?n(i):i;return g.protocol===r.protocol&&g.host===r.host}}():function(){return function(){return!0}}();var nt=D.hasStandardBrowserEnv?{write(A,e,t,r,n,o){let i=[A+"="+encodeURIComponent(e)];s.isNumber(t)&&i.push("expires="+new Date(t).toGMTString()),s.isString(r)&&i.push("path="+r),s.isString(n)&&i.push("domain="+n),o===!0&&i.push("secure"),document.cookie=i.join("; ")},read(A){let e=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function ae(A){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(A)}function se(A,e){return e?A.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):A}function lA(A,e){return A&&!ae(e)?se(A,e):e}var ot=A=>A instanceof w?{...A}:A;function L(A,e){e=e||{};let t={};function r(C,a,I){return s.isPlainObject(C)&&s.isPlainObject(a)?s.merge.call({caseless:I},C,a):s.isPlainObject(a)?s.merge({},a):s.isArray(a)?a.slice():a}function n(C,a,I){if(s.isUndefined(a)){if(!s.isUndefined(C))return r(void 0,C,I)}else return r(C,a,I)}function o(C,a){if(!s.isUndefined(a))return r(void 0,a)}function i(C,a){if(s.isUndefined(a)){if(!s.isUndefined(C))return r(void 0,C)}else return r(void 0,a)}function g(C,a,I){if(I in e)return r(C,a);if(I in A)return r(void 0,C)}let B={url:o,method:o,data:o,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,withXSRFToken:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:g,headers:(C,a)=>n(ot(C),ot(a),!0)};return s.forEach(Object.keys(Object.assign({},A,e)),function(a){let I=B[a]||n,E=I(A[a],e[a],a);s.isUndefined(E)&&I!==g||(t[a]=E)}),t}var FA=A=>{let e=L({},A),{data:t,withXSRFToken:r,xsrfHeaderName:n,xsrfCookieName:o,headers:i,auth:g}=e;e.headers=i=w.from(i),e.url=iA(lA(e.baseURL,e.url),A.params,A.paramsSerializer),g&&i.set("Authorization","Basic "+btoa((g.username||"")+":"+(g.password?unescape(encodeURIComponent(g.password)):"")));let B;if(s.isFormData(t)){if(D.hasStandardBrowserEnv||D.hasStandardBrowserWebWorkerEnv)i.setContentType(void 0);else if((B=i.getContentType())!==!1){let[C,...a]=B?B.split(";").map(I=>I.trim()).filter(Boolean):[];i.setContentType([C||"multipart/form-data",...a].join("; "))}}if(D.hasStandardBrowserEnv&&(r&&s.isFunction(r)&&(r=r(e)),r||r!==!1&&rt(e.url))){let C=n&&o&&nt.read(o);C&&i.set(n,C)}return e};var tn=typeof XMLHttpRequest<"u",it=tn&&function(A){return new Promise(function(t,r){let n=FA(A),o=n.data,i=w.from(n.headers).normalize(),{responseType:g,onUploadProgress:B,onDownloadProgress:C}=n,a,I,E,l,c;function f(){l&&l(),c&&c(),n.cancelToken&&n.cancelToken.unsubscribe(a),n.signal&&n.signal.removeEventListener("abort",a)}let u=new XMLHttpRequest;u.open(n.method.toUpperCase(),n.url,!0),u.timeout=n.timeout;function m(){if(!u)return;let d=w.from("getAllResponseHeaders"in u&&u.getAllResponseHeaders()),K={data:!g||g==="text"||g==="json"?u.responseText:u.response,status:u.status,statusText:u.statusText,headers:d,config:A,request:u};gA(function(O){t(O),f()},function(O){r(O),f()},K),u=null}"onloadend"in u?u.onloadend=m:u.onreadystatechange=function(){!u||u.readyState!==4||u.status===0&&!(u.responseURL&&u.responseURL.indexOf("file:")===0)||setTimeout(m)},u.onabort=function(){u&&(r(new Q("Request aborted",Q.ECONNABORTED,A,u)),u=null)},u.onerror=function(){r(new Q("Network Error",Q.ERR_NETWORK,A,u)),u=null},u.ontimeout=function(){let U=n.timeout?"timeout of "+n.timeout+"ms exceeded":"timeout exceeded",K=n.transitional||bA;n.timeoutErrorMessage&&(U=n.timeoutErrorMessage),r(new Q(U,K.clarifyTimeoutError?Q.ETIMEDOUT:Q.ECONNABORTED,A,u)),u=null},o===void 0&&i.setContentType(null),"setRequestHeader"in u&&s.forEach(i.toJSON(),function(U,K){u.setRequestHeader(K,U)}),s.isUndefined(n.withCredentials)||(u.withCredentials=!!n.withCredentials),g&&g!=="json"&&(u.responseType=n.responseType),C&&([E,c]=$(C,!0),u.addEventListener("progress",E)),B&&u.upload&&([I,l]=$(B),u.upload.addEventListener("progress",I),u.upload.addEventListener("loadend",l)),(n.cancelToken||n.signal)&&(a=d=>{u&&(r(!d||d.type?new x(null,A,u):d),u.abort(),u=null)},n.cancelToken&&n.cancelToken.subscribe(a),n.signal&&(n.signal.aborted?a():n.signal.addEventListener("abort",a)));let S=ne(n.url);if(S&&D.protocols.indexOf(S)===-1){r(new Q("Unsupported protocol "+S+":",Q.ERR_BAD_REQUEST,A));return}u.send(o||null)})};var rn=(A,e)=>{let t=new AbortController,r,n=function(B){if(!r){r=!0,i();let C=B instanceof Error?B:this.reason;t.abort(C instanceof Q?C:new x(C instanceof Error?C.message:C))}},o=e&&setTimeout(()=>{n(new Q(`timeout ${e} of ms exceeded`,Q.ETIMEDOUT))},e),i=()=>{A&&(o&&clearTimeout(o),o=null,A.forEach(B=>{B&&(B.removeEventListener?B.removeEventListener("abort",n):B.unsubscribe(n))}),A=null)};A.forEach(B=>B&&B.addEventListener&&B.addEventListener("abort",n));let{signal:g}=t;return g.unsubscribe=i,[g,()=>{o&&clearTimeout(o),o=null}]},at=rn;var nn=function*(A,e){let t=A.byteLength;if(!e||t<e){yield A;return}let r=0,n;for(;r<t;)n=r+e,yield A.slice(r,n),r=n},on=async function*(A,e,t){for await(let r of A)yield*nn(ArrayBuffer.isView(r)?r:await t(String(r)),e)},Ie=(A,e,t,r,n)=>{let o=on(A,e,n),i=0,g,B=C=>{g||(g=!0,r&&r(C))};return new ReadableStream({async pull(C){try{let{done:a,value:I}=await o.next();if(a){B(),C.close();return}let E=I.byteLength;if(t){let l=i+=E;t(l)}C.enqueue(new Uint8Array(I))}catch(a){throw B(a),a}},cancel(C){return B(C),o.return()}},{highWaterMark:2})};var NA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",It=NA&&typeof ReadableStream=="function",ge=NA&&(typeof TextEncoder=="function"?(A=>e=>A.encode(e))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),gt=(A,...e)=>{try{return!!A(...e)}catch{return!1}},an=It&&gt(()=>{let A=!1,e=new Request(D.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!e}),st=64*1024,le=It&&gt(()=>s.isReadableStream(new Response("").body)),UA={stream:le&&(A=>A.body)};NA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(e=>{!UA[e]&&(UA[e]=s.isFunction(A[e])?t=>t[e]():(t,r)=>{throw new Q(`Response type '${e}' is not supported`,Q.ERR_NOT_SUPPORT,r)})})})(new Response);var sn=async A=>{if(A==null)return 0;if(s.isBlob(A))return A.size;if(s.isSpecCompliantForm(A))return(await new Request(A).arrayBuffer()).byteLength;if(s.isArrayBufferView(A)||s.isArrayBuffer(A))return A.byteLength;if(s.isURLSearchParams(A)&&(A=A+""),s.isString(A))return(await ge(A)).byteLength},In=async(A,e)=>{let t=s.toFiniteNumber(A.getContentLength());return t??sn(e)},lt=NA&&(async A=>{let{url:e,method:t,data:r,signal:n,cancelToken:o,timeout:i,onDownloadProgress:g,onUploadProgress:B,responseType:C,headers:a,withCredentials:I="same-origin",fetchOptions:E}=FA(A);C=C?(C+"").toLowerCase():"text";let[l,c]=n||o||i?at([n,o],i):[],f,u,m=()=>{!f&&setTimeout(()=>{l&&l.unsubscribe()}),f=!0},S;try{if(B&&an&&t!=="get"&&t!=="head"&&(S=await In(a,r))!==0){let T=new Request(e,{method:"POST",body:r,duplex:"half"}),O;if(s.isFormData(r)&&(O=T.headers.get("content-type"))&&a.setContentType(O),T.body){let[HA,uA]=oe(S,$(ie(B)));r=Ie(T.body,st,HA,uA,ge)}}s.isString(I)||(I=I?"include":"omit"),u=new Request(e,{...E,signal:l,method:t.toUpperCase(),headers:a.normalize().toJSON(),body:r,duplex:"half",credentials:I});let d=await fetch(u),U=le&&(C==="stream"||C==="response");if(le&&(g||U)){let T={};["status","statusText","headers"].forEach(he=>{T[he]=d[he]});let O=s.toFiniteNumber(d.headers.get("content-length")),[HA,uA]=g&&oe(O,$(ie(g),!0))||[];d=new Response(Ie(d.body,st,HA,()=>{uA&&uA(),U&&m()},ge),T)}C=C||"text";let K=await UA[s.findKey(UA,C)||"text"](d,A);return!U&&m(),c&&c(),await new Promise((T,O)=>{gA(T,O,{data:K,headers:w.from(d.headers),status:d.status,statusText:d.statusText,config:A,request:u})})}catch(d){throw m(),d&&d.name==="TypeError"&&/fetch/i.test(d.message)?Object.assign(new Q("Network Error",Q.ERR_NETWORK,A,u),{cause:d.cause||d}):Q.from(d,d&&d.code,A,u)}});var Ce={http:DA,xhr:it,fetch:lt};s.forEach(Ce,(A,e)=>{if(A){try{Object.defineProperty(A,"name",{value:e})}catch{}Object.defineProperty(A,"adapterName",{value:e})}});var Ct=A=>`- ${A}`,gn=A=>s.isFunction(A)||A===null||A===!1,LA={getAdapter:A=>{A=s.isArray(A)?A:[A];let{length:e}=A,t,r,n={};for(let o=0;o<e;o++){t=A[o];let i;if(r=t,!gn(t)&&(r=Ce[(i=String(t)).toLowerCase()],r===void 0))throw new Q(`Unknown adapter '${i}'`);if(r)break;n[i||"#"+o]=r}if(!r){let o=Object.entries(n).map(([g,B])=>`adapter ${g} `+(B===!1?"is not supported by the environment":"is not available in the build")),i=e?o.length>1?`since :
`+o.map(Ct).join(`
`):" "+Ct(o[0]):"as no adapter specified";throw new Q("There is no suitable adapter to dispatch the request "+i,"ERR_NOT_SUPPORT")}return r},adapters:Ce};function Be(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new x(null,A)}function GA(A){return Be(A),A.headers=w.from(A.headers),A.data=sA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),LA.getAdapter(A.adapter||Z.adapter)(A).then(function(r){return Be(A),r.data=sA.call(A,A.transformResponse,r),r.headers=w.from(r.headers),r},function(r){return IA(r)||(Be(A),r&&r.response&&(r.response.data=sA.call(A,A.transformResponse,r.response),r.response.headers=w.from(r.response.headers))),Promise.reject(r)})}var TA="1.7.4";var ce={};["object","boolean","number","function","string","symbol"].forEach((A,e)=>{ce[A]=function(r){return typeof r===A||"a"+(e<1?"n ":" ")+A}});var Bt={};ce.transitional=function(e,t,r){function n(o,i){return"[Axios v"+TA+"] Transitional option '"+o+"'"+i+(r?". "+r:"")}return(o,i,g)=>{if(e===!1)throw new Q(n(i," has been removed"+(t?" in "+t:"")),Q.ERR_DEPRECATED);return t&&!Bt[i]&&(Bt[i]=!0,console.warn(n(i," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(o,i,g):!0}};function ln(A,e,t){if(typeof A!="object")throw new Q("options must be an object",Q.ERR_BAD_OPTION_VALUE);let r=Object.keys(A),n=r.length;for(;n-- >0;){let o=r[n],i=e[o];if(i){let g=A[o],B=g===void 0||i(g,o,A);if(B!==!0)throw new Q("option "+o+" must be "+B,Q.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new Q("Unknown option "+o,Q.ERR_BAD_OPTION)}}var OA={assertOptions:ln,validators:ce};var q=OA.validators,AA=class{constructor(e){this.defaults=e,this.interceptors={request:new XA,response:new XA}}async request(e,t){try{return await this._request(e,t)}catch(r){if(r instanceof Error){let n;Error.captureStackTrace?Error.captureStackTrace(n={}):n=new Error;let o=n.stack?n.stack.replace(/^.+\n/,""):"";try{r.stack?o&&!String(r.stack).endsWith(o.replace(/^.+\n.+\n/,""))&&(r.stack+=`
`+o):r.stack=o}catch{}}throw r}}_request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=L(this.defaults,t);let{transitional:r,paramsSerializer:n,headers:o}=t;r!==void 0&&OA.assertOptions(r,{silentJSONParsing:q.transitional(q.boolean),forcedJSONParsing:q.transitional(q.boolean),clarifyTimeoutError:q.transitional(q.boolean)},!1),n!=null&&(s.isFunction(n)?t.paramsSerializer={serialize:n}:OA.assertOptions(n,{encode:q.function,serialize:q.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let i=o&&s.merge(o.common,o[t.method]);o&&s.forEach(["delete","get","head","post","put","patch","common"],c=>{delete o[c]}),t.headers=w.concat(i,o);let g=[],B=!0;this.interceptors.request.forEach(function(f){typeof f.runWhen=="function"&&f.runWhen(t)===!1||(B=B&&f.synchronous,g.unshift(f.fulfilled,f.rejected))});let C=[];this.interceptors.response.forEach(function(f){C.push(f.fulfilled,f.rejected)});let a,I=0,E;if(!B){let c=[GA.bind(this),void 0];for(c.unshift.apply(c,g),c.push.apply(c,C),E=c.length,a=Promise.resolve(t);I<E;)a=a.then(c[I++],c[I++]);return a}E=g.length;let l=t;for(I=0;I<E;){let c=g[I++],f=g[I++];try{l=c(l)}catch(u){f.call(this,u);break}}try{a=GA.call(this,l)}catch(c){return Promise.reject(c)}for(I=0,E=C.length;I<E;)a=a.then(C[I++],C[I++]);return a}getUri(e){e=L(this.defaults,e);let t=lA(e.baseURL,e.url);return iA(t,e.params,e.paramsSerializer)}};s.forEach(["delete","get","head","options"],function(e){AA.prototype[e]=function(t,r){return this.request(L(r||{},{method:e,url:t,data:(r||{}).data}))}});s.forEach(["post","put","patch"],function(e){function t(r){return function(o,i,g){return this.request(L(g||{},{method:e,headers:r?{"Content-Type":"multipart/form-data"}:{},url:o,data:i}))}}AA.prototype[e]=t(),AA.prototype[e+"Form"]=t(!0)});var CA=AA;var ue=class A{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(o){t=o});let r=this;this.promise.then(n=>{if(!r._listeners)return;let o=r._listeners.length;for(;o-- >0;)r._listeners[o](n);r._listeners=null}),this.promise.then=n=>{let o,i=new Promise(g=>{r.subscribe(g),o=g}).then(n);return i.cancel=function(){r.unsubscribe(o)},i},e(function(o,i,g){r.reason||(r.reason=new x(o,i,g),t(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;let t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new A(function(n){e=n}),cancel:e}}},ct=ue;function Ee(A){return function(t){return A.apply(null,t)}}function fe(A){return s.isObject(A)&&A.isAxiosError===!0}var Qe={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Qe).forEach(([A,e])=>{Qe[e]=A});var ut=Qe;function Et(A){let e=new CA(A),t=rA(CA.prototype.request,e);return s.extend(t,CA.prototype,e,{allOwnKeys:!0}),s.extend(t,e,null,{allOwnKeys:!0}),t.create=function(n){return Et(L(A,n))},t}var h=Et(Z);h.Axios=CA;h.CanceledError=x;h.CancelToken=ct;h.isCancel=IA;h.VERSION=TA;h.toFormData=M;h.AxiosError=Q;h.Cancel=h.CanceledError;h.all=function(e){return Promise.all(e)};h.spread=Ee;h.isAxiosError=fe;h.mergeConfig=L;h.AxiosHeaders=w;h.formToJSON=A=>RA(s.isHTMLForm(A)?new FormData(A):A);h.getAdapter=LA.getAdapter;h.HttpStatusCode=ut;h.default=h;var eA=h;var{Axios:rs,AxiosError:ns,CanceledError:os,isCancel:is,CancelToken:as,VERSION:ss,all:Is,Cancel:gs,isAxiosError:ls,spread:Cs,toFormData:Bs,AxiosHeaders:cs,HttpStatusCode:us,formToJSON:Es,getAdapter:fs,mergeConfig:Qs}=eA;async function Cn(A,e){let t=A,r=null;if(t==null)r=new Worker(new URL("./web-workers/itk-wasm-pipeline.worker.js",import.meta.url),{type:"module"});else if(t.startsWith("http")){let n=await eA.get(t,{responseType:"blob",params:e}),o=URL.createObjectURL(n.data);r=new Worker(o,{type:"module"})}else r=new Worker(t,{type:"module"});return r}var BA=Cn;function ft(A){let e=WA(A),t=A;return t.terminated=!1,t.workerProxy=e,t.originalTerminate=t.terminate,t.terminate=()=>{t.terminated=!0,t.workerProxy[KA](),t.originalTerminate()},{workerProxy:e,worker:t}}async function Bn(A,e,t){let r;if(A!=null){let o=A;return o.workerProxy!==void 0?(r=o.workerProxy,{workerProxy:r,worker:o}):ft(A)}let n=await BA(e,t);return ft(n)}var Qt=Bn;async function cn(A,e,t){let r="unknown";typeof A!="string"?r=A.href:A.startsWith("http")?r=A:r=typeof e<"u"?`${e}/${A}`:A,r.endsWith(".js")&&(r=r.substring(0,r.length-3)),r.endsWith(".wasm")&&(r=r.substring(0,r.length-5));let n=`${r}.wasm`,i=(await eA.get(n,{responseType:"arraybuffer",params:t})).data;return(await import(`${r}.js`)).default({wasmBinary:i})}var pt=cn;var dt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11]));var yt=typeof globalThis.SharedArrayBuffer=="function",mt=new TextEncoder,ht=new TextDecoder("utf-8");function un(A,e){let t={flags:"r",encoding:"binary"},r=A.fs_open(e,t.flags),o=A.fs_stat(e).size,i=null;yt?i=new SharedArrayBuffer(o):i=new ArrayBuffer(o);let g=new Uint8Array(i);return A.fs_read(r,g,0,o,0),A.fs_close(r),g}function wt(A,e,t){let r=null;yt?r=new SharedArrayBuffer(t):r=new ArrayBuffer(t);let n=new Uint8Array(r),o=new Uint8Array(A.HEAPU8.buffer,e,t);return n.set(o),n}function y(A,e,t,r){let n=0;return e!==null&&(n=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,t,r,e.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(e.buffer),n)),n}function Y(A,e,t){let r=JSON.stringify(e),n=A.lengthBytesUTF8(r)+1,o=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,t,n]);A.stringToUTF8(r,o,n)}function b(A,e,t,r){let n=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,e,t]),o=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,e,t]),i=wt(A,n,o);return P(r,i.buffer)}function cA(A,e){let t=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,e]),r=A.UTF8ToString(t);return JSON.parse(r)}function En(A,e,t,r){r!=null&&r.length>0&&r.forEach(function(C,a){switch(C.type){case p.TextStream:{let I=mt.encode(C.data.data),E=y(A,I,a,0),l={size:I.buffer.byteLength,data:`data:application/vnd.itk.address,0:${E}`};Y(A,l,a);break}case p.JsonCompatible:{let I=mt.encode(JSON.stringify(C.data)),E=y(A,I,a,0),l={size:I.buffer.byteLength,data:`data:application/vnd.itk.address,0:${E}`};Y(A,l,a);break}case p.BinaryStream:{let I=C.data.data,E=y(A,I,a,0),l={size:I.buffer.byteLength,data:`data:application/vnd.itk.address,0:${E}`};Y(A,l,a);break}case p.TextFile:{A.fs_writeFile(C.data.path,C.data.data);break}case p.BinaryFile:{A.fs_writeFile(C.data.path,C.data.data);break}case p.Image:{let I=C.data,E=y(A,I.data,a,0),l=y(A,I.direction,a,1),c=typeof I.metadata?.entries<"u"?Array.from(I.metadata.entries()):[],f={imageType:I.imageType,name:I.name,origin:I.origin,spacing:I.spacing,direction:`data:application/vnd.itk.address,0:${l}`,size:I.size,data:`data:application/vnd.itk.address,0:${E}`,metadata:c};Y(A,f,a);break}case p.Mesh:{let I=C.data,E=y(A,I.points,a,0),l=y(A,I.cells,a,1),c=y(A,I.pointData,a,2),f=y(A,I.cellData,a,3),u={meshType:I.meshType,name:I.name,numberOfPoints:I.numberOfPoints,points:`data:application/vnd.itk.address,0:${E}`,numberOfCells:I.numberOfCells,cells:`data:application/vnd.itk.address,0:${l}`,cellBufferSize:I.cellBufferSize,numberOfPointPixels:I.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${c}`,numberOfCellPixels:I.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${f}`};Y(A,u,a);break}case p.PointSet:{let I=C.data,E=y(A,I.points,a,0),l=y(A,I.pointData,a,1),c={pointSetType:I.pointSetType,name:I.name,numberOfPoints:I.numberOfPoints,points:`data:application/vnd.itk.address,0:${E}`,numberOfPointPixels:I.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${l}`};Y(A,c,a);break}case p.TransformList:{let I=C.data,E=[];I.forEach((l,c)=>{let u=`data:application/vnd.itk.address,0:${y(A,l.fixedParameters,a,c*2)}`,S=`data:application/vnd.itk.address,0:${y(A,l.parameters,a,c*2+1)}`,d={transformType:l.transformType,numberOfFixedParameters:l.numberOfFixedParameters,numberOfParameters:l.numberOfParameters,name:l.name,inputSpaceName:l.inputSpaceName,outputSpaceName:l.outputSpaceName,parameters:S,fixedParameters:u};E.push(d)}),Y(A,E,a);break}case p.PolyData:{let I=C.data,E=y(A,I.points,a,0),l=y(A,I.vertices,a,1),c=y(A,I.lines,a,2),f=y(A,I.polygons,a,3),u=y(A,I.triangleStrips,a,4),m=y(A,I.pointData,a,5),S=y(A,I.pointData,a,6),d={polyDataType:I.polyDataType,name:I.name,numberOfPoints:I.numberOfPoints,points:`data:application/vnd.itk.address,0:${E}`,verticesBufferSize:I.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${l}`,linesBufferSize:I.linesBufferSize,lines:`data:application/vnd.itk.address,0:${c}`,polygonsBufferSize:I.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${f}`,triangleStripsBufferSize:I.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${u}`,numberOfPointPixels:I.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${m}`,numberOfCellPixels:I.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${S}`};Y(A,d,a);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let n=A.stackSave(),o=0;try{o=A.callMain(e.slice())}catch(C){throw typeof C=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(C)):console.error("Build module in Debug mode for exception message information.")),C}finally{A.stackRestore(n)}let i=A.getModuleStdout(),g=A.getModuleStderr(),B=[];return t!=null&&t.length>0&&o===0&&t.forEach(function(C,a){let I=null;switch(C.type){case p.TextStream:{let l=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),c=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),f=new Uint8Array(A.HEAPU8.buffer,l,c);I={data:ht.decode(f)};break}case p.JsonCompatible:{let l=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),c=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]),f=new Uint8Array(A.HEAPU8.buffer,l,c);I=JSON.parse(ht.decode(f));break}case p.BinaryStream:{let l=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,a,0]),c=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,a,0]);I={data:wt(A,l,c)};break}case p.TextFile:{I={path:C.data.path,data:A.fs_readFile(C.data.path,{encoding:"utf8"})};break}case p.BinaryFile:{I={path:C.data.path,data:un(A,C.data.path)};break}case p.Image:{let l=cA(A,a);l.data=b(A,a,0,l.imageType.componentType),l.direction=b(A,a,1,j.Float64),l.metadata=new Map(l.metadata),I=l;break}case p.Mesh:{let l=cA(A,a);l.numberOfPoints>0?l.points=b(A,a,0,l.meshType.pointComponentType):l.points=P(l.meshType.pointComponentType,new ArrayBuffer(0)),l.numberOfCells>0?l.cells=b(A,a,1,l.meshType.cellComponentType):l.cells=P(l.meshType.cellComponentType,new ArrayBuffer(0)),l.numberOfPointPixels>0?l.pointData=b(A,a,2,l.meshType.pointPixelComponentType):l.pointData=P(l.meshType.pointPixelComponentType,new ArrayBuffer(0)),l.numberOfCellPixels>0?l.cellData=b(A,a,3,l.meshType.cellPixelComponentType):l.cellData=P(l.meshType.cellPixelComponentType,new ArrayBuffer(0)),I=l;break}case p.PointSet:{let l=cA(A,a);l.numberOfPoints>0?l.points=b(A,a,0,l.pointSetType.pointComponentType):l.points=P(l.pointSetType.pointComponentType,new ArrayBuffer(0)),l.numberOfPointPixels>0?l.pointData=b(A,a,1,l.pointSetType.pointPixelComponentType):l.pointData=P(l.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),I=l;break}case p.TransformList:{let l=cA(A,a);l.forEach((c,f)=>{c.numberOfFixedParameters>0&&(l[f].fixedParameters=b(A,a,f*2,c.transformType.parametersValueType)),c.numberOfFixedParameters>0&&(l[f].parameters=b(A,a,f*2+1,c.transformType.parametersValueType))}),I=l;break}case p.PolyData:{let l=cA(A,a);l.numberOfPoints>0?l.points=b(A,a,0,j.Float32):l.points=new Float32Array,l.verticesBufferSize>0?l.vertices=b(A,a,1,R.UInt32):l.vertices=new Uint32Array,l.linesBufferSize>0?l.lines=b(A,a,2,R.UInt32):l.lines=new Uint32Array,l.polygonsBufferSize>0?l.polygons=b(A,a,3,R.UInt32):l.polygons=new Uint32Array,l.triangleStripsBufferSize>0?l.triangleStrips=b(A,a,4,R.UInt32):l.triangleStrips=new Uint32Array,l.numberOfPointPixels>0?l.pointData=b(A,a,5,l.polyDataType.pointPixelComponentType):l.pointData=P(l.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),l.numberOfCellPixels>0?l.cellData=b(A,a,6,l.polyDataType.cellPixelComponentType):l.cellData=P(l.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),I=l;break}default:throw Error("Unsupported output InterfaceType")}let E={type:C.type,data:I};B.push(E)}),{returnValue:o,stdout:i,stderr:g,outputs:B}}var Dt=En;var fn=typeof globalThis.SharedArrayBuffer<"u";function Qn(A,e){if(A==null)return[];let t=[];for(let r=0;r<A.length;r++){let n=pn(A[r],e);n!==null&&t.push(n)}return t}function pn(A,e){if(A==null)return null;let t=null;return A.buffer!==void 0?t=A.buffer:A.byteLength!==void 0&&(t=A),fn&&t instanceof SharedArrayBuffer?null:e?t:t.slice(0)}var St=Qn;function dn(A){return[A.data,A.direction]}var bt=dn;function mn(A){return[A.points,A.pointData,A.cells,A.cellData]}var Rt=mn;function hn(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var kt=hn;var yn;function PA(){return yn}var wn;function Ft(){return wn}var Dn;function xA(){return Dn}var pe=new Map;function Sn(){let A=xA();return typeof A>"u"&&(A=null),A}function Ut(){let A=PA();return typeof A>"u"&&(A=new URL("/pipelines",document.location.origin).href),A}function JA(){let A=Ft();return typeof A>"u"&&(A={}),A}async function bn(A,e,t){let r=A,n=A;if(typeof A!="string"&&(r=new URL(A.href),n=r.href),pe.has(n))return pe.get(n);{let o=await pt(A,e?.toString()??Ut(),t??JA());return pe.set(n,o),o}}async function Rn(A,e,t,r,n){if(!await dt()){let u="WebAssembly SIMD support is required -- please update your browser.";throw alert(u),new Error(u)}let o=n?.webWorker??null;if(o===!1){let u=await bn(A.toString(),n?.pipelineBaseUrl,n?.pipelineQueryParams??JA());return Dt(u,e,t,r)}let i=o,g=n?.pipelineWorkerUrl??Sn(),B=typeof g!="string"&&typeof g?.href<"u"?g.href:g,{workerProxy:C,worker:a}=await Qt(i,B,n?.pipelineQueryParams??JA());i=a;let I=[];r!=null&&r.length>0&&r.forEach(function(u){if(u.type===p.BinaryStream){let m=u.data.data;I.push(m)}else if(u.type===p.BinaryFile){let m=u.data.data;I.push(m)}else if(u.type===p.Image){let m=u.data;m.data!==null&&I.push(...bt(m))}else if(u.type===p.Mesh){let m=u.data;I.push(...Rt(m))}else if(u.type===p.PolyData){let m=u.data;I.push(...kt(m))}});let E=n?.pipelineBaseUrl??Ut(),l=typeof E!="string"&&typeof E?.href<"u"?E.href:E,c=r!=null?vA(r,St(I,n?.noCopy)):null,f=await C.runPipeline(A.toString(),l,e,t,c,n?.pipelineQueryParams??JA());return{returnValue:f.returnValue,stdout:f.stdout,stderr:f.stderr,outputs:f.outputs,webWorker:i}}var G=Rn;var kn=null;function Nt(){return kn}var de,Fn=`https://cdn.jsdelivr.net/npm/@itk-wasm/downsample@${MA}/dist/pipelines`;function sI(A){de=A}function J(){if(typeof de<"u")return de;let A=PA();return typeof A<"u"?A:Fn}var me,Un=null;function Lt(A){me=A}function F(){if(typeof me<"u")return me;let A=xA();return typeof A<"u"?A:Un}var tA=null;async function Gt(){let A=F(),e=typeof A!="string"&&typeof A?.href<"u"?A.href:A;tA=await BA(e)}function uI(A){tA=A}async function H(){if(tA!==null)return tA.terminated&&await Gt(),tA;let A=Nt();return A!==null?A:(await Gt(),tA)}async function Nn(A,e={shrinkFactors:[2,2]}){let t=[{type:p.Image}],r=[{type:p.Image,data:A}],n=[];if(n.push("0"),n.push("0"),n.push("--memory-io"),e.shrinkFactors){if(e.shrinkFactors.length<2)throw new Error('"shrink-factors" option must have a length > 2');n.push("--shrink-factors"),await Promise.all(e.shrinkFactors.map(async c=>{n.push(c.toString())}))}e.informationOnly&&e.informationOnly&&n.push("--information-only");let g="downsample-bin-shrink",B=e?.webWorker;B===void 0&&(B=await H());let{webWorker:C,returnValue:a,stderr:I,outputs:E}=await G(g,n,t,r,{pipelineBaseUrl:J(),pipelineWorkerUrl:F(),webWorker:B,noCopy:e?.noCopy});if(a!==0&&I!=="")throw new Error(I);return{webWorker:C,downsampled:E[0]?.data}}var Ln=Nn;async function Gn(A,e={shrinkFactors:[2,2]}){let t=[{type:p.Image}],r=[{type:p.Image,data:A}],n=[];if(n.push("0"),n.push("0"),n.push("--memory-io"),e.shrinkFactors){if(e.shrinkFactors.length<2)throw new Error('"shrink-factors" option must have a length > 2');n.push("--shrink-factors"),await Promise.all(e.shrinkFactors.map(async c=>{n.push(c.toString())}))}if(e.cropRadius){if(e.cropRadius.length<2)throw new Error('"crop-radius" option must have a length > 2');n.push("--crop-radius"),await Promise.all(e.cropRadius.map(async c=>{n.push(c.toString())}))}let g="downsample-label-image",B=e?.webWorker;B===void 0&&(B=await H());let{webWorker:C,returnValue:a,stderr:I,outputs:E}=await G(g,n,t,r,{pipelineBaseUrl:J(),pipelineWorkerUrl:F(),webWorker:B,noCopy:e?.noCopy});if(a!==0&&I!=="")throw new Error(I);return{webWorker:C,downsampled:E[0]?.data}}var Tn=Gn;async function On(A={shrinkFactors:[2,2]}){let e=[{type:p.JsonCompatible}],t=[],r=[];if(r.push("0"),r.push("--memory-io"),typeof A.shrinkFactors<"u"){if(A.shrinkFactors.length<1)throw new Error('"shrink-factors" option must have a length > 1');r.push("--shrink-factors"),await Promise.all(A.shrinkFactors.map(async E=>{r.push(E.toString())}))}let o="downsample-sigma",i=A?.webWorker;i===void 0&&(i=await H());let{webWorker:g,returnValue:B,stderr:C,outputs:a}=await G(o,r,e,t,{pipelineBaseUrl:J(),pipelineWorkerUrl:F(),webWorker:i,noCopy:A?.noCopy});if(B!==0&&C!=="")throw new Error(C);return{webWorker:g,sigma:a[0]?.data}}var Pn=On;async function xn(A,e={shrinkFactors:[2,2]}){let t=[{type:p.Image}],r=[{type:p.Image,data:A}],n=[];if(n.push("0"),n.push("0"),n.push("--memory-io"),e.shrinkFactors){if(e.shrinkFactors.length<2)throw new Error('"shrink-factors" option must have a length > 2');n.push("--shrink-factors"),await Promise.all(e.shrinkFactors.map(async c=>{n.push(c.toString())}))}if(e.cropRadius){if(e.cropRadius.length<2)throw new Error('"crop-radius" option must have a length > 2');n.push("--crop-radius"),await Promise.all(e.cropRadius.map(async c=>{n.push(c.toString())}))}let g="downsample",B=e?.webWorker;B===void 0&&(B=await H());let{webWorker:C,returnValue:a,stderr:I,outputs:E}=await G(g,n,t,r,{pipelineBaseUrl:J(),pipelineWorkerUrl:F(),webWorker:B,noCopy:e?.noCopy});if(a!==0&&I!=="")throw new Error(I);return{webWorker:C,downsampled:E[0]?.data}}var Jn=xn;async function Hn(A={size:[1,1],sigma:[1,1]}){let e=[{type:p.JsonCompatible}],t=[],r=[];if(r.push("0"),r.push("--memory-io"),typeof A.size<"u"){if(A.size.length<1)throw new Error('"size" option must have a length > 1');r.push("--size"),await Promise.all(A.size.map(async E=>{r.push(E.toString())}))}if(typeof A.sigma<"u"){if(A.sigma.length<1)throw new Error('"sigma" option must have a length > 1');r.push("--sigma"),await Promise.all(A.sigma.map(async E=>{r.push(E.toString())}))}typeof A.maxKernelWidth<"u"&&r.push("--max-kernel-width",A.maxKernelWidth.toString()),typeof A.maxKernelError<"u"&&r.push("--max-kernel-error",A.maxKernelError.toString());let o="gaussian-kernel-radius",i=A?.webWorker;i===void 0&&(i=await H());let{webWorker:g,returnValue:B,stderr:C,outputs:a}=await G(o,r,e,t,{pipelineBaseUrl:J(),pipelineWorkerUrl:F(),webWorker:i,noCopy:A?.noCopy});if(B!==0&&C!=="")throw new Error(C);return{webWorker:g,radius:a[0]?.data}}var Mn=Hn;var Tt='data:text/javascript;charset=utf-8,var me=Object.defineProperty;var we=(A,t)=>{for(var e in t)me(A,e,{get:t[e],enumerable:!0})};var ft=Symbol("Comlink.proxy"),pe=Symbol("Comlink.endpoint"),Se=Symbol("Comlink.releaseProxy"),YA=Symbol("Comlink.finalizer"),aA=Symbol("Comlink.thrown"),lt=A=>typeof A=="object"&&A!==null||typeof A=="function",Fe={canHandle:A=>lt(A)&&A[ft],serialize(A){let{port1:t,port2:e}=new MessageChannel;return fA(A,t),[e,[e]]},deserialize(A){return A.start(),Ge(A)}},Re={canHandle:A=>lt(A)&&aA in A,serialize({value:A}){let t;return A instanceof Error?t={isError:!0,value:{message:A.message,name:A.name,stack:A.stack}}:t={isError:!1,value:A},[t,[]]},deserialize(A){throw A.isError?Object.assign(new Error(A.value.message),A.value):A.value}},ut=new Map([["proxy",Fe],["throw",Re]]);function Ne(A,t){for(let e of A)if(t===e||e==="*"||e instanceof RegExp&&e.test(t))return!0;return!1}function fA(A,t=globalThis,e=["*"]){t.addEventListener("message",function I(r){if(!r||!r.data)return;if(!Ne(e,r.origin)){console.warn(`Invalid origin \'${r.origin}\' for comlink proxy`);return}let{id:o,type:g,path:C}=Object.assign({path:[]},r.data),Q=(r.data.argumentList||[]).map(O),a;try{let n=C.slice(0,-1).reduce((f,B)=>f[B],A),s=C.reduce((f,B)=>f[B],A);switch(g){case"GET":a=s;break;case"SET":n[C.slice(-1)[0]]=O(r.data.value),a=!0;break;case"APPLY":a=s.apply(n,Q);break;case"CONSTRUCT":{let f=new s(...Q);a=be(f)}break;case"ENDPOINT":{let{port1:f,port2:B}=new MessageChannel;fA(A,B),a=MA(f,[f])}break;case"RELEASE":a=void 0;break;default:return}}catch(n){a={value:n,[aA]:0}}Promise.resolve(a).catch(n=>({value:n,[aA]:0})).then(n=>{let[s,f]=cA(n);t.postMessage(Object.assign(Object.assign({},s),{id:o}),f),g==="RELEASE"&&(t.removeEventListener("message",I),Dt(t),YA in A&&typeof A[YA]=="function"&&A[YA]())}).catch(n=>{let[s,f]=cA({value:new TypeError("Unserializable return value"),[aA]:0});t.postMessage(Object.assign(Object.assign({},s),{id:o}),f)})}),t.start&&t.start()}function Ue(A){return A.constructor.name==="MessagePort"}function Dt(A){Ue(A)&&A.close()}function Ge(A,t){return qA(A,[],t)}function BA(A){if(A)throw new Error("Proxy has been released and is not useable")}function ht(A){return P(A,{type:"RELEASE"}).then(()=>{Dt(A)})}var QA=new WeakMap,EA="FinalizationRegistry"in globalThis&&new FinalizationRegistry(A=>{let t=(QA.get(A)||0)-1;QA.set(A,t),t===0&&ht(A)});function ke(A,t){let e=(QA.get(t)||0)+1;QA.set(t,e),EA&&EA.register(A,t,A)}function Le(A){EA&&EA.unregister(A)}function qA(A,t=[],e=function(){}){let I=!1,r=new Proxy(e,{get(o,g){if(BA(I),g===Se)return()=>{Le(r),ht(A),I=!0};if(g==="then"){if(t.length===0)return{then:()=>r};let C=P(A,{type:"GET",path:t.map(Q=>Q.toString())}).then(O);return C.then.bind(C)}return qA(A,[...t,g])},set(o,g,C){BA(I);let[Q,a]=cA(C);return P(A,{type:"SET",path:[...t,g].map(n=>n.toString()),value:Q},a).then(O)},apply(o,g,C){BA(I);let Q=t[t.length-1];if(Q===pe)return P(A,{type:"ENDPOINT"}).then(O);if(Q==="bind")return qA(A,t.slice(0,-1));let[a,n]=ct(C);return P(A,{type:"APPLY",path:t.map(s=>s.toString()),argumentList:a},n).then(O)},construct(o,g){BA(I);let[C,Q]=ct(g);return P(A,{type:"CONSTRUCT",path:t.map(a=>a.toString()),argumentList:C},Q).then(O)}});return ke(r,A),r}function Je(A){return Array.prototype.concat.apply([],A)}function ct(A){let t=A.map(cA);return[t.map(e=>e[0]),Je(t.map(e=>e[1]))]}var dt=new WeakMap;function MA(A,t){return dt.set(A,t),A}function be(A){return Object.assign(A,{[ft]:!0})}function cA(A){for(let[t,e]of ut)if(e.canHandle(A)){let[I,r]=e.serialize(A);return[{type:"HANDLER",name:t,value:I},r]}return[{type:"RAW",value:A},dt.get(A)||[]]}function O(A){switch(A.type){case"HANDLER":return ut.get(A.name).deserialize(A.value);case"RAW":return A.value}}function P(A,t,e){return new Promise(I=>{let r=He();A.addEventListener("message",function o(g){!g.data||!g.data.id||g.data.id!==r||(A.removeEventListener("message",o),I(g.data))}),A.start&&A.start(),A.postMessage(Object.assign({id:r},t),e)})}function He(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}function v(A,t){return function(){return A.apply(t,arguments)}}var{toString:Ye}=Object.prototype,{getPrototypeOf:OA}=Object,uA=(A=>t=>{let e=Ye.call(t);return A[e]||(A[e]=e.slice(8,-1).toLowerCase())})(Object.create(null)),G=A=>(A=A.toLowerCase(),t=>uA(t)===A),DA=A=>t=>typeof t===A,{isArray:j}=Array,$=DA("undefined");function qe(A){return A!==null&&!$(A)&&A.constructor!==null&&!$(A.constructor)&&N(A.constructor.isBuffer)&&A.constructor.isBuffer(A)}var pt=G("ArrayBuffer");function Me(A){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(A):t=A&&A.buffer&&pt(A.buffer),t}var Te=DA("string"),N=DA("function"),St=DA("number"),hA=A=>A!==null&&typeof A=="object",Ke=A=>A===!0||A===!1,lA=A=>{if(uA(A)!=="object")return!1;let t=OA(A);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in A)&&!(Symbol.iterator in A)},Oe=G("Date"),xe=G("File"),Pe=G("Blob"),je=G("FileList"),We=A=>hA(A)&&N(A.pipe),Ze=A=>{let t;return A&&(typeof FormData=="function"&&A instanceof FormData||N(A.append)&&((t=uA(A))==="formdata"||t==="object"&&N(A.toString)&&A.toString()==="[object FormData]"))},Ve=G("URLSearchParams"),[_e,Xe,ze,ve]=["ReadableStream","Request","Response","Headers"].map(G),$e=A=>A.trim?A.trim():A.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,"");function AA(A,t,{allOwnKeys:e=!1}={}){if(A===null||typeof A>"u")return;let I,r;if(typeof A!="object"&&(A=[A]),j(A))for(I=0,r=A.length;I<r;I++)t.call(null,A[I],I,A);else{let o=e?Object.getOwnPropertyNames(A):Object.keys(A),g=o.length,C;for(I=0;I<g;I++)C=o[I],t.call(null,A[C],C,A)}}function Ft(A,t){t=t.toLowerCase();let e=Object.keys(A),I=e.length,r;for(;I-- >0;)if(r=e[I],t===r.toLowerCase())return r;return null}var x=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Rt=A=>!$(A)&&A!==x;function KA(){let{caseless:A}=Rt(this)&&this||{},t={},e=(I,r)=>{let o=A&&Ft(t,r)||r;lA(t[o])&&lA(I)?t[o]=KA(t[o],I):lA(I)?t[o]=KA({},I):j(I)?t[o]=I.slice():t[o]=I};for(let I=0,r=arguments.length;I<r;I++)arguments[I]&&AA(arguments[I],e);return t}var AI=(A,t,e,{allOwnKeys:I}={})=>(AA(t,(r,o)=>{e&&N(r)?A[o]=v(r,e):A[o]=r},{allOwnKeys:I}),A),tI=A=>(A.charCodeAt(0)===65279&&(A=A.slice(1)),A),eI=(A,t,e,I)=>{A.prototype=Object.create(t.prototype,I),A.prototype.constructor=A,Object.defineProperty(A,"super",{value:t.prototype}),e&&Object.assign(A.prototype,e)},II=(A,t,e,I)=>{let r,o,g,C={};if(t=t||{},A==null)return t;do{for(r=Object.getOwnPropertyNames(A),o=r.length;o-- >0;)g=r[o],(!I||I(g,A,t))&&!C[g]&&(t[g]=A[g],C[g]=!0);A=e!==!1&&OA(A)}while(A&&(!e||e(A,t))&&A!==Object.prototype);return t},rI=(A,t,e)=>{A=String(A),(e===void 0||e>A.length)&&(e=A.length),e-=t.length;let I=A.indexOf(t,e);return I!==-1&&I===e},oI=A=>{if(!A)return null;if(j(A))return A;let t=A.length;if(!St(t))return null;let e=new Array(t);for(;t-- >0;)e[t]=A[t];return e},gI=(A=>t=>A&&t instanceof A)(typeof Uint8Array<"u"&&OA(Uint8Array)),iI=(A,t)=>{let I=(A&&A[Symbol.iterator]).call(A),r;for(;(r=I.next())&&!r.done;){let o=r.value;t.call(A,o[0],o[1])}},nI=(A,t)=>{let e,I=[];for(;(e=A.exec(t))!==null;)I.push(e);return I},sI=G("HTMLFormElement"),CI=A=>A.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,function(e,I,r){return I.toUpperCase()+r}),mt=(({hasOwnProperty:A})=>(t,e)=>A.call(t,e))(Object.prototype),BI=G("RegExp"),Nt=(A,t)=>{let e=Object.getOwnPropertyDescriptors(A),I={};AA(e,(r,o)=>{let g;(g=t(r,o,A))!==!1&&(I[o]=g||r)}),Object.defineProperties(A,I)},aI=A=>{Nt(A,(t,e)=>{if(N(A)&&["arguments","caller","callee"].indexOf(e)!==-1)return!1;let I=A[e];if(N(I)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method \'"+e+"\'")})}})},QI=(A,t)=>{let e={},I=r=>{r.forEach(o=>{e[o]=!0})};return j(A)?I(A):I(String(A).split(t)),e},EI=()=>{},cI=(A,t)=>A!=null&&Number.isFinite(A=+A)?A:t,TA="abcdefghijklmnopqrstuvwxyz",wt="0123456789",Ut={DIGIT:wt,ALPHA:TA,ALPHA_DIGIT:TA+TA.toUpperCase()+wt},fI=(A=16,t=Ut.ALPHA_DIGIT)=>{let e="",{length:I}=t;for(;A--;)e+=t[Math.random()*I|0];return e};function lI(A){return!!(A&&N(A.append)&&A[Symbol.toStringTag]==="FormData"&&A[Symbol.iterator])}var uI=A=>{let t=new Array(10),e=(I,r)=>{if(hA(I)){if(t.indexOf(I)>=0)return;if(!("toJSON"in I)){t[r]=I;let o=j(I)?[]:{};return AA(I,(g,C)=>{let Q=e(g,r+1);!$(Q)&&(o[C]=Q)}),t[r]=void 0,o}}return I};return e(A,0)},DI=G("AsyncFunction"),hI=A=>A&&(hA(A)||N(A))&&N(A.then)&&N(A.catch),Gt=((A,t)=>A?setImmediate:t?((e,I)=>(x.addEventListener("message",({source:r,data:o})=>{r===x&&o===e&&I.length&&I.shift()()},!1),r=>{I.push(r),x.postMessage(e,"*")}))(`axios@${Math.random()}`,[]):e=>setTimeout(e))(typeof setImmediate=="function",N(x.postMessage)),dI=typeof queueMicrotask<"u"?queueMicrotask.bind(x):typeof process<"u"&&process.nextTick||Gt,i={isArray:j,isArrayBuffer:pt,isBuffer:qe,isFormData:Ze,isArrayBufferView:Me,isString:Te,isNumber:St,isBoolean:Ke,isObject:hA,isPlainObject:lA,isReadableStream:_e,isRequest:Xe,isResponse:ze,isHeaders:ve,isUndefined:$,isDate:Oe,isFile:xe,isBlob:Pe,isRegExp:BI,isFunction:N,isStream:We,isURLSearchParams:Ve,isTypedArray:gI,isFileList:je,forEach:AA,merge:KA,extend:AI,trim:$e,stripBOM:tI,inherits:eI,toFlatObject:II,kindOf:uA,kindOfTest:G,endsWith:rI,toArray:oI,forEachEntry:iI,matchAll:nI,isHTMLForm:sI,hasOwnProperty:mt,hasOwnProp:mt,reduceDescriptors:Nt,freezeMethods:aI,toObjectSet:QI,toCamelCase:CI,noop:EI,toFiniteNumber:cI,findKey:Ft,global:x,isContextDefined:Rt,ALPHABET:Ut,generateString:fI,isSpecCompliantForm:lI,toJSONObject:uI,isAsyncFn:DI,isThenable:hI,setImmediate:Gt,asap:dI};function W(A,t,e,I,r){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=A,this.name="AxiosError",t&&(this.code=t),e&&(this.config=e),I&&(this.request=I),r&&(this.response=r)}i.inherits(W,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:i.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var kt=W.prototype,Lt={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(A=>{Lt[A]={value:A}});Object.defineProperties(W,Lt);Object.defineProperty(kt,"isAxiosError",{value:!0});W.from=(A,t,e,I,r,o)=>{let g=Object.create(kt);return i.toFlatObject(A,g,function(Q){return Q!==Error.prototype},C=>C!=="isAxiosError"),W.call(g,A.message,t,e,I,r),g.cause=A,g.name=A.name,o&&Object.assign(g,o),g};var u=W;var dA=null;function xA(A){return i.isPlainObject(A)||i.isArray(A)}function bt(A){return i.endsWith(A,"[]")?A.slice(0,-2):A}function Jt(A,t,e){return A?A.concat(t).map(function(r,o){return r=bt(r),!e&&o?"["+r+"]":r}).join(e?".":""):t}function yI(A){return i.isArray(A)&&!A.some(xA)}var mI=i.toFlatObject(i,{},null,function(t){return/^is[A-Z]/.test(t)});function wI(A,t,e){if(!i.isObject(A))throw new TypeError("target must be an object");t=t||new(dA||FormData),e=i.toFlatObject(e,{metaTokens:!0,dots:!1,indexes:!1},!1,function(l,c){return!i.isUndefined(c[l])});let I=e.metaTokens,r=e.visitor||n,o=e.dots,g=e.indexes,Q=(e.Blob||typeof Blob<"u"&&Blob)&&i.isSpecCompliantForm(t);if(!i.isFunction(r))throw new TypeError("visitor must be a function");function a(E){if(E===null)return"";if(i.isDate(E))return E.toISOString();if(!Q&&i.isBlob(E))throw new u("Blob is not supported. Use a Buffer instead.");return i.isArrayBuffer(E)||i.isTypedArray(E)?Q&&typeof Blob=="function"?new Blob([E]):Buffer.from(E):E}function n(E,l,c){let p=E;if(E&&!c&&typeof E=="object"){if(i.endsWith(l,"{}"))l=I?l:l.slice(0,-2),E=JSON.stringify(E);else if(i.isArray(E)&&yI(E)||(i.isFileList(E)||i.endsWith(l,"[]"))&&(p=i.toArray(E)))return l=bt(l),p.forEach(function(D,U){!(i.isUndefined(D)||D===null)&&t.append(g===!0?Jt([l],U,o):g===null?l:l+"[]",a(D))}),!1}return xA(E)?!0:(t.append(Jt(c,l,o),a(E)),!1)}let s=[],f=Object.assign(mI,{defaultVisitor:n,convertValue:a,isVisitable:xA});function B(E,l){if(!i.isUndefined(E)){if(s.indexOf(E)!==-1)throw Error("Circular reference detected in "+l.join("."));s.push(E),i.forEach(E,function(p,S){(!(i.isUndefined(p)||p===null)&&r.call(t,p,i.isString(S)?S.trim():S,l,f))===!0&&B(p,l?l.concat(S):[S])}),s.pop()}}if(!i.isObject(A))throw new TypeError("data must be an object");return B(A),t}var q=wI;function Ht(A){let t={"!":"%2521","\'":"%2527","(":"%2528",")":"%2529","~":"%257E","%2520":"+","%2500":"\\0"};return encodeURIComponent(A).replace(/[!\'()~]|%2520|%2500/g,function(I){return t[I]})}function Yt(A,t){this._pairs=[],A&&q(A,this,t)}var qt=Yt.prototype;qt.append=function(t,e){this._pairs.push([t,e])};qt.toString=function(t){let e=t?function(I){return t.call(this,I,Ht)}:Ht;return this._pairs.map(function(r){return e(r[0])+"="+e(r[1])},"").join("&")};var yA=Yt;function pI(A){return encodeURIComponent(A).replace(/%253A/gi,":").replace(/%2524/g,"$").replace(/%252C/gi,",").replace(/%2520/g,"+").replace(/%255B/gi,"[").replace(/%255D/gi,"]")}function tA(A,t,e){if(!t)return A;let I=e&&e.encode||pI,r=e&&e.serialize,o;if(r?o=r(t,e):o=i.isURLSearchParams(t)?t.toString():new yA(t,e).toString(I),o){let g=A.indexOf("%23");g!==-1&&(A=A.slice(0,g)),A+=(A.indexOf("?")===-1?"?":"&")+o}return A}var PA=class{constructor(){this.handlers=[]}use(t,e,I){return this.handlers.push({fulfilled:t,rejected:e,synchronous:I?I.synchronous:!1,runWhen:I?I.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){i.forEach(this.handlers,function(I){I!==null&&t(I)})}},jA=PA;var mA={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1};var Mt=typeof URLSearchParams<"u"?URLSearchParams:yA;var Tt=typeof FormData<"u"?FormData:null;var Kt=typeof Blob<"u"?Blob:null;var Ot={isBrowser:!0,classes:{URLSearchParams:Mt,FormData:Tt,Blob:Kt},protocols:["http","https","file","blob","url","data"]};var ZA={};we(ZA,{hasBrowserEnv:()=>WA,hasStandardBrowserEnv:()=>SI,hasStandardBrowserWebWorkerEnv:()=>FI,origin:()=>RI});var WA=typeof window<"u"&&typeof document<"u",SI=(A=>WA&&["ReactNative","NativeScript","NS"].indexOf(A)<0)(typeof navigator<"u"&&navigator.product),FI=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",RI=WA&&window.location.href||"http://localhost";var w={...ZA,...Ot};function VA(A,t){return q(A,new w.classes.URLSearchParams,Object.assign({visitor:function(e,I,r,o){return w.isNode&&i.isBuffer(e)?(this.append(I,e.toString("base64")),!1):o.defaultVisitor.apply(this,arguments)}},t))}function NI(A){return i.matchAll(/\\w+|\\[(\\w*)]/g,A).map(t=>t[0]==="[]"?"":t[1]||t[0])}function UI(A){let t={},e=Object.keys(A),I,r=e.length,o;for(I=0;I<r;I++)o=e[I],t[o]=A[o];return t}function GI(A){function t(e,I,r,o){let g=e[o++];if(g==="__proto__")return!0;let C=Number.isFinite(+g),Q=o>=e.length;return g=!g&&i.isArray(r)?r.length:g,Q?(i.hasOwnProp(r,g)?r[g]=[r[g],I]:r[g]=I,!C):((!r[g]||!i.isObject(r[g]))&&(r[g]=[]),t(e,I,r[g],o)&&i.isArray(r[g])&&(r[g]=UI(r[g])),!C)}if(i.isFormData(A)&&i.isFunction(A.entries)){let e={};return i.forEachEntry(A,(I,r)=>{t(NI(I),r,e,0)}),e}return null}var wA=GI;function kI(A,t,e){if(i.isString(A))try{return(t||JSON.parse)(A),i.trim(A)}catch(I){if(I.name!=="SyntaxError")throw I}return(e||JSON.stringify)(A)}var _A={transitional:mA,adapter:["xhr","http","fetch"],transformRequest:[function(t,e){let I=e.getContentType()||"",r=I.indexOf("application/json")>-1,o=i.isObject(t);if(o&&i.isHTMLForm(t)&&(t=new FormData(t)),i.isFormData(t))return r?JSON.stringify(wA(t)):t;if(i.isArrayBuffer(t)||i.isBuffer(t)||i.isStream(t)||i.isFile(t)||i.isBlob(t)||i.isReadableStream(t))return t;if(i.isArrayBufferView(t))return t.buffer;if(i.isURLSearchParams(t))return e.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let C;if(o){if(I.indexOf("application/x-www-form-urlencoded")>-1)return VA(t,this.formSerializer).toString();if((C=i.isFileList(t))||I.indexOf("multipart/form-data")>-1){let Q=this.env&&this.env.FormData;return q(C?{"files[]":t}:t,Q&&new Q,this.formSerializer)}}return o||r?(e.setContentType("application/json",!1),kI(t)):t}],transformResponse:[function(t){let e=this.transitional||_A.transitional,I=e&&e.forcedJSONParsing,r=this.responseType==="json";if(i.isResponse(t)||i.isReadableStream(t))return t;if(t&&i.isString(t)&&(I&&!this.responseType||r)){let g=!(e&&e.silentJSONParsing)&&r;try{return JSON.parse(t)}catch(C){if(g)throw C.name==="SyntaxError"?u.from(C,u.ERR_BAD_RESPONSE,this,null,this.response):C}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:w.classes.FormData,Blob:w.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};i.forEach(["delete","get","head","post","put","patch"],A=>{_A.headers[A]={}});var Z=_A;var LI=i.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),xt=A=>{let t={},e,I,r;return A&&A.split(`%0A`).forEach(function(g){r=g.indexOf(":"),e=g.substring(0,r).trim().toLowerCase(),I=g.substring(r+1).trim(),!(!e||t[e]&&LI[e])&&(e==="set-cookie"?t[e]?t[e].push(I):t[e]=[I]:t[e]=t[e]?t[e]+", "+I:I)}),t};var Pt=Symbol("internals");function eA(A){return A&&String(A).trim().toLowerCase()}function pA(A){return A===!1||A==null?A:i.isArray(A)?A.map(pA):String(A)}function JI(A){let t=Object.create(null),e=/([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g,I;for(;I=e.exec(A);)t[I[1]]=I[2];return t}var bI=A=>/^[-_a-zA-Z0-9^`|~,!%23$%&\'*+.]+$/.test(A.trim());function XA(A,t,e,I,r){if(i.isFunction(I))return I.call(this,t,e);if(r&&(t=e),!!i.isString(t)){if(i.isString(I))return t.indexOf(I)!==-1;if(i.isRegExp(I))return I.test(t)}}function HI(A){return A.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g,(t,e,I)=>e.toUpperCase()+I)}function YI(A,t){let e=i.toCamelCase(" "+t);["get","set","has"].forEach(I=>{Object.defineProperty(A,I+e,{value:function(r,o,g){return this[I].call(this,t,r,o,g)},configurable:!0})})}var V=class{constructor(t){t&&this.set(t)}set(t,e,I){let r=this;function o(C,Q,a){let n=eA(Q);if(!n)throw new Error("header name must be a non-empty string");let s=i.findKey(r,n);(!s||r[s]===void 0||a===!0||a===void 0&&r[s]!==!1)&&(r[s||Q]=pA(C))}let g=(C,Q)=>i.forEach(C,(a,n)=>o(a,n,Q));if(i.isPlainObject(t)||t instanceof this.constructor)g(t,e);else if(i.isString(t)&&(t=t.trim())&&!bI(t))g(xt(t),e);else if(i.isHeaders(t))for(let[C,Q]of t.entries())o(Q,C,I);else t!=null&&o(e,t,I);return this}get(t,e){if(t=eA(t),t){let I=i.findKey(this,t);if(I){let r=this[I];if(!e)return r;if(e===!0)return JI(r);if(i.isFunction(e))return e.call(this,r,I);if(i.isRegExp(e))return e.exec(r);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,e){if(t=eA(t),t){let I=i.findKey(this,t);return!!(I&&this[I]!==void 0&&(!e||XA(this,this[I],I,e)))}return!1}delete(t,e){let I=this,r=!1;function o(g){if(g=eA(g),g){let C=i.findKey(I,g);C&&(!e||XA(I,I[C],C,e))&&(delete I[C],r=!0)}}return i.isArray(t)?t.forEach(o):o(t),r}clear(t){let e=Object.keys(this),I=e.length,r=!1;for(;I--;){let o=e[I];(!t||XA(this,this[o],o,t,!0))&&(delete this[o],r=!0)}return r}normalize(t){let e=this,I={};return i.forEach(this,(r,o)=>{let g=i.findKey(I,o);if(g){e[g]=pA(r),delete e[o];return}let C=t?HI(o):String(o).trim();C!==o&&delete e[o],e[C]=pA(r),I[C]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){let e=Object.create(null);return i.forEach(this,(I,r)=>{I!=null&&I!==!1&&(e[r]=t&&i.isArray(I)?I.join(", "):I)}),e}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,e])=>t+": "+e).join(`%0A`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...e){let I=new this(t);return e.forEach(r=>I.set(r)),I}static accessor(t){let I=(this[Pt]=this[Pt]={accessors:{}}).accessors,r=this.prototype;function o(g){let C=eA(g);I[C]||(YI(r,g),I[C]=!0)}return i.isArray(t)?t.forEach(o):o(t),this}};V.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);i.reduceDescriptors(V.prototype,({value:A},t)=>{let e=t[0].toUpperCase()+t.slice(1);return{get:()=>A,set(I){this[e]=I}}});i.freezeMethods(V);var m=V;function IA(A,t){let e=this||Z,I=t||e,r=m.from(I.headers),o=I.data;return i.forEach(A,function(C){o=C.call(e,o,r.normalize(),t?t.status:void 0)}),r.normalize(),o}function rA(A){return!!(A&&A.__CANCEL__)}function jt(A,t,e){u.call(this,A??"canceled",u.ERR_CANCELED,t,e),this.name="CanceledError"}i.inherits(jt,u,{__CANCEL__:!0});var b=jt;function oA(A,t,e){let I=e.config.validateStatus;!e.status||!I||I(e.status)?A(e):t(new u("Request failed with status code "+e.status,[u.ERR_BAD_REQUEST,u.ERR_BAD_RESPONSE][Math.floor(e.status/100)-4],e.config,e.request,e))}function zA(A){let t=/^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(A);return t&&t[1]||""}function qI(A,t){A=A||10;let e=new Array(A),I=new Array(A),r=0,o=0,g;return t=t!==void 0?t:1e3,function(Q){let a=Date.now(),n=I[o];g||(g=a),e[r]=Q,I[r]=a;let s=o,f=0;for(;s!==r;)f+=e[s++],s=s%A;if(r=(r+1)%A,r===o&&(o=(o+1)%A),a-g<t)return;let B=n&&a-n;return B?Math.round(f*1e3/B):void 0}}var Wt=qI;function MI(A,t){let e=0,I=1e3/t,r,o,g=(a,n=Date.now())=>{e=n,r=null,o&&(clearTimeout(o),o=null),A.apply(null,a)};return[(...a)=>{let n=Date.now(),s=n-e;s>=I?g(a,n):(r=a,o||(o=setTimeout(()=>{o=null,g(r)},I-s)))},()=>r&&g(r)]}var Zt=MI;var _=(A,t,e=3)=>{let I=0,r=Wt(50,250);return Zt(o=>{let g=o.loaded,C=o.lengthComputable?o.total:void 0,Q=g-I,a=r(Q),n=g<=C;I=g;let s={loaded:g,total:C,progress:C?g/C:void 0,bytes:Q,rate:a||void 0,estimated:a&&C&&n?(C-g)/a:void 0,event:o,lengthComputable:C!=null,[t?"download":"upload"]:!0};A(s)},e)},vA=(A,t)=>{let e=A!=null;return[I=>t[0]({lengthComputable:e,total:A,loaded:I}),t[1]]},$A=A=>(...t)=>i.asap(()=>A(...t));var Vt=w.hasStandardBrowserEnv?function(){let t=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement("a"),I;function r(o){let g=o;return t&&(e.setAttribute("href",g),g=e.href),e.setAttribute("href",g),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,""):"",host:e.host,search:e.search?e.search.replace(/^\\?/,""):"",hash:e.hash?e.hash.replace(/^%23/,""):"",hostname:e.hostname,port:e.port,pathname:e.pathname.charAt(0)==="/"?e.pathname:"/"+e.pathname}}return I=r(window.location.href),function(g){let C=i.isString(g)?r(g):g;return C.protocol===I.protocol&&C.host===I.host}}():function(){return function(){return!0}}();var _t=w.hasStandardBrowserEnv?{write(A,t,e,I,r,o){let g=[A+"="+encodeURIComponent(t)];i.isNumber(e)&&g.push("expires="+new Date(e).toGMTString()),i.isString(I)&&g.push("path="+I),i.isString(r)&&g.push("domain="+r),o===!0&&g.push("secure"),document.cookie=g.join("; ")},read(A){let t=document.cookie.match(new RegExp("(^|;\\\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(A){this.write(A,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function At(A){return/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(A)}function tt(A,t){return t?A.replace(/\\/?\\/$/,"")+"/"+t.replace(/^\\/+/,""):A}function gA(A,t){return A&&!At(t)?tt(A,t):t}var Xt=A=>A instanceof m?{...A}:A;function k(A,t){t=t||{};let e={};function I(a,n,s){return i.isPlainObject(a)&&i.isPlainObject(n)?i.merge.call({caseless:s},a,n):i.isPlainObject(n)?i.merge({},n):i.isArray(n)?n.slice():n}function r(a,n,s){if(i.isUndefined(n)){if(!i.isUndefined(a))return I(void 0,a,s)}else return I(a,n,s)}function o(a,n){if(!i.isUndefined(n))return I(void 0,n)}function g(a,n){if(i.isUndefined(n)){if(!i.isUndefined(a))return I(void 0,a)}else return I(void 0,n)}function C(a,n,s){if(s in t)return I(a,n);if(s in A)return I(void 0,a)}let Q={url:o,method:o,data:o,baseURL:g,transformRequest:g,transformResponse:g,paramsSerializer:g,timeout:g,timeoutMessage:g,withCredentials:g,withXSRFToken:g,adapter:g,responseType:g,xsrfCookieName:g,xsrfHeaderName:g,onUploadProgress:g,onDownloadProgress:g,decompress:g,maxContentLength:g,maxBodyLength:g,beforeRedirect:g,transport:g,httpAgent:g,httpsAgent:g,cancelToken:g,socketPath:g,responseEncoding:g,validateStatus:C,headers:(a,n)=>r(Xt(a),Xt(n),!0)};return i.forEach(Object.keys(Object.assign({},A,t)),function(n){let s=Q[n]||r,f=s(A[n],t[n],n);i.isUndefined(f)&&s!==C||(e[n]=f)}),e}var SA=A=>{let t=k({},A),{data:e,withXSRFToken:I,xsrfHeaderName:r,xsrfCookieName:o,headers:g,auth:C}=t;t.headers=g=m.from(g),t.url=tA(gA(t.baseURL,t.url),A.params,A.paramsSerializer),C&&g.set("Authorization","Basic "+btoa((C.username||"")+":"+(C.password?unescape(encodeURIComponent(C.password)):"")));let Q;if(i.isFormData(e)){if(w.hasStandardBrowserEnv||w.hasStandardBrowserWebWorkerEnv)g.setContentType(void 0);else if((Q=g.getContentType())!==!1){let[a,...n]=Q?Q.split(";").map(s=>s.trim()).filter(Boolean):[];g.setContentType([a||"multipart/form-data",...n].join("; "))}}if(w.hasStandardBrowserEnv&&(I&&i.isFunction(I)&&(I=I(t)),I||I!==!1&&Vt(t.url))){let a=r&&o&&_t.read(o);a&&g.set(r,a)}return t};var TI=typeof XMLHttpRequest<"u",zt=TI&&function(A){return new Promise(function(e,I){let r=SA(A),o=r.data,g=m.from(r.headers).normalize(),{responseType:C,onUploadProgress:Q,onDownloadProgress:a}=r,n,s,f,B,E;function l(){B&&B(),E&&E(),r.cancelToken&&r.cancelToken.unsubscribe(n),r.signal&&r.signal.removeEventListener("abort",n)}let c=new XMLHttpRequest;c.open(r.method.toUpperCase(),r.url,!0),c.timeout=r.timeout;function p(){if(!c)return;let D=m.from("getAllResponseHeaders"in c&&c.getAllResponseHeaders()),K={data:!C||C==="text"||C==="json"?c.responseText:c.response,status:c.status,statusText:c.statusText,headers:D,config:A,request:c};oA(function(J){e(J),l()},function(J){I(J),l()},K),c=null}"onloadend"in c?c.onloadend=p:c.onreadystatechange=function(){!c||c.readyState!==4||c.status===0&&!(c.responseURL&&c.responseURL.indexOf("file:")===0)||setTimeout(p)},c.onabort=function(){c&&(I(new u("Request aborted",u.ECONNABORTED,A,c)),c=null)},c.onerror=function(){I(new u("Network Error",u.ERR_NETWORK,A,c)),c=null},c.ontimeout=function(){let U=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded",K=r.transitional||mA;r.timeoutErrorMessage&&(U=r.timeoutErrorMessage),I(new u(U,K.clarifyTimeoutError?u.ETIMEDOUT:u.ECONNABORTED,A,c)),c=null},o===void 0&&g.setContentType(null),"setRequestHeader"in c&&i.forEach(g.toJSON(),function(U,K){c.setRequestHeader(K,U)}),i.isUndefined(r.withCredentials)||(c.withCredentials=!!r.withCredentials),C&&C!=="json"&&(c.responseType=r.responseType),a&&([f,E]=_(a,!0),c.addEventListener("progress",f)),Q&&c.upload&&([s,B]=_(Q),c.upload.addEventListener("progress",s),c.upload.addEventListener("loadend",B)),(r.cancelToken||r.signal)&&(n=D=>{c&&(I(!D||D.type?new b(null,A,c):D),c.abort(),c=null)},r.cancelToken&&r.cancelToken.subscribe(n),r.signal&&(r.signal.aborted?n():r.signal.addEventListener("abort",n)));let S=zA(r.url);if(S&&w.protocols.indexOf(S)===-1){I(new u("Unsupported protocol "+S+":",u.ERR_BAD_REQUEST,A));return}c.send(o||null)})};var KI=(A,t)=>{let e=new AbortController,I,r=function(Q){if(!I){I=!0,g();let a=Q instanceof Error?Q:this.reason;e.abort(a instanceof u?a:new b(a instanceof Error?a.message:a))}},o=t&&setTimeout(()=>{r(new u(`timeout ${t} of ms exceeded`,u.ETIMEDOUT))},t),g=()=>{A&&(o&&clearTimeout(o),o=null,A.forEach(Q=>{Q&&(Q.removeEventListener?Q.removeEventListener("abort",r):Q.unsubscribe(r))}),A=null)};A.forEach(Q=>Q&&Q.addEventListener&&Q.addEventListener("abort",r));let{signal:C}=e;return C.unsubscribe=g,[C,()=>{o&&clearTimeout(o),o=null}]},vt=KI;var OI=function*(A,t){let e=A.byteLength;if(!t||e<t){yield A;return}let I=0,r;for(;I<e;)r=I+t,yield A.slice(I,r),I=r},xI=async function*(A,t,e){for await(let I of A)yield*OI(ArrayBuffer.isView(I)?I:await e(String(I)),t)},et=(A,t,e,I,r)=>{let o=xI(A,t,r),g=0,C,Q=a=>{C||(C=!0,I&&I(a))};return new ReadableStream({async pull(a){try{let{done:n,value:s}=await o.next();if(n){Q(),a.close();return}let f=s.byteLength;if(e){let B=g+=f;e(B)}a.enqueue(new Uint8Array(s))}catch(n){throw Q(n),n}},cancel(a){return Q(a),o.return()}},{highWaterMark:2})};var RA=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",Ae=RA&&typeof ReadableStream=="function",It=RA&&(typeof TextEncoder=="function"?(A=>t=>A.encode(t))(new TextEncoder):async A=>new Uint8Array(await new Response(A).arrayBuffer())),te=(A,...t)=>{try{return!!A(...t)}catch{return!1}},PI=Ae&&te(()=>{let A=!1,t=new Request(w.origin,{body:new ReadableStream,method:"POST",get duplex(){return A=!0,"half"}}).headers.has("Content-Type");return A&&!t}),$t=64*1024,rt=Ae&&te(()=>i.isReadableStream(new Response("").body)),FA={stream:rt&&(A=>A.body)};RA&&(A=>{["text","arrayBuffer","blob","formData","stream"].forEach(t=>{!FA[t]&&(FA[t]=i.isFunction(A[t])?e=>e[t]():(e,I)=>{throw new u(`Response type \'${t}\' is not supported`,u.ERR_NOT_SUPPORT,I)})})})(new Response);var jI=async A=>{if(A==null)return 0;if(i.isBlob(A))return A.size;if(i.isSpecCompliantForm(A))return(await new Request(A).arrayBuffer()).byteLength;if(i.isArrayBufferView(A)||i.isArrayBuffer(A))return A.byteLength;if(i.isURLSearchParams(A)&&(A=A+""),i.isString(A))return(await It(A)).byteLength},WI=async(A,t)=>{let e=i.toFiniteNumber(A.getContentLength());return e??jI(t)},ee=RA&&(async A=>{let{url:t,method:e,data:I,signal:r,cancelToken:o,timeout:g,onDownloadProgress:C,onUploadProgress:Q,responseType:a,headers:n,withCredentials:s="same-origin",fetchOptions:f}=SA(A);a=a?(a+"").toLowerCase():"text";let[B,E]=r||o||g?vt([r,o],g):[],l,c,p=()=>{!l&&setTimeout(()=>{B&&B.unsubscribe()}),l=!0},S;try{if(Q&&PI&&e!=="get"&&e!=="head"&&(S=await WI(n,I))!==0){let L=new Request(t,{method:"POST",body:I,duplex:"half"}),J;if(i.isFormData(I)&&(J=L.headers.get("content-type"))&&n.setContentType(J),L.body){let[HA,CA]=vA(S,_($A(Q)));I=et(L.body,$t,HA,CA,It)}}i.isString(s)||(s=s?"include":"omit"),c=new Request(t,{...f,signal:B,method:e.toUpperCase(),headers:n.normalize().toJSON(),body:I,duplex:"half",credentials:s});let D=await fetch(c),U=rt&&(a==="stream"||a==="response");if(rt&&(C||U)){let L={};["status","statusText","headers"].forEach(Et=>{L[Et]=D[Et]});let J=i.toFiniteNumber(D.headers.get("content-length")),[HA,CA]=C&&vA(J,_($A(C),!0))||[];D=new Response(et(D.body,$t,HA,()=>{CA&&CA(),U&&p()},It),L)}a=a||"text";let K=await FA[i.findKey(FA,a)||"text"](D,A);return!U&&p(),E&&E(),await new Promise((L,J)=>{oA(L,J,{data:K,headers:m.from(D.headers),status:D.status,statusText:D.statusText,config:A,request:c})})}catch(D){throw p(),D&&D.name==="TypeError"&&/fetch/i.test(D.message)?Object.assign(new u("Network Error",u.ERR_NETWORK,A,c),{cause:D.cause||D}):u.from(D,D&&D.code,A,c)}});var ot={http:dA,xhr:zt,fetch:ee};i.forEach(ot,(A,t)=>{if(A){try{Object.defineProperty(A,"name",{value:t})}catch{}Object.defineProperty(A,"adapterName",{value:t})}});var Ie=A=>`- ${A}`,ZI=A=>i.isFunction(A)||A===null||A===!1,NA={getAdapter:A=>{A=i.isArray(A)?A:[A];let{length:t}=A,e,I,r={};for(let o=0;o<t;o++){e=A[o];let g;if(I=e,!ZI(e)&&(I=ot[(g=String(e)).toLowerCase()],I===void 0))throw new u(`Unknown adapter \'${g}\'`);if(I)break;r[g||"%23"+o]=I}if(!I){let o=Object.entries(r).map(([C,Q])=>`adapter ${C} `+(Q===!1?"is not supported by the environment":"is not available in the build")),g=t?o.length>1?`since :%0A`+o.map(Ie).join(`%0A`):" "+Ie(o[0]):"as no adapter specified";throw new u("There is no suitable adapter to dispatch the request "+g,"ERR_NOT_SUPPORT")}return I},adapters:ot};function gt(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new b(null,A)}function UA(A){return gt(A),A.headers=m.from(A.headers),A.data=IA.call(A,A.transformRequest),["post","put","patch"].indexOf(A.method)!==-1&&A.headers.setContentType("application/x-www-form-urlencoded",!1),NA.getAdapter(A.adapter||Z.adapter)(A).then(function(I){return gt(A),I.data=IA.call(A,A.transformResponse,I),I.headers=m.from(I.headers),I},function(I){return rA(I)||(gt(A),I&&I.response&&(I.response.data=IA.call(A,A.transformResponse,I.response),I.response.headers=m.from(I.response.headers))),Promise.reject(I)})}var GA="1.7.4";var it={};["object","boolean","number","function","string","symbol"].forEach((A,t)=>{it[A]=function(I){return typeof I===A||"a"+(t<1?"n ":" ")+A}});var re={};it.transitional=function(t,e,I){function r(o,g){return"[Axios v"+GA+"] Transitional option \'"+o+"\'"+g+(I?". "+I:"")}return(o,g,C)=>{if(t===!1)throw new u(r(g," has been removed"+(e?" in "+e:"")),u.ERR_DEPRECATED);return e&&!re[g]&&(re[g]=!0,console.warn(r(g," has been deprecated since v"+e+" and will be removed in the near future"))),t?t(o,g,C):!0}};function VI(A,t,e){if(typeof A!="object")throw new u("options must be an object",u.ERR_BAD_OPTION_VALUE);let I=Object.keys(A),r=I.length;for(;r-- >0;){let o=I[r],g=t[o];if(g){let C=A[o],Q=C===void 0||g(C,o,A);if(Q!==!0)throw new u("option "+o+" must be "+Q,u.ERR_BAD_OPTION_VALUE);continue}if(e!==!0)throw new u("Unknown option "+o,u.ERR_BAD_OPTION)}}var kA={assertOptions:VI,validators:it};var M=kA.validators,X=class{constructor(t){this.defaults=t,this.interceptors={request:new jA,response:new jA}}async request(t,e){try{return await this._request(t,e)}catch(I){if(I instanceof Error){let r;Error.captureStackTrace?Error.captureStackTrace(r={}):r=new Error;let o=r.stack?r.stack.replace(/^.+\\n/,""):"";try{I.stack?o&&!String(I.stack).endsWith(o.replace(/^.+\\n.+\\n/,""))&&(I.stack+=`%0A`+o):I.stack=o}catch{}}throw I}}_request(t,e){typeof t=="string"?(e=e||{},e.url=t):e=t||{},e=k(this.defaults,e);let{transitional:I,paramsSerializer:r,headers:o}=e;I!==void 0&&kA.assertOptions(I,{silentJSONParsing:M.transitional(M.boolean),forcedJSONParsing:M.transitional(M.boolean),clarifyTimeoutError:M.transitional(M.boolean)},!1),r!=null&&(i.isFunction(r)?e.paramsSerializer={serialize:r}:kA.assertOptions(r,{encode:M.function,serialize:M.function},!0)),e.method=(e.method||this.defaults.method||"get").toLowerCase();let g=o&&i.merge(o.common,o[e.method]);o&&i.forEach(["delete","get","head","post","put","patch","common"],E=>{delete o[E]}),e.headers=m.concat(g,o);let C=[],Q=!0;this.interceptors.request.forEach(function(l){typeof l.runWhen=="function"&&l.runWhen(e)===!1||(Q=Q&&l.synchronous,C.unshift(l.fulfilled,l.rejected))});let a=[];this.interceptors.response.forEach(function(l){a.push(l.fulfilled,l.rejected)});let n,s=0,f;if(!Q){let E=[UA.bind(this),void 0];for(E.unshift.apply(E,C),E.push.apply(E,a),f=E.length,n=Promise.resolve(e);s<f;)n=n.then(E[s++],E[s++]);return n}f=C.length;let B=e;for(s=0;s<f;){let E=C[s++],l=C[s++];try{B=E(B)}catch(c){l.call(this,c);break}}try{n=UA.call(this,B)}catch(E){return Promise.reject(E)}for(s=0,f=a.length;s<f;)n=n.then(a[s++],a[s++]);return n}getUri(t){t=k(this.defaults,t);let e=gA(t.baseURL,t.url);return tA(e,t.params,t.paramsSerializer)}};i.forEach(["delete","get","head","options"],function(t){X.prototype[t]=function(e,I){return this.request(k(I||{},{method:t,url:e,data:(I||{}).data}))}});i.forEach(["post","put","patch"],function(t){function e(I){return function(o,g,C){return this.request(k(C||{},{method:t,headers:I?{"Content-Type":"multipart/form-data"}:{},url:o,data:g}))}}X.prototype[t]=e(),X.prototype[t+"Form"]=e(!0)});var iA=X;var nt=class A{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let e;this.promise=new Promise(function(o){e=o});let I=this;this.promise.then(r=>{if(!I._listeners)return;let o=I._listeners.length;for(;o-- >0;)I._listeners[o](r);I._listeners=null}),this.promise.then=r=>{let o,g=new Promise(C=>{I.subscribe(C),o=C}).then(r);return g.cancel=function(){I.unsubscribe(o)},g},t(function(o,g,C){I.reason||(I.reason=new b(o,g,C),e(I.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;let e=this._listeners.indexOf(t);e!==-1&&this._listeners.splice(e,1)}static source(){let t;return{token:new A(function(r){t=r}),cancel:t}}},oe=nt;function st(A){return function(e){return A.apply(null,e)}}function Ct(A){return i.isObject(A)&&A.isAxiosError===!0}var Bt={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Bt).forEach(([A,t])=>{Bt[t]=A});var ge=Bt;function ie(A){let t=new iA(A),e=v(iA.prototype.request,t);return i.extend(e,iA.prototype,t,{allOwnKeys:!0}),i.extend(e,t,null,{allOwnKeys:!0}),e.create=function(r){return ie(k(A,r))},e}var d=ie(Z);d.Axios=iA;d.CanceledError=b;d.CancelToken=oe;d.isCancel=rA;d.VERSION=GA;d.toFormData=q;d.AxiosError=u;d.Cancel=d.CanceledError;d.all=function(t){return Promise.all(t)};d.spread=st;d.isAxiosError=Ct;d.mergeConfig=k;d.AxiosHeaders=m;d.formToJSON=A=>wA(i.isHTMLForm(A)?new FormData(A):A);d.getAdapter=NA.getAdapter;d.HttpStatusCode=ge;d.default=d;var LA=d;var{Axios:Ei,AxiosError:ci,CanceledError:fi,isCancel:li,CancelToken:ui,VERSION:Di,all:hi,Cancel:di,isAxiosError:yi,spread:mi,toFormData:wi,AxiosHeaders:pi,HttpStatusCode:Si,formToJSON:Fi,getAdapter:Ri,mergeConfig:Ni}=LA;var nA,Y,Qt,at={env:{emscripten_notify_memory_growth:function(A){Qt=new Uint8Array(Y.exports.memory.buffer)}}},JA=class{init(){return nA||(typeof fetch<"u"?nA=fetch("data:application/wasm;base64,"+ne).then(t=>t.arrayBuffer()).then(t=>WebAssembly.instantiate(t,at)).then(this._init):nA=WebAssembly.instantiate(Buffer.from(ne,"base64"),at).then(this._init),nA)}_init(t){Y=t.instance,at.env.emscripten_notify_memory_growth(0)}decode(t,e=0){if(!Y)throw new Error("ZSTDDecoder: Await .init() before decoding.");let I=t.byteLength,r=Y.exports.malloc(I);Qt.set(t,r),e=e||Number(Y.exports.ZSTD_findDecompressedSize(r,I));let o=Y.exports.malloc(e),g=Y.exports.ZSTD_decompress(o,e,r,I),C=Qt.slice(o,o+g);return Y.exports.free(r),Y.exports.free(o),C}},ne="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IARrdnE2AgAgARAPGiAAIAJBCGo2AgQLzgEBBn9Bun8hCgJAIAIoAgQiCCACKAIAIglqIg0gASAAa0sNAEFsIQogCSAEIAMoAgAiC2tLDQAgACAJaiIEIAIoAggiDGshAiAAIAFBIGsiACALIAlBABAgIAMgCSALajYCAAJAAkAgBCAFayAMTwRAIAIhBQwBCyAMIAQgBmtLDQIgByAHIAIgBWsiAmoiASAIak8EQCAEIAEgCBAKGgwCCyACIAhqIQggBCABQQAgAmsQCiACayEECyAEIAAgBSAIQQEQIAsgDSEKCyAKC8cEAQJ/IAAgA2ohBgJAIANBB0wEQANAIAAgBk8NAiAAIAItAAA6AAAgAEEBaiEAIAJBAWohAgwACwALIARBAUYEQAJAIAAgAmsiBUEHTQRAIAAgAi0AADoAACAAIAItAAE6AAEgACACLQACOgACIAAgAi0AAzoAAyAAIAIgBUECdCIFQcAeaigCAGoiAigAADYABCACIAVB4B5qKAIAayECDAELIAAgAikAADcAAAsgAkEIaiECIABBCGohAAsgASAGTwRAIAAgA2ohASAEQQFHIAAgAmtBD0pyRQRAA0AgACACKQAANwAAIAJBCGohAiAAQQhqIgAgAUkNAAwDCwALIAAgAikAADcAACAAIAIpAAg3AAggA0ERSQ0BIABBEGohAANAIAAgAikAEDcAACAAIAIpABg3AAggACACKQAgNwAQIAAgAikAKDcAGCACQSBqIQIgAEEgaiIAIAFJDQALDAELAkAgACABSwRAIAAhAQwBCyABIABrIQUCQCAEQQFHIAAgAmtBD0pyRQRAIAIhAwNAIAAgAykAADcAACADQQhqIQMgAEEIaiIAIAFJDQALDAELIAAgAikAADcAACAAIAIpAAg3AAggBUERSA0AIABBEGohACACIQMDQCAAIAMpABA3AAAgACADKQAYNwAIIAAgAykAIDcAECAAIAMpACg3ABggA0EgaiEDIABBIGoiACABSQ0ACwsgAiAFaiECCwNAIAEgBk8NASABIAItAAA6AAAgAUEBaiEBIAJBAWohAgwACwALC64HAgV/AX4jAEGAAWsiESQAIBEgAzYCfEF/IQ8CQAJAAkACQAJAIAIOBAEAAwIECyAGRQRAQbh/IQ8MBAtBbCEPIAUtAAAiAiADSw0DIAggAkEC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IAggH2shBgNAAkAgBiAPTgRAQQAhAwNAIANBA0YNAiAFIANBAnQiAmpBrNABaiACIARqKAJkNgIAIANBAWohAwwACwALAkACQAJAIAQoAtwBIgMgBEHwAGogBkEHcUEMbGoiCCgCACIMaiIQIBdLDQAgByAIKAIEIgsgDGoiCmogIUsNACAKQSBqIBYgB2tNDQELIAQgCCgCCDYCKCAEIAgpAgA3AyAgByAWIARBIGogBEHcAWogFyASIBggGhAfIQoMAQsgByAMaiECIAgoAgghCCAHIAMpAAA3AAAgByADKQAINwAIAkAgDEERSQ0AIAcgAykAEDcAECAHIAMpABg3ABggDEEQa0ERSA0AIANBEGohAyAHQSBqIQwDQCAMIAMpABA3AAAgDCADKQAYNwAIIAwgAykAIDcAECAMIAMpACg3ABggA0EgaiEDIAxBIGoiDCACSQ0ACwsgAiAIayEDIAQgEDYC3AEgAiASayAISQRAIAggAiAYa0sNByAaIBogAyASayIDaiIMIAtqTwRAIAIgDCALEAoaDAILIAMgC2ohCyACIAxBACADaxAKIANrIQIgEiEDCyAIQRBPBEAgAiADKQAANwAAIAIgAykACDcACCALQRFIDQEgAiALaiEIIAJBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAIgAy0AADoAACACIAMtAAE6AAEgAiADLQACOgACIAIgAy0AAzoAAyACIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAIgAykAADcAAAsgC0EJSQ0AIAIgC2ohDCACQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggDEkNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggC0EZSA0AIAJBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAxJDQALCyAKQYh/SwRAIAohCQwGBSAGQQFqIQYgByAKaiEHDAILAAsLIAQoAtwBIQMLQbp/IQkgFyADayICIBYgB2tLDQIgBwR/IAcgAyACEAIgAmoFQQALIA5rIQkMAgsgBUEANgKc6wELIAQgBSgC8OoBIgM2AtwBIAkgDmohDCADIAUoAoDrAWohEAJAIA9FBEAgDiEGDAELIAUoArjpASENIAUoArTpASETIAUoArDpASESIAVBATYChOoBQQAhAwNAIANBA0cEQCAEIANBAnQiAmogAiAFakGs0AFqKAIANgKcASADQQFqIQMMAQsLQWwhCSAEQfAAaiICIAcgBhANQYh/Sw0BIDEgAiAFKAIAEB4gMCACIAUoAggQHiAvIAIgBSgCBBAeIAxBIGshGCAOIQYDQCAEKAKIASAEKAKEAUEDdGopAgAiQKciCkEQdiIZQf8BcSELIAQoApgBIAQoApQBQQN0aikCACJBpyIWQRB2Ih9B/wFxIRogBCgCkAEgBCgCjAFBA3RqKQIAIkJCIIinIQcgQUIgiCBAQiCIpyEDAkAgQkIQiKciCEH/AXEiAkECTwRAAkAgAkEZSSA/QoGAgBBUckUEQCAEQSAgBCgCdCIIayIRIAIgAiARSxsiFyAIajYCdCAHIAQoAnAgCHRBACAXa3YgAiAXayIXdGohCCAEQfAAahAPGiACIBFNDQEgBCAEKAJ0IgIgF2o2AnQgBCgCcCACdEEAIBdrdiAIaiEIDAELIAQgAiAEKAJ0IhFqNgJ0IAQoAnAgEXRBACAIa3YgB2ohCCAEQfAAahAPGgsgBCkCnAEhRCAEIAg2ApwBIAQgRDcCoAEMAQsCQCACRQRAIAMEQCAEKAKcASEIDAMLIAQoAqABIQgMAQsgBCAEKAJ0IgJBAWo2AnQCfyAHIANFaiAEKAJwIAJ0QR92aiICQQNGBEAgBCgCnAFBAWsMAQsgAkECdCAEaigCnAELIgdFIAdqIQggAkEBRwRAIAQgBCgCoAE2AqQBCwsgBCAEKAKcATYCoAEgBCAINgKcAQunIQIgQUKAgPwHg1BFBEAgBCAEKAJ0IgcgGmo2AnQgBCgCcCAHdEEAIB9rdiACaiECCyALIBpqQRRPBEAgBEHwAGoQDxoLIEBCgID8B4NQRQRAIAQgBCgCdCIHIAtqNgJ0IAQoAnAgB3RBACAZa3YgA2ohAwsgBEHwAGoQDxogBCAEKAJwIgdBACAKQRh2IgsgBCgCdGoiGmt2IAtBAnRBoB1qKAIAcSAKQf//A3FqNgKEASAEIBogFkEYdiIKaiILNgJ0IAQgCkECdEGgHWooAgAgB0EAIAtrdnEgFkH//wNxajYClAEgBEHwAGoQDxogBCBCpyIHQRh2IgogBCgCdGoiCzYCdCAEIApBAnRBoB1qKAIAIAQoAnBBACALa3ZxIAdB//8DcWo2AowBIAQgAzYCOCAEIAI2AjwgBCAINgJAAkACQAJAIAQoAtwBIgsgA2oiFiAQSw0AIAYgAiADaiIKaiAYSw0AIApBIGogDCAGa00NAQsgBCAEQUBrKAIANgIIIAQgBCkDODcDACAGIAwgBCAEQdwBaiAQIBIgEyANEB8hCgwBCyADIAZqIQcgBiALKQAANwAAIAYgCykACDcACAJAIANBEUkNACAGIAspABA3ABAgBiALKQAYNwAYIANBEGtBEUgNACALQRBqIQMgBkEgaiELA0AgCyADKQAQNwAAIAsgAykAGDcACCALIAMpACA3ABAgCyADKQAoNwAYIANBIGohAyALQSBqIgsgB0kNAAsLIAcgCGshAyAEIBY2AtwBIAcgEmsgCEkEQCAIIAcgE2tLDQQgDSANIAMgEmsiA2oiCyACak8EQCAHIAsgAhAKGgwCCyAHIAtBACADaxAKIAQgAiADaiICNgI8IANrIQcgEiEDCyAIQRBPBEAgByADKQAANwAAIAcgAykACDcACCACQRFIDQEgAiAHaiEIIAdBEGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAhJDQALDAELAkAgCEEHTQRAIAcgAy0AADoAACAHIAMtAAE6AAEgByADLQACOgACIAcgAy0AAzoAAyAHIAMgCEECdCIIQcAeaigCAGoiAygAADYABCADIAhB4B5qKAIAayEDDAELIAcgAykAADcAAAsgAkEJSQ0AIAIgB2ohCyAHQQhqIgggA0EIaiIDa0EPTARAA0AgCCADKQAANwAAIANBCGohAyAIQQhqIgggC0kNAAwCCwALIAggAykAADcAACAIIAMpAAg3AAggAkEZSA0AIAdBGGohAgNAIAIgAykAEDcAACACIAMpABg3AAggAiADKQAgNwAQIAIgAykAKDcAGCADQSBqIQMgAkEgaiICIAtJDQALCyAKQYh/SwRAIAohCQwDCyAGIApqIQYgBEHwAGoQDyEDIA9B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";var se=new JA,Ce=!1;async function _I(A,t,e){let I=null;typeof A!="string"?I=A.href:A.startsWith("http")?I=A:I=`${t}/${A}`,I.endsWith(".js")&&(I=I.substring(0,I.length-3)),I.endsWith(".wasm")&&(I=I.substring(0,I.length-5));let r=`${I}.wasm`,o=await LA.get(`${r}.zst`,{responseType:"arraybuffer",params:e});Ce||(await se.init(),Ce=!0);let C=se.decode(new Uint8Array(o.data)).buffer;return(await import(`${I}.js`)).default({wasmBinary:C})}var Be=_I;var bA=new Map;async function XI(A,t,e){let I=A,r=A,o=null;return typeof A!="string"&&(I=new URL(A.href),r=I.href),bA.has(r)?o=await bA.get(r):(bA.set(r,Be(I,t,e)),o=await bA.get(r)),o}var ae=XI;var zI={TextFile:"TextFile",BinaryFile:"BinaryFile",TextStream:"TextStream",BinaryStream:"BinaryStream",Image:"Image",PointSet:"PointSet",Mesh:"Mesh",PolyData:"PolyData",TransformList:"TransformList",JsonCompatible:"JsonCompatible"},h=zI;var vI={Int8:"int8",UInt8:"uint8",Int16:"int16",UInt16:"uint16",Int32:"int32",UInt32:"uint32",Int64:"int64",UInt64:"uint64",SizeValueType:"uint64",IdentifierType:"uint64",IndexValueType:"int64",OffsetValueType:"int64"},R=vI;var $I={Float32:"float32",Float64:"float64",SpacePrecisionType:"float64"},z=$I;function Ar(A,t){let e=null;switch(A){case R.UInt8:{e=new Uint8Array(t);break}case R.Int8:{e=new Int8Array(t);break}case R.UInt16:{e=new Uint16Array(t);break}case R.Int16:{e=new Int16Array(t);break}case R.UInt32:{e=new Uint32Array(t);break}case R.Int32:{e=new Int32Array(t);break}case R.UInt64:{typeof globalThis.BigUint64Array=="function"?e=new BigUint64Array(t):e=new Uint8Array(t);break}case R.Int64:{typeof globalThis.BigInt64Array=="function"?e=new BigInt64Array(t):e=new Uint8Array(t);break}case z.Float32:{e=new Float32Array(t);break}case z.Float64:{e=new Float64Array(t);break}case"null":{e=null;break}case null:{e=null;break}default:throw new Error("Type is not supported as a TypedArray")}return e}var H=Ar;var ce=typeof globalThis.SharedArrayBuffer=="function",Qe=new TextEncoder,Ee=new TextDecoder("utf-8");function tr(A,t){let e={flags:"r",encoding:"binary"},I=A.fs_open(t,e.flags),o=A.fs_stat(t).size,g=null;ce?g=new SharedArrayBuffer(o):g=new ArrayBuffer(o);let C=new Uint8Array(g);return A.fs_read(I,C,0,o,0),A.fs_close(I),C}function fe(A,t,e){let I=null;ce?I=new SharedArrayBuffer(e):I=new ArrayBuffer(e);let r=new Uint8Array(I),o=new Uint8Array(A.HEAPU8.buffer,t,e);return r.set(o),r}function y(A,t,e,I){let r=0;return t!==null&&(r=A.ccall("itk_wasm_input_array_alloc","number",["number","number","number","number"],[0,e,I,t.buffer.byteLength]),A.HEAPU8.set(new Uint8Array(t.buffer),r)),r}function T(A,t,e){let I=JSON.stringify(t),r=A.lengthBytesUTF8(I)+1,o=A.ccall("itk_wasm_input_json_alloc","number",["number","number","number"],[0,e,r]);A.stringToUTF8(I,o,r)}function F(A,t,e,I){let r=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,t,e]),o=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,t,e]),g=fe(A,r,o);return H(I,g.buffer)}function sA(A,t){let e=A.ccall("itk_wasm_output_json_address","number",["number","number"],[0,t]),I=A.UTF8ToString(e);return JSON.parse(I)}function er(A,t,e,I){I!=null&&I.length>0&&I.forEach(function(a,n){switch(a.type){case h.TextStream:{let s=Qe.encode(a.data.data),f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.JsonCompatible:{let s=Qe.encode(JSON.stringify(a.data)),f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.BinaryStream:{let s=a.data.data,f=y(A,s,n,0),B={size:s.buffer.byteLength,data:`data:application/vnd.itk.address,0:${f}`};T(A,B,n);break}case h.TextFile:{A.fs_writeFile(a.data.path,a.data.data);break}case h.BinaryFile:{A.fs_writeFile(a.data.path,a.data.data);break}case h.Image:{let s=a.data,f=y(A,s.data,n,0),B=y(A,s.direction,n,1),E=typeof s.metadata?.entries<"u"?Array.from(s.metadata.entries()):[],l={imageType:s.imageType,name:s.name,origin:s.origin,spacing:s.spacing,direction:`data:application/vnd.itk.address,0:${B}`,size:s.size,data:`data:application/vnd.itk.address,0:${f}`,metadata:E};T(A,l,n);break}case h.Mesh:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.cells,n,1),E=y(A,s.pointData,n,2),l=y(A,s.cellData,n,3),c={meshType:s.meshType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfCells:s.numberOfCells,cells:`data:application/vnd.itk.address,0:${B}`,cellBufferSize:s.cellBufferSize,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${E}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${l}`};T(A,c,n);break}case h.PointSet:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.pointData,n,1),E={pointSetType:s.pointSetType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${B}`};T(A,E,n);break}case h.TransformList:{let s=a.data,f=[];s.forEach((B,E)=>{let c=`data:application/vnd.itk.address,0:${y(A,B.fixedParameters,n,E*2)}`,S=`data:application/vnd.itk.address,0:${y(A,B.parameters,n,E*2+1)}`,D={transformType:B.transformType,numberOfFixedParameters:B.numberOfFixedParameters,numberOfParameters:B.numberOfParameters,name:B.name,inputSpaceName:B.inputSpaceName,outputSpaceName:B.outputSpaceName,parameters:S,fixedParameters:c};f.push(D)}),T(A,f,n);break}case h.PolyData:{let s=a.data,f=y(A,s.points,n,0),B=y(A,s.vertices,n,1),E=y(A,s.lines,n,2),l=y(A,s.polygons,n,3),c=y(A,s.triangleStrips,n,4),p=y(A,s.pointData,n,5),S=y(A,s.pointData,n,6),D={polyDataType:s.polyDataType,name:s.name,numberOfPoints:s.numberOfPoints,points:`data:application/vnd.itk.address,0:${f}`,verticesBufferSize:s.verticesBufferSize,vertices:`data:application/vnd.itk.address,0:${B}`,linesBufferSize:s.linesBufferSize,lines:`data:application/vnd.itk.address,0:${E}`,polygonsBufferSize:s.polygonsBufferSize,polygons:`data:application/vnd.itk.address,0:${l}`,triangleStripsBufferSize:s.triangleStripsBufferSize,triangleStrips:`data:application/vnd.itk.address,0:${c}`,numberOfPointPixels:s.numberOfPointPixels,pointData:`data:application/vnd.itk.address,0:${p}`,numberOfCellPixels:s.numberOfCellPixels,cellData:`data:application/vnd.itk.address,0:${S}`};T(A,D,n);break}default:throw Error("Unsupported input InterfaceType")}}),A.resetModuleStdout(),A.resetModuleStderr();let r=A.stackSave(),o=0;try{o=A.callMain(t.slice())}catch(a){throw typeof a=="number"&&(console.log("Exception while running pipeline:"),console.log("stdout:",A.getModuleStdout()),console.error("stderr:",A.getModuleStderr()),typeof A.getExceptionMessage<"u"?console.error("exception:",A.getExceptionMessage(a)):console.error("Build module in Debug mode for exception message information.")),a}finally{A.stackRestore(r)}let g=A.getModuleStdout(),C=A.getModuleStderr(),Q=[];return e!=null&&e.length>0&&o===0&&e.forEach(function(a,n){let s=null;switch(a.type){case h.TextStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),l=new Uint8Array(A.HEAPU8.buffer,B,E);s={data:Ee.decode(l)};break}case h.JsonCompatible:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]),l=new Uint8Array(A.HEAPU8.buffer,B,E);s=JSON.parse(Ee.decode(l));break}case h.BinaryStream:{let B=A.ccall("itk_wasm_output_array_address","number",["number","number","number"],[0,n,0]),E=A.ccall("itk_wasm_output_array_size","number",["number","number","number"],[0,n,0]);s={data:fe(A,B,E)};break}case h.TextFile:{s={path:a.data.path,data:A.fs_readFile(a.data.path,{encoding:"utf8"})};break}case h.BinaryFile:{s={path:a.data.path,data:tr(A,a.data.path)};break}case h.Image:{let B=sA(A,n);B.data=F(A,n,0,B.imageType.componentType),B.direction=F(A,n,1,z.Float64),B.metadata=new Map(B.metadata),s=B;break}case h.Mesh:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,B.meshType.pointComponentType):B.points=H(B.meshType.pointComponentType,new ArrayBuffer(0)),B.numberOfCells>0?B.cells=F(A,n,1,B.meshType.cellComponentType):B.cells=H(B.meshType.cellComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,n,2,B.meshType.pointPixelComponentType):B.pointData=H(B.meshType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,n,3,B.meshType.cellPixelComponentType):B.cellData=H(B.meshType.cellPixelComponentType,new ArrayBuffer(0)),s=B;break}case h.PointSet:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,B.pointSetType.pointComponentType):B.points=H(B.pointSetType.pointComponentType,new ArrayBuffer(0)),B.numberOfPointPixels>0?B.pointData=F(A,n,1,B.pointSetType.pointPixelComponentType):B.pointData=H(B.pointSetType.pointPixelComponentType,new ArrayBuffer(0)),s=B;break}case h.TransformList:{let B=sA(A,n);B.forEach((E,l)=>{E.numberOfFixedParameters>0&&(B[l].fixedParameters=F(A,n,l*2,E.transformType.parametersValueType)),E.numberOfFixedParameters>0&&(B[l].parameters=F(A,n,l*2+1,E.transformType.parametersValueType))}),s=B;break}case h.PolyData:{let B=sA(A,n);B.numberOfPoints>0?B.points=F(A,n,0,z.Float32):B.points=new Float32Array,B.verticesBufferSize>0?B.vertices=F(A,n,1,R.UInt32):B.vertices=new Uint32Array,B.linesBufferSize>0?B.lines=F(A,n,2,R.UInt32):B.lines=new Uint32Array,B.polygonsBufferSize>0?B.polygons=F(A,n,3,R.UInt32):B.polygons=new Uint32Array,B.triangleStripsBufferSize>0?B.triangleStrips=F(A,n,4,R.UInt32):B.triangleStrips=new Uint32Array,B.numberOfPointPixels>0?B.pointData=F(A,n,5,B.polyDataType.pointPixelComponentType):B.pointData=H(B.polyDataType.pointPixelComponentType,new ArrayBuffer(0)),B.numberOfCellPixels>0?B.cellData=F(A,n,6,B.polyDataType.cellPixelComponentType):B.cellData=H(B.polyDataType.cellPixelComponentType,new ArrayBuffer(0)),s=B;break}default:throw Error("Unsupported output InterfaceType")}let f={type:a.type,data:s};Q.push(f)}),{returnValue:o,stdout:g,stderr:C,outputs:Q}}var le=er;var Ir=typeof globalThis.SharedArrayBuffer<"u";function rr(A,t){if(A==null)return[];let e=[];for(let I=0;I<A.length;I++){let r=or(A[I],t);r!==null&&e.push(r)}return e}function or(A,t){if(A==null)return null;let e=null;return A.buffer!==void 0?e=A.buffer:A.byteLength!==void 0&&(e=A),Ir&&e instanceof SharedArrayBuffer?null:t?e:e.slice(0)}var ue=rr;function gr(A){return[A.data,A.direction]}var De=gr;function ir(A){return[A.points,A.pointData,A.cells,A.cellData]}var he=ir;function nr(A){return[A.points,A.vertices,A.lines,A.polygons,A.triangleStrips,A.pointData,A.cellData]}var de=nr;async function sr(A,t,e,I){let r=le(A,t,e,I),o=[];return r.outputs.forEach(function(g){if(g.type===h.BinaryStream||g.type===h.BinaryFile){let C=g.data;o.push(C)}else if(g.type===h.Image){let C=g.data;o.push(...De(C))}else if(g.type===h.Mesh){let C=g.data;o.push(...he(C))}else if(g.type===h.PolyData){let C=g.data;o.push(...de(C))}}),MA(r,ue(o,!0))}var ye=sr;var Cr={runPipeline:async function(A,t,e,I,r,o){let g=await ae(A,t,o);return await ye(g,e,I,r)}};fA(Cr);%0A/*! Bundled license information:%0A%0Acomlink/dist/esm/comlink.mjs:%0A  (**%0A   * @license%0A   * Copyright 2019 Google LLC%0A   * SPDX-License-Identifier: Apache-2.0%0A   *)%0A*/%0A';Lt(Tt);export{Jn as downsample,Ln as downsampleBinShrink,Tn as downsampleLabelImage,Pn as downsampleSigma,Mn as gaussianKernelRadius,H as getDefaultWebWorker,F as getPipelineWorkerUrl,J as getPipelinesBaseUrl,uI as setDefaultWebWorker,Lt as setPipelineWorkerUrl,sI as setPipelinesBaseUrl,MA as version};
/*! Bundled license information:

comlink/dist/esm/comlink.mjs:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
"""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
