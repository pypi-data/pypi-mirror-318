# coding: utf-8

"""
    Automated Optical Inspection API

    AOI_API   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: corey.sadler@3adesign.co.uk
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from AOI_API import schemas  # noqa: F401


class DbPhrameJSONStore(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    target resolution of a display
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def id() -> typing.Type['Id']:
                return Id
            ui_config = schemas.StrSchema
            __annotations__ = {
                "id": id,
                "ui_config": ui_config,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> 'Id': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ui_config"]) -> MetaOapg.properties.ui_config: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "ui_config", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union['Id', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ui_config"]) -> typing.Union[MetaOapg.properties.ui_config, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "ui_config", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union['Id', schemas.Unset] = schemas.unset,
        ui_config: typing.Union[MetaOapg.properties.ui_config, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'DbPhrameJSONStore':
        return super().__new__(
            cls,
            *_args,
            id=id,
            ui_config=ui_config,
            _configuration=_configuration,
            **kwargs,
        )

from AOI_API.model.id import Id
