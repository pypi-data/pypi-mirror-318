name: Build and Test
on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v2.0.3
        with:
          environment-file: ./environment-dev.yml
          init-shell: >-
            bash
          create-args: >-
            --verbose
          cache-environment: true
          cache-downloads: false

      - name: Test Ultraplot
        shell: bash -el {0}
        run: |
          micromamba activate ultraplot-dev
          pip install .
          python -m pytest

      - name: "Build docs"
        shell: bash -el {0}
        run: |
          micromamba activate ultraplot-dev
          cd docs
          make html

  publish-test:
    needs: build
    runs-on: ubuntu-latest
    # Run on every push to main/v* branches and pull requests
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install build
        run: python -m pip install build

      - name: Build package
        run: python -m build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish:
    needs: [build, publish-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v')
    permissions:
      # Required for trusted publishing to PyPI
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install build
        run: python -m pip install build

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Publish to Anaconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: false
          environment-file: environment-dev.yml

      - name: Install conda-build
        shell: bash -l {0}
        run: |
          micromamba activate ultraplot-dev
          micromamba install conda-build anaconda-client

      - name: Build and publish to Anaconda Cloud
        uses: anaconda/upload-conda-package@vi1
        with:
          user: cvanelteren
          token: ${{ secrets.ANACONDA_TOKEN }}
          label: main
