# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from ._lib import ParamGroupWrapper, create_unique_id

from .heat_relaxation_method import HeatRelaxationMethod
from .amg_params import AmgParams
from .gauss_seidel import GaussSeidel
from .krylov_amg import KrylovAmg
from .linear_solver_type import LinearSolverType


@dataclass(kw_only=True)
class HeatImplicitRelaxation(HeatRelaxationMethod):
    """Apply an implicit relaxation scheme."""

    implicit_method: enum.ImplicitMethod = enum.ImplicitMethod.BACKWARD_EULER
    "Scheme for implicit relaxation of the governing equations."
    linear_solver_type: LinearSolverType = field(default_factory=GaussSeidel)
    "Type of linear solver used for implicit relaxation."
