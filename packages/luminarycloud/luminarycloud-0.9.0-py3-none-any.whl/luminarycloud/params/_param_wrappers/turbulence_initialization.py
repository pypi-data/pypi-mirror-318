# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from ._lib import ParamGroupWrapper, create_unique_id

from .init_farfield_values_komega import InitFarfieldValuesKomega
from .init_farfield_values_sa import InitFarfieldValuesSa
from .init_sa_variable import InitSaVariable
from .init_turbulent_viscosity_and_intensity_komega import InitTurbulentViscosityAndIntensityKomega
from .init_turbulent_viscosity_ratio_and_intensity_komega import (
    InitTurbulentViscosityRatioAndIntensityKomega,
)
from .init_turbulent_viscosity_ratio_sa import InitTurbulentViscosityRatioSa
from .init_turbulent_viscosity_sa import InitTurbulentViscositySa
from .komega_initialization import KomegaInitialization
from .spalart_allmaras_initialization import SpalartAllmarasInitialization


@dataclass(kw_only=True)
class TurbulenceInitialization:
    """"""

    spalart_allmaras_initialization: SpalartAllmarasInitialization = field(
        default_factory=InitTurbulentViscosityRatioSa
    )
    "Type of initial condition for the turbulent variables."
    komega_initialization: KomegaInitialization = field(
        default_factory=InitTurbulentViscosityRatioAndIntensityKomega
    )
    "Type of initial condition for the turbulent variables."
