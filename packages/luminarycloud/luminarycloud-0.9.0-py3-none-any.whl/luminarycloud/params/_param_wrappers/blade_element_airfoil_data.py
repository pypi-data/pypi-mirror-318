# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from ._lib import ParamGroupWrapper, create_unique_id


@dataclass(kw_only=True)
class BladeElementAirfoilData(ParamGroupWrapper[clientpb.BladeElementAirfoilData]):
    """Construct a blade by assigning airfoil profiles to different radial stations"""

    name: str = field(default_factory=create_unique_id, init=False)
    "Assign a unique ID to this airfoil"
    radial_station: float = 0.0
    "Airfoil shape on the blade at this r/R"
    performance_data: Optional[RectilinearTable] = None
    "Lift, drag, and pitching moment coefficients vs. alpha & Mach number"

    def _to_proto(self) -> clientpb.BladeElementAirfoilData:
        _proto = clientpb.BladeElementAirfoilData()
        if self.name is not None:
            _proto.airfoil_id = self.name
        if self.radial_station is not None:
            _proto.airfoil_radial_station.value = self.radial_station
        if self.performance_data is not None:
            _proto.airfoil_performance_data = self.performance_data
        return _proto

    def _from_proto(self, proto: clientpb.BladeElementAirfoilData) -> None:
        self.name = proto.airfoil_id
        self.radial_station = proto.airfoil_radial_station.value
        self.performance_data = proto.airfoil_performance_data
        return None
