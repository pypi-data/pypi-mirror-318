# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from ._lib import ParamGroupWrapper, create_unique_id

from .periodicity_type import PeriodicityType


@dataclass(kw_only=True)
class RotationalPeriodicity(PeriodicityType):
    """"""

    center: Vector3 = field(default_factory=lambda: Vector3(0.0, 0.0, 0.0))
    "Origin for the rotational periodicity transformation."
    rotation_vector: Vector3 = field(default_factory=lambda: Vector3(0.0, 0.0, 0.0))
    "Holds the rotation vector needed to transform each point on the first periodic boundary to its matching point on the second periodic boundary. The vector direction defines the periodicity axis and its magnitude defines the periodicity angle, in radians, from A to B according to the right-hand rule."
