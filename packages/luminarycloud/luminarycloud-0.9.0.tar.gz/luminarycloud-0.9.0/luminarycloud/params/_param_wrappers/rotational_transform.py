# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from ._lib import ParamGroupWrapper, create_unique_id

from .frame_transforms import FrameTransforms


@dataclass(kw_only=True)
class RotationalTransform(FrameTransforms):
    """Rotational Transformation"""

    rotation_angles: Vector3 = field(default_factory=lambda: Vector3(0.0, 0.0, 0.0))
    ""

    def _to_proto(self) -> clientpb.FrameTransforms:
        _proto = super()._to_proto()
        _proto.transform_type = enum.TransformType.ROTATIONAL_TRANSFORM
        _proto.transform_rotation_angles.CopyFrom(self.rotation_angles._to_ad_proto())
        return _proto

    def _from_proto(self, proto: clientpb.FrameTransforms) -> None:
        super()._from_proto(proto)
        assert proto.transform_type == enum.TransformType.ROTATIONAL_TRANSFORM
        self.rotation_angles._from_ad_proto(proto.transform_rotation_angles)
        return None
