# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from ._lib import ParamGroupWrapper, create_unique_id


@dataclass(kw_only=True)
class LinearSolverType(metaclass=ABCMeta):
    """Type of linear solver used for implicit relaxation."""

    iterations: int = 15
    "Maximum number of linear solver iterations per nonlinear solution update. The linear solver terminates if the maximum is reached."
    tolerance: float = 0.01
    "Relative reduction target in the linear solver residual from an initial value of 1.0 per nonlinear solution update. The linear solver terminates if the tolerance is met."
