# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from ._lib import ParamGroupWrapper, create_unique_id

from .inlet import Inlet


@dataclass(kw_only=True)
class VelocityMagnitudeInlet(Inlet):
    """Velocity magnitude inlet boundary condition."""

    velocity: float = 1.0
    "Velocity magnitude at the inlet boundary."
    direction_specification: enum.DirectionSpecification = (
        enum.DirectionSpecification.NORMAL_TO_BOUNDARY
    )
    "Method of defining the flow direction at the inlet."
    direction: Vector3 = field(default_factory=lambda: Vector3(1.0, 0.0, 0.0))
    "Vector (x,y,z) defining the flow direction. Automatically scaled to a unit vector internally."

    def _to_proto(self) -> clientpb.BoundaryConditionsFluid:
        _proto = super()._to_proto()
        _proto.inlet_momentum = enum.InletMomentum.VELOCITY_INLET
        _proto.inlet_velocity_magnitude.value = self.velocity
        _proto.direction_specification = self.direction_specification
        _proto.flow_direction.CopyFrom(self.direction._to_ad_proto())
        return _proto

    def _from_proto(self, proto: clientpb.BoundaryConditionsFluid) -> None:
        super()._from_proto(proto)
        assert proto.inlet_momentum == enum.InletMomentum.VELOCITY_INLET
        self.velocity = proto.inlet_velocity_magnitude.value
        self.direction_specification = enum.DirectionSpecification(proto.direction_specification)
        self.direction._from_ad_proto(proto.flow_direction)
        return None
