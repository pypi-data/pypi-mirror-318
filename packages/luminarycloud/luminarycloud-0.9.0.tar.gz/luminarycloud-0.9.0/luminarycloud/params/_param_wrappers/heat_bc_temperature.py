# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from ._lib import ParamGroupWrapper, create_unique_id

from .boundary_conditions_heat import BoundaryConditionsHeat


@dataclass(kw_only=True)
class HeatBcTemperature(BoundaryConditionsHeat):
    """Fixed temperature."""

    temperature: float = 288.15
    "Temperature at the wall boundary surfaces."

    def _to_proto(self) -> clientpb.BoundaryConditionsHeat:
        _proto = super()._to_proto()
        _proto.heat_physical_boundary = enum.HeatPhysicalBoundary.HEAT_BC_ISOTHERMAL
        _proto.fixed_temperature.value = self.temperature
        return _proto

    def _from_proto(self, proto: clientpb.BoundaryConditionsHeat) -> None:
        super()._from_proto(proto)
        assert proto.heat_physical_boundary == enum.HeatPhysicalBoundary.HEAT_BC_ISOTHERMAL
        self.temperature = proto.fixed_temperature.value
        return None
