Metadata-Version: 2.1
Name: deepclimate
Version: 0.0.1
Summary: A deep learning framework for climate modelling and data analysis
Home-page: https://github.com/midhunmachari/DeepClimate
Author: Midhun Murukesh
Author-email: midhunmachari@gmail.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: keras>=3.7.0
Requires-Dist: matplotlib>=3.10.0
Requires-Dist: matplotlib-inline>=0.1.7
Requires-Dist: netcdf4>=1.7.2
Requires-Dist: numpy>=1.26.4
Requires-Dist: pandas>=2.2.3
Requires-Dist: scikit-learn>=1.5.2
Requires-Dist: scipy>=1.14.1
Requires-Dist: tabulate>=0.9.0
Requires-Dist: tensorboard==2.17.1
Requires-Dist: tensorboard-data-server==0.7.2
Requires-Dist: tensorflow==2.17.0
Requires-Dist: tqdm>=4.67.1
Requires-Dist: xarray>=2024.11.0

# **DeepClimate**

*A Python package for climate data analysis and modeling with deep learning.*

Feel free to [join the discussions](https://github.com/midhunmachari/DeepClimate/discussions)!

**Version:** 0.0.1 (beta)  
**Release date:** January 1, 2025

## **Description**  
**DeepClimate** is a powerful and intuitive Python library designed to simplify the training and evaluation of neural networks tailored for climate science. Whether you're working on downscaling, super-resolution, or bias correction of climate datasets, DeepClimate offers tools and pre-built models to accelerate your research and applications.

## **Features**  
- Built-in support for state-of-the-art deep learning architectures (CNN, U-Net, GAN, etc.).  
- Custom loss functions for climate modeling and other climate-specific metrics.  
- Tools for data preprocessing, visualization, and evaluation metrics.  
- Seamless integration with popular deep learning frameworks (TensorFlow/PyTorch).  

### **Objectives:**
1. Develop a deep learning framework for training deep learning models with climate data.
2. Easy-to-use interface for novice users.
3. Create custom modules for physics-informed training of deep learning models.
4. Custom training loss functions and evaluation metrics related to the climate science community.
5. An open library to add architectures from the literature.

### **Applications:**
- Climate prediction models.
- Hydro-meteorological research.
- Policy-making in climate resilience.
