//
// Generated by Bluespec Compiler, version 2024.01 (build ae2a2fc6)
//
//
// Ports:
// Name                         I/O  size props
// RDY_reset                      O     1
// RDY_set_verbosity              O     1 const
// v_from_masters_0_awready       O     1 reg
// v_from_masters_0_wready        O     1 reg
// v_from_masters_0_bvalid        O     1 reg
// v_from_masters_0_bresp         O     2 reg
// v_from_masters_0_arready       O     1 reg
// v_from_masters_0_rvalid        O     1 reg
// v_from_masters_0_rresp         O     2 reg
// v_from_masters_0_rdata         O    32 reg
// v_to_slaves_0_awvalid          O     1 reg
// v_to_slaves_0_awaddr           O    32 reg
// v_to_slaves_0_awprot           O     3 reg
// v_to_slaves_0_wvalid           O     1 reg
// v_to_slaves_0_wdata            O    32 reg
// v_to_slaves_0_wstrb            O     4 reg
// v_to_slaves_0_bready           O     1 reg
// v_to_slaves_0_arvalid          O     1 reg
// v_to_slaves_0_araddr           O    32 reg
// v_to_slaves_0_arprot           O     3 reg
// v_to_slaves_0_rready           O     1 reg
// v_to_slaves_1_awvalid          O     1 reg
// v_to_slaves_1_awaddr           O    32 reg
// v_to_slaves_1_awprot           O     3 reg
// v_to_slaves_1_wvalid           O     1 reg
// v_to_slaves_1_wdata            O    32 reg
// v_to_slaves_1_wstrb            O     4 reg
// v_to_slaves_1_bready           O     1 reg
// v_to_slaves_1_arvalid          O     1 reg
// v_to_slaves_1_araddr           O    32 reg
// v_to_slaves_1_arprot           O     3 reg
// v_to_slaves_1_rready           O     1 reg
// v_to_slaves_2_awvalid          O     1 reg
// v_to_slaves_2_awaddr           O    32 reg
// v_to_slaves_2_awprot           O     3 reg
// v_to_slaves_2_wvalid           O     1 reg
// v_to_slaves_2_wdata            O    32 reg
// v_to_slaves_2_wstrb            O     4 reg
// v_to_slaves_2_bready           O     1 reg
// v_to_slaves_2_arvalid          O     1 reg
// v_to_slaves_2_araddr           O    32 reg
// v_to_slaves_2_arprot           O     3 reg
// v_to_slaves_2_rready           O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// set_verbosity_verbosity        I     4 reg
// v_from_masters_0_awvalid       I     1
// v_from_masters_0_awaddr        I    32 reg
// v_from_masters_0_awprot        I     3 reg
// v_from_masters_0_wvalid        I     1
// v_from_masters_0_wdata         I    32 reg
// v_from_masters_0_wstrb         I     4 reg
// v_from_masters_0_bready        I     1
// v_from_masters_0_arvalid       I     1
// v_from_masters_0_araddr        I    32 reg
// v_from_masters_0_arprot        I     3 reg
// v_from_masters_0_rready        I     1
// v_to_slaves_0_awready          I     1
// v_to_slaves_0_wready           I     1
// v_to_slaves_0_bvalid           I     1
// v_to_slaves_0_bresp            I     2 reg
// v_to_slaves_0_arready          I     1
// v_to_slaves_0_rvalid           I     1
// v_to_slaves_0_rresp            I     2 reg
// v_to_slaves_0_rdata            I    32 reg
// v_to_slaves_1_awready          I     1
// v_to_slaves_1_wready           I     1
// v_to_slaves_1_bvalid           I     1
// v_to_slaves_1_bresp            I     2 reg
// v_to_slaves_1_arready          I     1
// v_to_slaves_1_rvalid           I     1
// v_to_slaves_1_rresp            I     2 reg
// v_to_slaves_1_rdata            I    32 reg
// v_to_slaves_2_awready          I     1
// v_to_slaves_2_wready           I     1
// v_to_slaves_2_bvalid           I     1
// v_to_slaves_2_bresp            I     2 reg
// v_to_slaves_2_arready          I     1
// v_to_slaves_2_rvalid           I     1
// v_to_slaves_2_rresp            I     2 reg
// v_to_slaves_2_rdata            I    32 reg
// EN_reset                       I     1
// EN_set_verbosity               I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkAXI4_3dma(CLK,
		   RST_N,

		   EN_reset,
		   RDY_reset,

		   set_verbosity_verbosity,
		   EN_set_verbosity,
		   RDY_set_verbosity,

		   v_from_masters_0_awvalid,
		   v_from_masters_0_awaddr,
		   v_from_masters_0_awprot,

		   v_from_masters_0_awready,

		   v_from_masters_0_wvalid,
		   v_from_masters_0_wdata,
		   v_from_masters_0_wstrb,

		   v_from_masters_0_wready,

		   v_from_masters_0_bvalid,

		   v_from_masters_0_bresp,

		   v_from_masters_0_bready,

		   v_from_masters_0_arvalid,
		   v_from_masters_0_araddr,
		   v_from_masters_0_arprot,

		   v_from_masters_0_arready,

		   v_from_masters_0_rvalid,

		   v_from_masters_0_rresp,

		   v_from_masters_0_rdata,

		   v_from_masters_0_rready,

		   v_to_slaves_0_awvalid,

		   v_to_slaves_0_awaddr,

		   v_to_slaves_0_awprot,

		   v_to_slaves_0_awready,

		   v_to_slaves_0_wvalid,

		   v_to_slaves_0_wdata,

		   v_to_slaves_0_wstrb,

		   v_to_slaves_0_wready,

		   v_to_slaves_0_bvalid,
		   v_to_slaves_0_bresp,

		   v_to_slaves_0_bready,

		   v_to_slaves_0_arvalid,

		   v_to_slaves_0_araddr,

		   v_to_slaves_0_arprot,

		   v_to_slaves_0_arready,

		   v_to_slaves_0_rvalid,
		   v_to_slaves_0_rresp,
		   v_to_slaves_0_rdata,

		   v_to_slaves_0_rready,

		   v_to_slaves_1_awvalid,

		   v_to_slaves_1_awaddr,

		   v_to_slaves_1_awprot,

		   v_to_slaves_1_awready,

		   v_to_slaves_1_wvalid,

		   v_to_slaves_1_wdata,

		   v_to_slaves_1_wstrb,

		   v_to_slaves_1_wready,

		   v_to_slaves_1_bvalid,
		   v_to_slaves_1_bresp,

		   v_to_slaves_1_bready,

		   v_to_slaves_1_arvalid,

		   v_to_slaves_1_araddr,

		   v_to_slaves_1_arprot,

		   v_to_slaves_1_arready,

		   v_to_slaves_1_rvalid,
		   v_to_slaves_1_rresp,
		   v_to_slaves_1_rdata,

		   v_to_slaves_1_rready,

		   v_to_slaves_2_awvalid,

		   v_to_slaves_2_awaddr,

		   v_to_slaves_2_awprot,

		   v_to_slaves_2_awready,

		   v_to_slaves_2_wvalid,

		   v_to_slaves_2_wdata,

		   v_to_slaves_2_wstrb,

		   v_to_slaves_2_wready,

		   v_to_slaves_2_bvalid,
		   v_to_slaves_2_bresp,

		   v_to_slaves_2_bready,

		   v_to_slaves_2_arvalid,

		   v_to_slaves_2_araddr,

		   v_to_slaves_2_arprot,

		   v_to_slaves_2_arready,

		   v_to_slaves_2_rvalid,
		   v_to_slaves_2_rresp,
		   v_to_slaves_2_rdata,

		   v_to_slaves_2_rready);
  input  CLK;
  input  RST_N;

  // action method reset
  input  EN_reset;
  output RDY_reset;

  // action method set_verbosity
  input  [3 : 0] set_verbosity_verbosity;
  input  EN_set_verbosity;
  output RDY_set_verbosity;

  // action method v_from_masters_0_m_awvalid
  input  v_from_masters_0_awvalid;
  input  [31 : 0] v_from_masters_0_awaddr;
  input  [2 : 0] v_from_masters_0_awprot;

  // value method v_from_masters_0_m_awready
  output v_from_masters_0_awready;

  // action method v_from_masters_0_m_wvalid
  input  v_from_masters_0_wvalid;
  input  [31 : 0] v_from_masters_0_wdata;
  input  [3 : 0] v_from_masters_0_wstrb;

  // value method v_from_masters_0_m_wready
  output v_from_masters_0_wready;

  // value method v_from_masters_0_m_bvalid
  output v_from_masters_0_bvalid;

  // value method v_from_masters_0_m_bresp
  output [1 : 0] v_from_masters_0_bresp;

  // value method v_from_masters_0_m_buser

  // action method v_from_masters_0_m_bready
  input  v_from_masters_0_bready;

  // action method v_from_masters_0_m_arvalid
  input  v_from_masters_0_arvalid;
  input  [31 : 0] v_from_masters_0_araddr;
  input  [2 : 0] v_from_masters_0_arprot;

  // value method v_from_masters_0_m_arready
  output v_from_masters_0_arready;

  // value method v_from_masters_0_m_rvalid
  output v_from_masters_0_rvalid;

  // value method v_from_masters_0_m_rresp
  output [1 : 0] v_from_masters_0_rresp;

  // value method v_from_masters_0_m_rdata
  output [31 : 0] v_from_masters_0_rdata;

  // value method v_from_masters_0_m_ruser

  // action method v_from_masters_0_m_rready
  input  v_from_masters_0_rready;

  // value method v_to_slaves_0_m_awvalid
  output v_to_slaves_0_awvalid;

  // value method v_to_slaves_0_m_awaddr
  output [31 : 0] v_to_slaves_0_awaddr;

  // value method v_to_slaves_0_m_awprot
  output [2 : 0] v_to_slaves_0_awprot;

  // value method v_to_slaves_0_m_awuser

  // action method v_to_slaves_0_m_awready
  input  v_to_slaves_0_awready;

  // value method v_to_slaves_0_m_wvalid
  output v_to_slaves_0_wvalid;

  // value method v_to_slaves_0_m_wdata
  output [31 : 0] v_to_slaves_0_wdata;

  // value method v_to_slaves_0_m_wstrb
  output [3 : 0] v_to_slaves_0_wstrb;

  // action method v_to_slaves_0_m_wready
  input  v_to_slaves_0_wready;

  // action method v_to_slaves_0_m_bvalid
  input  v_to_slaves_0_bvalid;
  input  [1 : 0] v_to_slaves_0_bresp;

  // value method v_to_slaves_0_m_bready
  output v_to_slaves_0_bready;

  // value method v_to_slaves_0_m_arvalid
  output v_to_slaves_0_arvalid;

  // value method v_to_slaves_0_m_araddr
  output [31 : 0] v_to_slaves_0_araddr;

  // value method v_to_slaves_0_m_arprot
  output [2 : 0] v_to_slaves_0_arprot;

  // value method v_to_slaves_0_m_aruser

  // action method v_to_slaves_0_m_arready
  input  v_to_slaves_0_arready;

  // action method v_to_slaves_0_m_rvalid
  input  v_to_slaves_0_rvalid;
  input  [1 : 0] v_to_slaves_0_rresp;
  input  [31 : 0] v_to_slaves_0_rdata;

  // value method v_to_slaves_0_m_rready
  output v_to_slaves_0_rready;

  // value method v_to_slaves_1_m_awvalid
  output v_to_slaves_1_awvalid;

  // value method v_to_slaves_1_m_awaddr
  output [31 : 0] v_to_slaves_1_awaddr;

  // value method v_to_slaves_1_m_awprot
  output [2 : 0] v_to_slaves_1_awprot;

  // value method v_to_slaves_1_m_awuser

  // action method v_to_slaves_1_m_awready
  input  v_to_slaves_1_awready;

  // value method v_to_slaves_1_m_wvalid
  output v_to_slaves_1_wvalid;

  // value method v_to_slaves_1_m_wdata
  output [31 : 0] v_to_slaves_1_wdata;

  // value method v_to_slaves_1_m_wstrb
  output [3 : 0] v_to_slaves_1_wstrb;

  // action method v_to_slaves_1_m_wready
  input  v_to_slaves_1_wready;

  // action method v_to_slaves_1_m_bvalid
  input  v_to_slaves_1_bvalid;
  input  [1 : 0] v_to_slaves_1_bresp;

  // value method v_to_slaves_1_m_bready
  output v_to_slaves_1_bready;

  // value method v_to_slaves_1_m_arvalid
  output v_to_slaves_1_arvalid;

  // value method v_to_slaves_1_m_araddr
  output [31 : 0] v_to_slaves_1_araddr;

  // value method v_to_slaves_1_m_arprot
  output [2 : 0] v_to_slaves_1_arprot;

  // value method v_to_slaves_1_m_aruser

  // action method v_to_slaves_1_m_arready
  input  v_to_slaves_1_arready;

  // action method v_to_slaves_1_m_rvalid
  input  v_to_slaves_1_rvalid;
  input  [1 : 0] v_to_slaves_1_rresp;
  input  [31 : 0] v_to_slaves_1_rdata;

  // value method v_to_slaves_1_m_rready
  output v_to_slaves_1_rready;

  // value method v_to_slaves_2_m_awvalid
  output v_to_slaves_2_awvalid;

  // value method v_to_slaves_2_m_awaddr
  output [31 : 0] v_to_slaves_2_awaddr;

  // value method v_to_slaves_2_m_awprot
  output [2 : 0] v_to_slaves_2_awprot;

  // value method v_to_slaves_2_m_awuser

  // action method v_to_slaves_2_m_awready
  input  v_to_slaves_2_awready;

  // value method v_to_slaves_2_m_wvalid
  output v_to_slaves_2_wvalid;

  // value method v_to_slaves_2_m_wdata
  output [31 : 0] v_to_slaves_2_wdata;

  // value method v_to_slaves_2_m_wstrb
  output [3 : 0] v_to_slaves_2_wstrb;

  // action method v_to_slaves_2_m_wready
  input  v_to_slaves_2_wready;

  // action method v_to_slaves_2_m_bvalid
  input  v_to_slaves_2_bvalid;
  input  [1 : 0] v_to_slaves_2_bresp;

  // value method v_to_slaves_2_m_bready
  output v_to_slaves_2_bready;

  // value method v_to_slaves_2_m_arvalid
  output v_to_slaves_2_arvalid;

  // value method v_to_slaves_2_m_araddr
  output [31 : 0] v_to_slaves_2_araddr;

  // value method v_to_slaves_2_m_arprot
  output [2 : 0] v_to_slaves_2_arprot;

  // value method v_to_slaves_2_m_aruser

  // action method v_to_slaves_2_m_arready
  input  v_to_slaves_2_arready;

  // action method v_to_slaves_2_m_rvalid
  input  v_to_slaves_2_rvalid;
  input  [1 : 0] v_to_slaves_2_rresp;
  input  [31 : 0] v_to_slaves_2_rdata;

  // value method v_to_slaves_2_m_rready
  output v_to_slaves_2_rready;

  // signals for module outputs
  wire [31 : 0] v_from_masters_0_rdata,
		v_to_slaves_0_araddr,
		v_to_slaves_0_awaddr,
		v_to_slaves_0_wdata,
		v_to_slaves_1_araddr,
		v_to_slaves_1_awaddr,
		v_to_slaves_1_wdata,
		v_to_slaves_2_araddr,
		v_to_slaves_2_awaddr,
		v_to_slaves_2_wdata;
  wire [3 : 0] v_to_slaves_0_wstrb, v_to_slaves_1_wstrb, v_to_slaves_2_wstrb;
  wire [2 : 0] v_to_slaves_0_arprot,
	       v_to_slaves_0_awprot,
	       v_to_slaves_1_arprot,
	       v_to_slaves_1_awprot,
	       v_to_slaves_2_arprot,
	       v_to_slaves_2_awprot;
  wire [1 : 0] v_from_masters_0_bresp, v_from_masters_0_rresp;
  wire RDY_reset,
       RDY_set_verbosity,
       v_from_masters_0_arready,
       v_from_masters_0_awready,
       v_from_masters_0_bvalid,
       v_from_masters_0_rvalid,
       v_from_masters_0_wready,
       v_to_slaves_0_arvalid,
       v_to_slaves_0_awvalid,
       v_to_slaves_0_bready,
       v_to_slaves_0_rready,
       v_to_slaves_0_wvalid,
       v_to_slaves_1_arvalid,
       v_to_slaves_1_awvalid,
       v_to_slaves_1_bready,
       v_to_slaves_1_rready,
       v_to_slaves_1_wvalid,
       v_to_slaves_2_arvalid,
       v_to_slaves_2_awvalid,
       v_to_slaves_2_bready,
       v_to_slaves_2_rready,
       v_to_slaves_2_wvalid;

  // register fabric_cfg_verbosity
  reg [3 : 0] fabric_cfg_verbosity;
  wire [3 : 0] fabric_cfg_verbosity_D_IN;
  wire fabric_cfg_verbosity_EN;

  // register fabric_rg_reset
  reg fabric_rg_reset;
  wire fabric_rg_reset_D_IN, fabric_rg_reset_EN;

  // ports of submodule fabric_v_f_rd_err_user_0
  wire fabric_v_f_rd_err_user_0_CLR,
       fabric_v_f_rd_err_user_0_DEQ,
       fabric_v_f_rd_err_user_0_EMPTY_N,
       fabric_v_f_rd_err_user_0_ENQ,
       fabric_v_f_rd_err_user_0_FULL_N;

  // ports of submodule fabric_v_f_rd_mis_0
  wire fabric_v_f_rd_mis_0_CLR,
       fabric_v_f_rd_mis_0_DEQ,
       fabric_v_f_rd_mis_0_D_IN,
       fabric_v_f_rd_mis_0_D_OUT,
       fabric_v_f_rd_mis_0_EMPTY_N,
       fabric_v_f_rd_mis_0_ENQ,
       fabric_v_f_rd_mis_0_FULL_N;

  // ports of submodule fabric_v_f_rd_mis_1
  wire fabric_v_f_rd_mis_1_CLR,
       fabric_v_f_rd_mis_1_DEQ,
       fabric_v_f_rd_mis_1_D_IN,
       fabric_v_f_rd_mis_1_D_OUT,
       fabric_v_f_rd_mis_1_EMPTY_N,
       fabric_v_f_rd_mis_1_ENQ,
       fabric_v_f_rd_mis_1_FULL_N;

  // ports of submodule fabric_v_f_rd_mis_2
  wire fabric_v_f_rd_mis_2_CLR,
       fabric_v_f_rd_mis_2_DEQ,
       fabric_v_f_rd_mis_2_D_IN,
       fabric_v_f_rd_mis_2_D_OUT,
       fabric_v_f_rd_mis_2_EMPTY_N,
       fabric_v_f_rd_mis_2_ENQ,
       fabric_v_f_rd_mis_2_FULL_N;

  // ports of submodule fabric_v_f_rd_sjs_0
  reg [1 : 0] fabric_v_f_rd_sjs_0_D_IN;
  wire [1 : 0] fabric_v_f_rd_sjs_0_D_OUT;
  wire fabric_v_f_rd_sjs_0_CLR,
       fabric_v_f_rd_sjs_0_DEQ,
       fabric_v_f_rd_sjs_0_EMPTY_N,
       fabric_v_f_rd_sjs_0_ENQ,
       fabric_v_f_rd_sjs_0_FULL_N;

  // ports of submodule fabric_v_f_wr_err_user_0
  wire fabric_v_f_wr_err_user_0_CLR,
       fabric_v_f_wr_err_user_0_DEQ,
       fabric_v_f_wr_err_user_0_EMPTY_N,
       fabric_v_f_wr_err_user_0_ENQ,
       fabric_v_f_wr_err_user_0_FULL_N;

  // ports of submodule fabric_v_f_wr_mis_0
  wire fabric_v_f_wr_mis_0_CLR,
       fabric_v_f_wr_mis_0_DEQ,
       fabric_v_f_wr_mis_0_D_IN,
       fabric_v_f_wr_mis_0_D_OUT,
       fabric_v_f_wr_mis_0_EMPTY_N,
       fabric_v_f_wr_mis_0_ENQ,
       fabric_v_f_wr_mis_0_FULL_N;

  // ports of submodule fabric_v_f_wr_mis_1
  wire fabric_v_f_wr_mis_1_CLR,
       fabric_v_f_wr_mis_1_DEQ,
       fabric_v_f_wr_mis_1_D_IN,
       fabric_v_f_wr_mis_1_D_OUT,
       fabric_v_f_wr_mis_1_EMPTY_N,
       fabric_v_f_wr_mis_1_ENQ,
       fabric_v_f_wr_mis_1_FULL_N;

  // ports of submodule fabric_v_f_wr_mis_2
  wire fabric_v_f_wr_mis_2_CLR,
       fabric_v_f_wr_mis_2_DEQ,
       fabric_v_f_wr_mis_2_D_IN,
       fabric_v_f_wr_mis_2_D_OUT,
       fabric_v_f_wr_mis_2_EMPTY_N,
       fabric_v_f_wr_mis_2_ENQ,
       fabric_v_f_wr_mis_2_FULL_N;

  // ports of submodule fabric_v_f_wr_sjs_0
  reg [1 : 0] fabric_v_f_wr_sjs_0_D_IN;
  wire [1 : 0] fabric_v_f_wr_sjs_0_D_OUT;
  wire fabric_v_f_wr_sjs_0_CLR,
       fabric_v_f_wr_sjs_0_DEQ,
       fabric_v_f_wr_sjs_0_EMPTY_N,
       fabric_v_f_wr_sjs_0_ENQ,
       fabric_v_f_wr_sjs_0_FULL_N;

  // ports of submodule fabric_xactors_from_masters_0_f_rd_addr
  wire [34 : 0] fabric_xactors_from_masters_0_f_rd_addr_D_IN,
		fabric_xactors_from_masters_0_f_rd_addr_D_OUT;
  wire fabric_xactors_from_masters_0_f_rd_addr_CLR,
       fabric_xactors_from_masters_0_f_rd_addr_DEQ,
       fabric_xactors_from_masters_0_f_rd_addr_EMPTY_N,
       fabric_xactors_from_masters_0_f_rd_addr_ENQ,
       fabric_xactors_from_masters_0_f_rd_addr_FULL_N;

  // ports of submodule fabric_xactors_from_masters_0_f_rd_data
  reg [33 : 0] fabric_xactors_from_masters_0_f_rd_data_D_IN;
  wire [33 : 0] fabric_xactors_from_masters_0_f_rd_data_D_OUT;
  wire fabric_xactors_from_masters_0_f_rd_data_CLR,
       fabric_xactors_from_masters_0_f_rd_data_DEQ,
       fabric_xactors_from_masters_0_f_rd_data_EMPTY_N,
       fabric_xactors_from_masters_0_f_rd_data_ENQ,
       fabric_xactors_from_masters_0_f_rd_data_FULL_N;

  // ports of submodule fabric_xactors_from_masters_0_f_wr_addr
  wire [34 : 0] fabric_xactors_from_masters_0_f_wr_addr_D_IN,
		fabric_xactors_from_masters_0_f_wr_addr_D_OUT;
  wire fabric_xactors_from_masters_0_f_wr_addr_CLR,
       fabric_xactors_from_masters_0_f_wr_addr_DEQ,
       fabric_xactors_from_masters_0_f_wr_addr_EMPTY_N,
       fabric_xactors_from_masters_0_f_wr_addr_ENQ,
       fabric_xactors_from_masters_0_f_wr_addr_FULL_N;

  // ports of submodule fabric_xactors_from_masters_0_f_wr_data
  wire [35 : 0] fabric_xactors_from_masters_0_f_wr_data_D_IN,
		fabric_xactors_from_masters_0_f_wr_data_D_OUT;
  wire fabric_xactors_from_masters_0_f_wr_data_CLR,
       fabric_xactors_from_masters_0_f_wr_data_DEQ,
       fabric_xactors_from_masters_0_f_wr_data_EMPTY_N,
       fabric_xactors_from_masters_0_f_wr_data_ENQ,
       fabric_xactors_from_masters_0_f_wr_data_FULL_N;

  // ports of submodule fabric_xactors_from_masters_0_f_wr_resp
  reg [1 : 0] fabric_xactors_from_masters_0_f_wr_resp_D_IN;
  wire [1 : 0] fabric_xactors_from_masters_0_f_wr_resp_D_OUT;
  wire fabric_xactors_from_masters_0_f_wr_resp_CLR,
       fabric_xactors_from_masters_0_f_wr_resp_DEQ,
       fabric_xactors_from_masters_0_f_wr_resp_EMPTY_N,
       fabric_xactors_from_masters_0_f_wr_resp_ENQ,
       fabric_xactors_from_masters_0_f_wr_resp_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_0_f_rd_addr
  wire [34 : 0] fabric_xactors_to_slaves_0_f_rd_addr_D_IN,
		fabric_xactors_to_slaves_0_f_rd_addr_D_OUT;
  wire fabric_xactors_to_slaves_0_f_rd_addr_CLR,
       fabric_xactors_to_slaves_0_f_rd_addr_DEQ,
       fabric_xactors_to_slaves_0_f_rd_addr_EMPTY_N,
       fabric_xactors_to_slaves_0_f_rd_addr_ENQ,
       fabric_xactors_to_slaves_0_f_rd_addr_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_0_f_rd_data
  wire [33 : 0] fabric_xactors_to_slaves_0_f_rd_data_D_IN,
		fabric_xactors_to_slaves_0_f_rd_data_D_OUT;
  wire fabric_xactors_to_slaves_0_f_rd_data_CLR,
       fabric_xactors_to_slaves_0_f_rd_data_DEQ,
       fabric_xactors_to_slaves_0_f_rd_data_EMPTY_N,
       fabric_xactors_to_slaves_0_f_rd_data_ENQ,
       fabric_xactors_to_slaves_0_f_rd_data_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_0_f_wr_addr
  wire [34 : 0] fabric_xactors_to_slaves_0_f_wr_addr_D_IN,
		fabric_xactors_to_slaves_0_f_wr_addr_D_OUT;
  wire fabric_xactors_to_slaves_0_f_wr_addr_CLR,
       fabric_xactors_to_slaves_0_f_wr_addr_DEQ,
       fabric_xactors_to_slaves_0_f_wr_addr_EMPTY_N,
       fabric_xactors_to_slaves_0_f_wr_addr_ENQ,
       fabric_xactors_to_slaves_0_f_wr_addr_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_0_f_wr_data
  wire [35 : 0] fabric_xactors_to_slaves_0_f_wr_data_D_IN,
		fabric_xactors_to_slaves_0_f_wr_data_D_OUT;
  wire fabric_xactors_to_slaves_0_f_wr_data_CLR,
       fabric_xactors_to_slaves_0_f_wr_data_DEQ,
       fabric_xactors_to_slaves_0_f_wr_data_EMPTY_N,
       fabric_xactors_to_slaves_0_f_wr_data_ENQ,
       fabric_xactors_to_slaves_0_f_wr_data_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_0_f_wr_resp
  wire [1 : 0] fabric_xactors_to_slaves_0_f_wr_resp_D_IN,
	       fabric_xactors_to_slaves_0_f_wr_resp_D_OUT;
  wire fabric_xactors_to_slaves_0_f_wr_resp_CLR,
       fabric_xactors_to_slaves_0_f_wr_resp_DEQ,
       fabric_xactors_to_slaves_0_f_wr_resp_EMPTY_N,
       fabric_xactors_to_slaves_0_f_wr_resp_ENQ,
       fabric_xactors_to_slaves_0_f_wr_resp_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_1_f_rd_addr
  wire [34 : 0] fabric_xactors_to_slaves_1_f_rd_addr_D_IN,
		fabric_xactors_to_slaves_1_f_rd_addr_D_OUT;
  wire fabric_xactors_to_slaves_1_f_rd_addr_CLR,
       fabric_xactors_to_slaves_1_f_rd_addr_DEQ,
       fabric_xactors_to_slaves_1_f_rd_addr_EMPTY_N,
       fabric_xactors_to_slaves_1_f_rd_addr_ENQ,
       fabric_xactors_to_slaves_1_f_rd_addr_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_1_f_rd_data
  wire [33 : 0] fabric_xactors_to_slaves_1_f_rd_data_D_IN,
		fabric_xactors_to_slaves_1_f_rd_data_D_OUT;
  wire fabric_xactors_to_slaves_1_f_rd_data_CLR,
       fabric_xactors_to_slaves_1_f_rd_data_DEQ,
       fabric_xactors_to_slaves_1_f_rd_data_EMPTY_N,
       fabric_xactors_to_slaves_1_f_rd_data_ENQ,
       fabric_xactors_to_slaves_1_f_rd_data_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_1_f_wr_addr
  wire [34 : 0] fabric_xactors_to_slaves_1_f_wr_addr_D_IN,
		fabric_xactors_to_slaves_1_f_wr_addr_D_OUT;
  wire fabric_xactors_to_slaves_1_f_wr_addr_CLR,
       fabric_xactors_to_slaves_1_f_wr_addr_DEQ,
       fabric_xactors_to_slaves_1_f_wr_addr_EMPTY_N,
       fabric_xactors_to_slaves_1_f_wr_addr_ENQ,
       fabric_xactors_to_slaves_1_f_wr_addr_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_1_f_wr_data
  wire [35 : 0] fabric_xactors_to_slaves_1_f_wr_data_D_IN,
		fabric_xactors_to_slaves_1_f_wr_data_D_OUT;
  wire fabric_xactors_to_slaves_1_f_wr_data_CLR,
       fabric_xactors_to_slaves_1_f_wr_data_DEQ,
       fabric_xactors_to_slaves_1_f_wr_data_EMPTY_N,
       fabric_xactors_to_slaves_1_f_wr_data_ENQ,
       fabric_xactors_to_slaves_1_f_wr_data_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_1_f_wr_resp
  wire [1 : 0] fabric_xactors_to_slaves_1_f_wr_resp_D_IN,
	       fabric_xactors_to_slaves_1_f_wr_resp_D_OUT;
  wire fabric_xactors_to_slaves_1_f_wr_resp_CLR,
       fabric_xactors_to_slaves_1_f_wr_resp_DEQ,
       fabric_xactors_to_slaves_1_f_wr_resp_EMPTY_N,
       fabric_xactors_to_slaves_1_f_wr_resp_ENQ,
       fabric_xactors_to_slaves_1_f_wr_resp_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_2_f_rd_addr
  wire [34 : 0] fabric_xactors_to_slaves_2_f_rd_addr_D_IN,
		fabric_xactors_to_slaves_2_f_rd_addr_D_OUT;
  wire fabric_xactors_to_slaves_2_f_rd_addr_CLR,
       fabric_xactors_to_slaves_2_f_rd_addr_DEQ,
       fabric_xactors_to_slaves_2_f_rd_addr_EMPTY_N,
       fabric_xactors_to_slaves_2_f_rd_addr_ENQ,
       fabric_xactors_to_slaves_2_f_rd_addr_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_2_f_rd_data
  wire [33 : 0] fabric_xactors_to_slaves_2_f_rd_data_D_IN,
		fabric_xactors_to_slaves_2_f_rd_data_D_OUT;
  wire fabric_xactors_to_slaves_2_f_rd_data_CLR,
       fabric_xactors_to_slaves_2_f_rd_data_DEQ,
       fabric_xactors_to_slaves_2_f_rd_data_EMPTY_N,
       fabric_xactors_to_slaves_2_f_rd_data_ENQ,
       fabric_xactors_to_slaves_2_f_rd_data_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_2_f_wr_addr
  wire [34 : 0] fabric_xactors_to_slaves_2_f_wr_addr_D_IN,
		fabric_xactors_to_slaves_2_f_wr_addr_D_OUT;
  wire fabric_xactors_to_slaves_2_f_wr_addr_CLR,
       fabric_xactors_to_slaves_2_f_wr_addr_DEQ,
       fabric_xactors_to_slaves_2_f_wr_addr_EMPTY_N,
       fabric_xactors_to_slaves_2_f_wr_addr_ENQ,
       fabric_xactors_to_slaves_2_f_wr_addr_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_2_f_wr_data
  wire [35 : 0] fabric_xactors_to_slaves_2_f_wr_data_D_IN,
		fabric_xactors_to_slaves_2_f_wr_data_D_OUT;
  wire fabric_xactors_to_slaves_2_f_wr_data_CLR,
       fabric_xactors_to_slaves_2_f_wr_data_DEQ,
       fabric_xactors_to_slaves_2_f_wr_data_EMPTY_N,
       fabric_xactors_to_slaves_2_f_wr_data_ENQ,
       fabric_xactors_to_slaves_2_f_wr_data_FULL_N;

  // ports of submodule fabric_xactors_to_slaves_2_f_wr_resp
  wire [1 : 0] fabric_xactors_to_slaves_2_f_wr_resp_D_IN,
	       fabric_xactors_to_slaves_2_f_wr_resp_D_OUT;
  wire fabric_xactors_to_slaves_2_f_wr_resp_CLR,
       fabric_xactors_to_slaves_2_f_wr_resp_DEQ,
       fabric_xactors_to_slaves_2_f_wr_resp_EMPTY_N,
       fabric_xactors_to_slaves_2_f_wr_resp_ENQ,
       fabric_xactors_to_slaves_2_f_wr_resp_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_fabric_rl_rd_resp_err_to_master,
       CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master,
       CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1,
       CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2,
       CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave,
       CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1,
       CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2,
       CAN_FIRE_RL_fabric_rl_rd_xaction_no_such_slave,
       CAN_FIRE_RL_fabric_rl_reset,
       CAN_FIRE_RL_fabric_rl_wr_resp_err_to_master,
       CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master,
       CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1,
       CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2,
       CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave,
       CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1,
       CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2,
       CAN_FIRE_RL_fabric_rl_wr_xaction_no_such_slave,
       CAN_FIRE_reset,
       CAN_FIRE_set_verbosity,
       CAN_FIRE_v_from_masters_0_m_arvalid,
       CAN_FIRE_v_from_masters_0_m_awvalid,
       CAN_FIRE_v_from_masters_0_m_bready,
       CAN_FIRE_v_from_masters_0_m_rready,
       CAN_FIRE_v_from_masters_0_m_wvalid,
       CAN_FIRE_v_to_slaves_0_m_arready,
       CAN_FIRE_v_to_slaves_0_m_awready,
       CAN_FIRE_v_to_slaves_0_m_bvalid,
       CAN_FIRE_v_to_slaves_0_m_rvalid,
       CAN_FIRE_v_to_slaves_0_m_wready,
       CAN_FIRE_v_to_slaves_1_m_arready,
       CAN_FIRE_v_to_slaves_1_m_awready,
       CAN_FIRE_v_to_slaves_1_m_bvalid,
       CAN_FIRE_v_to_slaves_1_m_rvalid,
       CAN_FIRE_v_to_slaves_1_m_wready,
       CAN_FIRE_v_to_slaves_2_m_arready,
       CAN_FIRE_v_to_slaves_2_m_awready,
       CAN_FIRE_v_to_slaves_2_m_bvalid,
       CAN_FIRE_v_to_slaves_2_m_rvalid,
       CAN_FIRE_v_to_slaves_2_m_wready,
       WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master,
       WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master,
       WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1,
       WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2,
       WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave,
       WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1,
       WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2,
       WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave,
       WILL_FIRE_RL_fabric_rl_reset,
       WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master,
       WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master,
       WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1,
       WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2,
       WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave,
       WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1,
       WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2,
       WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave,
       WILL_FIRE_reset,
       WILL_FIRE_set_verbosity,
       WILL_FIRE_v_from_masters_0_m_arvalid,
       WILL_FIRE_v_from_masters_0_m_awvalid,
       WILL_FIRE_v_from_masters_0_m_bready,
       WILL_FIRE_v_from_masters_0_m_rready,
       WILL_FIRE_v_from_masters_0_m_wvalid,
       WILL_FIRE_v_to_slaves_0_m_arready,
       WILL_FIRE_v_to_slaves_0_m_awready,
       WILL_FIRE_v_to_slaves_0_m_bvalid,
       WILL_FIRE_v_to_slaves_0_m_rvalid,
       WILL_FIRE_v_to_slaves_0_m_wready,
       WILL_FIRE_v_to_slaves_1_m_arready,
       WILL_FIRE_v_to_slaves_1_m_awready,
       WILL_FIRE_v_to_slaves_1_m_bvalid,
       WILL_FIRE_v_to_slaves_1_m_rvalid,
       WILL_FIRE_v_to_slaves_1_m_wready,
       WILL_FIRE_v_to_slaves_2_m_arready,
       WILL_FIRE_v_to_slaves_2_m_awready,
       WILL_FIRE_v_to_slaves_2_m_bvalid,
       WILL_FIRE_v_to_slaves_2_m_rvalid,
       WILL_FIRE_v_to_slaves_2_m_wready;

  // inputs to muxes for submodule ports
  wire MUX_fabric_v_f_rd_sjs_0_enq_1__SEL_3,
       MUX_fabric_v_f_wr_sjs_0_enq_1__SEL_3,
       MUX_fabric_xactors_from_masters_0_f_rd_data_enq_1__SEL_3,
       MUX_fabric_xactors_from_masters_0_f_wr_resp_enq_1__SEL_3;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h5584;
  reg [31 : 0] v__h6014;
  reg [31 : 0] v__h6444;
  reg [31 : 0] v__h6806;
  reg [31 : 0] v__h7168;
  reg [31 : 0] v__h7487;
  reg [31 : 0] v__h7806;
  reg [31 : 0] v__h8090;
  reg [31 : 0] v__h8385;
  reg [31 : 0] v__h8665;
  reg [31 : 0] v__h8945;
  reg [31 : 0] v__h9192;
  reg [31 : 0] v__h9494;
  reg [31 : 0] v__h9783;
  reg [31 : 0] v__h10072;
  reg [31 : 0] v__h10323;
  reg [31 : 0] v__h3722;
  reg [31 : 0] v__h3716;
  reg [31 : 0] v__h5578;
  reg [31 : 0] v__h6008;
  reg [31 : 0] v__h6438;
  reg [31 : 0] v__h6800;
  reg [31 : 0] v__h7162;
  reg [31 : 0] v__h7481;
  reg [31 : 0] v__h7800;
  reg [31 : 0] v__h8084;
  reg [31 : 0] v__h8379;
  reg [31 : 0] v__h8659;
  reg [31 : 0] v__h8939;
  reg [31 : 0] v__h9186;
  reg [31 : 0] v__h9488;
  reg [31 : 0] v__h9777;
  reg [31 : 0] v__h10066;
  reg [31 : 0] v__h10317;
  // synopsys translate_on

  // remaining internal signals
  wire [31 : 0] a_araddr__h7061, a_awaddr__h5390;
  wire NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33,
       fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d87,
       fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d88,
       fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d89,
       fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d17,
       fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d18,
       fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d19;

  // action method reset
  assign RDY_reset = !fabric_rg_reset ;
  assign CAN_FIRE_reset = !fabric_rg_reset ;
  assign WILL_FIRE_reset = EN_reset ;

  // action method set_verbosity
  assign RDY_set_verbosity = 1'd1 ;
  assign CAN_FIRE_set_verbosity = 1'd1 ;
  assign WILL_FIRE_set_verbosity = EN_set_verbosity ;

  // action method v_from_masters_0_m_awvalid
  assign CAN_FIRE_v_from_masters_0_m_awvalid = 1'd1 ;
  assign WILL_FIRE_v_from_masters_0_m_awvalid = 1'd1 ;

  // value method v_from_masters_0_m_awready
  assign v_from_masters_0_awready =
	     fabric_xactors_from_masters_0_f_wr_addr_FULL_N ;

  // action method v_from_masters_0_m_wvalid
  assign CAN_FIRE_v_from_masters_0_m_wvalid = 1'd1 ;
  assign WILL_FIRE_v_from_masters_0_m_wvalid = 1'd1 ;

  // value method v_from_masters_0_m_wready
  assign v_from_masters_0_wready =
	     fabric_xactors_from_masters_0_f_wr_data_FULL_N ;

  // value method v_from_masters_0_m_bvalid
  assign v_from_masters_0_bvalid =
	     fabric_xactors_from_masters_0_f_wr_resp_EMPTY_N ;

  // value method v_from_masters_0_m_bresp
  assign v_from_masters_0_bresp =
	     fabric_xactors_from_masters_0_f_wr_resp_D_OUT ;

  // action method v_from_masters_0_m_bready
  assign CAN_FIRE_v_from_masters_0_m_bready = 1'd1 ;
  assign WILL_FIRE_v_from_masters_0_m_bready = 1'd1 ;

  // action method v_from_masters_0_m_arvalid
  assign CAN_FIRE_v_from_masters_0_m_arvalid = 1'd1 ;
  assign WILL_FIRE_v_from_masters_0_m_arvalid = 1'd1 ;

  // value method v_from_masters_0_m_arready
  assign v_from_masters_0_arready =
	     fabric_xactors_from_masters_0_f_rd_addr_FULL_N ;

  // value method v_from_masters_0_m_rvalid
  assign v_from_masters_0_rvalid =
	     fabric_xactors_from_masters_0_f_rd_data_EMPTY_N ;

  // value method v_from_masters_0_m_rresp
  assign v_from_masters_0_rresp =
	     fabric_xactors_from_masters_0_f_rd_data_D_OUT[33:32] ;

  // value method v_from_masters_0_m_rdata
  assign v_from_masters_0_rdata =
	     fabric_xactors_from_masters_0_f_rd_data_D_OUT[31:0] ;

  // action method v_from_masters_0_m_rready
  assign CAN_FIRE_v_from_masters_0_m_rready = 1'd1 ;
  assign WILL_FIRE_v_from_masters_0_m_rready = 1'd1 ;

  // value method v_to_slaves_0_m_awvalid
  assign v_to_slaves_0_awvalid =
	     fabric_xactors_to_slaves_0_f_wr_addr_EMPTY_N ;

  // value method v_to_slaves_0_m_awaddr
  assign v_to_slaves_0_awaddr =
	     fabric_xactors_to_slaves_0_f_wr_addr_D_OUT[34:3] ;

  // value method v_to_slaves_0_m_awprot
  assign v_to_slaves_0_awprot =
	     fabric_xactors_to_slaves_0_f_wr_addr_D_OUT[2:0] ;

  // action method v_to_slaves_0_m_awready
  assign CAN_FIRE_v_to_slaves_0_m_awready = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_0_m_awready = 1'd1 ;

  // value method v_to_slaves_0_m_wvalid
  assign v_to_slaves_0_wvalid = fabric_xactors_to_slaves_0_f_wr_data_EMPTY_N ;

  // value method v_to_slaves_0_m_wdata
  assign v_to_slaves_0_wdata =
	     fabric_xactors_to_slaves_0_f_wr_data_D_OUT[35:4] ;

  // value method v_to_slaves_0_m_wstrb
  assign v_to_slaves_0_wstrb =
	     fabric_xactors_to_slaves_0_f_wr_data_D_OUT[3:0] ;

  // action method v_to_slaves_0_m_wready
  assign CAN_FIRE_v_to_slaves_0_m_wready = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_0_m_wready = 1'd1 ;

  // action method v_to_slaves_0_m_bvalid
  assign CAN_FIRE_v_to_slaves_0_m_bvalid = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_0_m_bvalid = 1'd1 ;

  // value method v_to_slaves_0_m_bready
  assign v_to_slaves_0_bready = fabric_xactors_to_slaves_0_f_wr_resp_FULL_N ;

  // value method v_to_slaves_0_m_arvalid
  assign v_to_slaves_0_arvalid =
	     fabric_xactors_to_slaves_0_f_rd_addr_EMPTY_N ;

  // value method v_to_slaves_0_m_araddr
  assign v_to_slaves_0_araddr =
	     fabric_xactors_to_slaves_0_f_rd_addr_D_OUT[34:3] ;

  // value method v_to_slaves_0_m_arprot
  assign v_to_slaves_0_arprot =
	     fabric_xactors_to_slaves_0_f_rd_addr_D_OUT[2:0] ;

  // action method v_to_slaves_0_m_arready
  assign CAN_FIRE_v_to_slaves_0_m_arready = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_0_m_arready = 1'd1 ;

  // action method v_to_slaves_0_m_rvalid
  assign CAN_FIRE_v_to_slaves_0_m_rvalid = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_0_m_rvalid = 1'd1 ;

  // value method v_to_slaves_0_m_rready
  assign v_to_slaves_0_rready = fabric_xactors_to_slaves_0_f_rd_data_FULL_N ;

  // value method v_to_slaves_1_m_awvalid
  assign v_to_slaves_1_awvalid =
	     fabric_xactors_to_slaves_1_f_wr_addr_EMPTY_N ;

  // value method v_to_slaves_1_m_awaddr
  assign v_to_slaves_1_awaddr =
	     fabric_xactors_to_slaves_1_f_wr_addr_D_OUT[34:3] ;

  // value method v_to_slaves_1_m_awprot
  assign v_to_slaves_1_awprot =
	     fabric_xactors_to_slaves_1_f_wr_addr_D_OUT[2:0] ;

  // action method v_to_slaves_1_m_awready
  assign CAN_FIRE_v_to_slaves_1_m_awready = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_1_m_awready = 1'd1 ;

  // value method v_to_slaves_1_m_wvalid
  assign v_to_slaves_1_wvalid = fabric_xactors_to_slaves_1_f_wr_data_EMPTY_N ;

  // value method v_to_slaves_1_m_wdata
  assign v_to_slaves_1_wdata =
	     fabric_xactors_to_slaves_1_f_wr_data_D_OUT[35:4] ;

  // value method v_to_slaves_1_m_wstrb
  assign v_to_slaves_1_wstrb =
	     fabric_xactors_to_slaves_1_f_wr_data_D_OUT[3:0] ;

  // action method v_to_slaves_1_m_wready
  assign CAN_FIRE_v_to_slaves_1_m_wready = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_1_m_wready = 1'd1 ;

  // action method v_to_slaves_1_m_bvalid
  assign CAN_FIRE_v_to_slaves_1_m_bvalid = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_1_m_bvalid = 1'd1 ;

  // value method v_to_slaves_1_m_bready
  assign v_to_slaves_1_bready = fabric_xactors_to_slaves_1_f_wr_resp_FULL_N ;

  // value method v_to_slaves_1_m_arvalid
  assign v_to_slaves_1_arvalid =
	     fabric_xactors_to_slaves_1_f_rd_addr_EMPTY_N ;

  // value method v_to_slaves_1_m_araddr
  assign v_to_slaves_1_araddr =
	     fabric_xactors_to_slaves_1_f_rd_addr_D_OUT[34:3] ;

  // value method v_to_slaves_1_m_arprot
  assign v_to_slaves_1_arprot =
	     fabric_xactors_to_slaves_1_f_rd_addr_D_OUT[2:0] ;

  // action method v_to_slaves_1_m_arready
  assign CAN_FIRE_v_to_slaves_1_m_arready = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_1_m_arready = 1'd1 ;

  // action method v_to_slaves_1_m_rvalid
  assign CAN_FIRE_v_to_slaves_1_m_rvalid = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_1_m_rvalid = 1'd1 ;

  // value method v_to_slaves_1_m_rready
  assign v_to_slaves_1_rready = fabric_xactors_to_slaves_1_f_rd_data_FULL_N ;

  // value method v_to_slaves_2_m_awvalid
  assign v_to_slaves_2_awvalid =
	     fabric_xactors_to_slaves_2_f_wr_addr_EMPTY_N ;

  // value method v_to_slaves_2_m_awaddr
  assign v_to_slaves_2_awaddr =
	     fabric_xactors_to_slaves_2_f_wr_addr_D_OUT[34:3] ;

  // value method v_to_slaves_2_m_awprot
  assign v_to_slaves_2_awprot =
	     fabric_xactors_to_slaves_2_f_wr_addr_D_OUT[2:0] ;

  // action method v_to_slaves_2_m_awready
  assign CAN_FIRE_v_to_slaves_2_m_awready = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_2_m_awready = 1'd1 ;

  // value method v_to_slaves_2_m_wvalid
  assign v_to_slaves_2_wvalid = fabric_xactors_to_slaves_2_f_wr_data_EMPTY_N ;

  // value method v_to_slaves_2_m_wdata
  assign v_to_slaves_2_wdata =
	     fabric_xactors_to_slaves_2_f_wr_data_D_OUT[35:4] ;

  // value method v_to_slaves_2_m_wstrb
  assign v_to_slaves_2_wstrb =
	     fabric_xactors_to_slaves_2_f_wr_data_D_OUT[3:0] ;

  // action method v_to_slaves_2_m_wready
  assign CAN_FIRE_v_to_slaves_2_m_wready = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_2_m_wready = 1'd1 ;

  // action method v_to_slaves_2_m_bvalid
  assign CAN_FIRE_v_to_slaves_2_m_bvalid = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_2_m_bvalid = 1'd1 ;

  // value method v_to_slaves_2_m_bready
  assign v_to_slaves_2_bready = fabric_xactors_to_slaves_2_f_wr_resp_FULL_N ;

  // value method v_to_slaves_2_m_arvalid
  assign v_to_slaves_2_arvalid =
	     fabric_xactors_to_slaves_2_f_rd_addr_EMPTY_N ;

  // value method v_to_slaves_2_m_araddr
  assign v_to_slaves_2_araddr =
	     fabric_xactors_to_slaves_2_f_rd_addr_D_OUT[34:3] ;

  // value method v_to_slaves_2_m_arprot
  assign v_to_slaves_2_arprot =
	     fabric_xactors_to_slaves_2_f_rd_addr_D_OUT[2:0] ;

  // action method v_to_slaves_2_m_arready
  assign CAN_FIRE_v_to_slaves_2_m_arready = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_2_m_arready = 1'd1 ;

  // action method v_to_slaves_2_m_rvalid
  assign CAN_FIRE_v_to_slaves_2_m_rvalid = 1'd1 ;
  assign WILL_FIRE_v_to_slaves_2_m_rvalid = 1'd1 ;

  // value method v_to_slaves_2_m_rready
  assign v_to_slaves_2_rready = fabric_xactors_to_slaves_2_f_rd_data_FULL_N ;

  // submodule fabric_v_f_rd_err_user_0
  SizedFIFO0 #(.p1depth(32'd8),
	       .p2cntr_width(32'd4),
	       .guarded(1'd1)) fabric_v_f_rd_err_user_0(.RST(RST_N),
							.CLK(CLK),
							.ENQ(fabric_v_f_rd_err_user_0_ENQ),
							.DEQ(fabric_v_f_rd_err_user_0_DEQ),
							.CLR(fabric_v_f_rd_err_user_0_CLR),
							.FULL_N(fabric_v_f_rd_err_user_0_FULL_N),
							.EMPTY_N(fabric_v_f_rd_err_user_0_EMPTY_N));

  // submodule fabric_v_f_rd_mis_0
  SizedFIFO #(.p1width(32'd1),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) fabric_v_f_rd_mis_0(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(fabric_v_f_rd_mis_0_D_IN),
						  .ENQ(fabric_v_f_rd_mis_0_ENQ),
						  .DEQ(fabric_v_f_rd_mis_0_DEQ),
						  .CLR(fabric_v_f_rd_mis_0_CLR),
						  .D_OUT(fabric_v_f_rd_mis_0_D_OUT),
						  .FULL_N(fabric_v_f_rd_mis_0_FULL_N),
						  .EMPTY_N(fabric_v_f_rd_mis_0_EMPTY_N));

  // submodule fabric_v_f_rd_mis_1
  SizedFIFO #(.p1width(32'd1),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) fabric_v_f_rd_mis_1(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(fabric_v_f_rd_mis_1_D_IN),
						  .ENQ(fabric_v_f_rd_mis_1_ENQ),
						  .DEQ(fabric_v_f_rd_mis_1_DEQ),
						  .CLR(fabric_v_f_rd_mis_1_CLR),
						  .D_OUT(fabric_v_f_rd_mis_1_D_OUT),
						  .FULL_N(fabric_v_f_rd_mis_1_FULL_N),
						  .EMPTY_N(fabric_v_f_rd_mis_1_EMPTY_N));

  // submodule fabric_v_f_rd_mis_2
  SizedFIFO #(.p1width(32'd1),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) fabric_v_f_rd_mis_2(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(fabric_v_f_rd_mis_2_D_IN),
						  .ENQ(fabric_v_f_rd_mis_2_ENQ),
						  .DEQ(fabric_v_f_rd_mis_2_DEQ),
						  .CLR(fabric_v_f_rd_mis_2_CLR),
						  .D_OUT(fabric_v_f_rd_mis_2_D_OUT),
						  .FULL_N(fabric_v_f_rd_mis_2_FULL_N),
						  .EMPTY_N(fabric_v_f_rd_mis_2_EMPTY_N));

  // submodule fabric_v_f_rd_sjs_0
  SizedFIFO #(.p1width(32'd2),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) fabric_v_f_rd_sjs_0(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(fabric_v_f_rd_sjs_0_D_IN),
						  .ENQ(fabric_v_f_rd_sjs_0_ENQ),
						  .DEQ(fabric_v_f_rd_sjs_0_DEQ),
						  .CLR(fabric_v_f_rd_sjs_0_CLR),
						  .D_OUT(fabric_v_f_rd_sjs_0_D_OUT),
						  .FULL_N(fabric_v_f_rd_sjs_0_FULL_N),
						  .EMPTY_N(fabric_v_f_rd_sjs_0_EMPTY_N));

  // submodule fabric_v_f_wr_err_user_0
  SizedFIFO0 #(.p1depth(32'd8),
	       .p2cntr_width(32'd4),
	       .guarded(1'd1)) fabric_v_f_wr_err_user_0(.RST(RST_N),
							.CLK(CLK),
							.ENQ(fabric_v_f_wr_err_user_0_ENQ),
							.DEQ(fabric_v_f_wr_err_user_0_DEQ),
							.CLR(fabric_v_f_wr_err_user_0_CLR),
							.FULL_N(fabric_v_f_wr_err_user_0_FULL_N),
							.EMPTY_N(fabric_v_f_wr_err_user_0_EMPTY_N));

  // submodule fabric_v_f_wr_mis_0
  SizedFIFO #(.p1width(32'd1),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) fabric_v_f_wr_mis_0(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(fabric_v_f_wr_mis_0_D_IN),
						  .ENQ(fabric_v_f_wr_mis_0_ENQ),
						  .DEQ(fabric_v_f_wr_mis_0_DEQ),
						  .CLR(fabric_v_f_wr_mis_0_CLR),
						  .D_OUT(fabric_v_f_wr_mis_0_D_OUT),
						  .FULL_N(fabric_v_f_wr_mis_0_FULL_N),
						  .EMPTY_N(fabric_v_f_wr_mis_0_EMPTY_N));

  // submodule fabric_v_f_wr_mis_1
  SizedFIFO #(.p1width(32'd1),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) fabric_v_f_wr_mis_1(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(fabric_v_f_wr_mis_1_D_IN),
						  .ENQ(fabric_v_f_wr_mis_1_ENQ),
						  .DEQ(fabric_v_f_wr_mis_1_DEQ),
						  .CLR(fabric_v_f_wr_mis_1_CLR),
						  .D_OUT(fabric_v_f_wr_mis_1_D_OUT),
						  .FULL_N(fabric_v_f_wr_mis_1_FULL_N),
						  .EMPTY_N(fabric_v_f_wr_mis_1_EMPTY_N));

  // submodule fabric_v_f_wr_mis_2
  SizedFIFO #(.p1width(32'd1),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) fabric_v_f_wr_mis_2(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(fabric_v_f_wr_mis_2_D_IN),
						  .ENQ(fabric_v_f_wr_mis_2_ENQ),
						  .DEQ(fabric_v_f_wr_mis_2_DEQ),
						  .CLR(fabric_v_f_wr_mis_2_CLR),
						  .D_OUT(fabric_v_f_wr_mis_2_D_OUT),
						  .FULL_N(fabric_v_f_wr_mis_2_FULL_N),
						  .EMPTY_N(fabric_v_f_wr_mis_2_EMPTY_N));

  // submodule fabric_v_f_wr_sjs_0
  SizedFIFO #(.p1width(32'd2),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) fabric_v_f_wr_sjs_0(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(fabric_v_f_wr_sjs_0_D_IN),
						  .ENQ(fabric_v_f_wr_sjs_0_ENQ),
						  .DEQ(fabric_v_f_wr_sjs_0_DEQ),
						  .CLR(fabric_v_f_wr_sjs_0_CLR),
						  .D_OUT(fabric_v_f_wr_sjs_0_D_OUT),
						  .FULL_N(fabric_v_f_wr_sjs_0_FULL_N),
						  .EMPTY_N(fabric_v_f_wr_sjs_0_EMPTY_N));

  // submodule fabric_xactors_from_masters_0_f_rd_addr
  FIFO2 #(.width(32'd35),
	  .guarded(1'd1)) fabric_xactors_from_masters_0_f_rd_addr(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(fabric_xactors_from_masters_0_f_rd_addr_D_IN),
								  .ENQ(fabric_xactors_from_masters_0_f_rd_addr_ENQ),
								  .DEQ(fabric_xactors_from_masters_0_f_rd_addr_DEQ),
								  .CLR(fabric_xactors_from_masters_0_f_rd_addr_CLR),
								  .D_OUT(fabric_xactors_from_masters_0_f_rd_addr_D_OUT),
								  .FULL_N(fabric_xactors_from_masters_0_f_rd_addr_FULL_N),
								  .EMPTY_N(fabric_xactors_from_masters_0_f_rd_addr_EMPTY_N));

  // submodule fabric_xactors_from_masters_0_f_rd_data
  FIFO2 #(.width(32'd34),
	  .guarded(1'd1)) fabric_xactors_from_masters_0_f_rd_data(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(fabric_xactors_from_masters_0_f_rd_data_D_IN),
								  .ENQ(fabric_xactors_from_masters_0_f_rd_data_ENQ),
								  .DEQ(fabric_xactors_from_masters_0_f_rd_data_DEQ),
								  .CLR(fabric_xactors_from_masters_0_f_rd_data_CLR),
								  .D_OUT(fabric_xactors_from_masters_0_f_rd_data_D_OUT),
								  .FULL_N(fabric_xactors_from_masters_0_f_rd_data_FULL_N),
								  .EMPTY_N(fabric_xactors_from_masters_0_f_rd_data_EMPTY_N));

  // submodule fabric_xactors_from_masters_0_f_wr_addr
  FIFO2 #(.width(32'd35),
	  .guarded(1'd1)) fabric_xactors_from_masters_0_f_wr_addr(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(fabric_xactors_from_masters_0_f_wr_addr_D_IN),
								  .ENQ(fabric_xactors_from_masters_0_f_wr_addr_ENQ),
								  .DEQ(fabric_xactors_from_masters_0_f_wr_addr_DEQ),
								  .CLR(fabric_xactors_from_masters_0_f_wr_addr_CLR),
								  .D_OUT(fabric_xactors_from_masters_0_f_wr_addr_D_OUT),
								  .FULL_N(fabric_xactors_from_masters_0_f_wr_addr_FULL_N),
								  .EMPTY_N(fabric_xactors_from_masters_0_f_wr_addr_EMPTY_N));

  // submodule fabric_xactors_from_masters_0_f_wr_data
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) fabric_xactors_from_masters_0_f_wr_data(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(fabric_xactors_from_masters_0_f_wr_data_D_IN),
								  .ENQ(fabric_xactors_from_masters_0_f_wr_data_ENQ),
								  .DEQ(fabric_xactors_from_masters_0_f_wr_data_DEQ),
								  .CLR(fabric_xactors_from_masters_0_f_wr_data_CLR),
								  .D_OUT(fabric_xactors_from_masters_0_f_wr_data_D_OUT),
								  .FULL_N(fabric_xactors_from_masters_0_f_wr_data_FULL_N),
								  .EMPTY_N(fabric_xactors_from_masters_0_f_wr_data_EMPTY_N));

  // submodule fabric_xactors_from_masters_0_f_wr_resp
  FIFO2 #(.width(32'd2),
	  .guarded(1'd1)) fabric_xactors_from_masters_0_f_wr_resp(.RST(RST_N),
								  .CLK(CLK),
								  .D_IN(fabric_xactors_from_masters_0_f_wr_resp_D_IN),
								  .ENQ(fabric_xactors_from_masters_0_f_wr_resp_ENQ),
								  .DEQ(fabric_xactors_from_masters_0_f_wr_resp_DEQ),
								  .CLR(fabric_xactors_from_masters_0_f_wr_resp_CLR),
								  .D_OUT(fabric_xactors_from_masters_0_f_wr_resp_D_OUT),
								  .FULL_N(fabric_xactors_from_masters_0_f_wr_resp_FULL_N),
								  .EMPTY_N(fabric_xactors_from_masters_0_f_wr_resp_EMPTY_N));

  // submodule fabric_xactors_to_slaves_0_f_rd_addr
  FIFO2 #(.width(32'd35),
	  .guarded(1'd1)) fabric_xactors_to_slaves_0_f_rd_addr(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_0_f_rd_addr_D_IN),
							       .ENQ(fabric_xactors_to_slaves_0_f_rd_addr_ENQ),
							       .DEQ(fabric_xactors_to_slaves_0_f_rd_addr_DEQ),
							       .CLR(fabric_xactors_to_slaves_0_f_rd_addr_CLR),
							       .D_OUT(fabric_xactors_to_slaves_0_f_rd_addr_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_0_f_rd_addr_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_0_f_rd_addr_EMPTY_N));

  // submodule fabric_xactors_to_slaves_0_f_rd_data
  FIFO2 #(.width(32'd34),
	  .guarded(1'd1)) fabric_xactors_to_slaves_0_f_rd_data(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_0_f_rd_data_D_IN),
							       .ENQ(fabric_xactors_to_slaves_0_f_rd_data_ENQ),
							       .DEQ(fabric_xactors_to_slaves_0_f_rd_data_DEQ),
							       .CLR(fabric_xactors_to_slaves_0_f_rd_data_CLR),
							       .D_OUT(fabric_xactors_to_slaves_0_f_rd_data_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_0_f_rd_data_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_0_f_rd_data_EMPTY_N));

  // submodule fabric_xactors_to_slaves_0_f_wr_addr
  FIFO2 #(.width(32'd35),
	  .guarded(1'd1)) fabric_xactors_to_slaves_0_f_wr_addr(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_0_f_wr_addr_D_IN),
							       .ENQ(fabric_xactors_to_slaves_0_f_wr_addr_ENQ),
							       .DEQ(fabric_xactors_to_slaves_0_f_wr_addr_DEQ),
							       .CLR(fabric_xactors_to_slaves_0_f_wr_addr_CLR),
							       .D_OUT(fabric_xactors_to_slaves_0_f_wr_addr_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_0_f_wr_addr_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_0_f_wr_addr_EMPTY_N));

  // submodule fabric_xactors_to_slaves_0_f_wr_data
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) fabric_xactors_to_slaves_0_f_wr_data(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_0_f_wr_data_D_IN),
							       .ENQ(fabric_xactors_to_slaves_0_f_wr_data_ENQ),
							       .DEQ(fabric_xactors_to_slaves_0_f_wr_data_DEQ),
							       .CLR(fabric_xactors_to_slaves_0_f_wr_data_CLR),
							       .D_OUT(fabric_xactors_to_slaves_0_f_wr_data_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_0_f_wr_data_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_0_f_wr_data_EMPTY_N));

  // submodule fabric_xactors_to_slaves_0_f_wr_resp
  FIFO2 #(.width(32'd2),
	  .guarded(1'd1)) fabric_xactors_to_slaves_0_f_wr_resp(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_0_f_wr_resp_D_IN),
							       .ENQ(fabric_xactors_to_slaves_0_f_wr_resp_ENQ),
							       .DEQ(fabric_xactors_to_slaves_0_f_wr_resp_DEQ),
							       .CLR(fabric_xactors_to_slaves_0_f_wr_resp_CLR),
							       .D_OUT(fabric_xactors_to_slaves_0_f_wr_resp_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_0_f_wr_resp_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_0_f_wr_resp_EMPTY_N));

  // submodule fabric_xactors_to_slaves_1_f_rd_addr
  FIFO2 #(.width(32'd35),
	  .guarded(1'd1)) fabric_xactors_to_slaves_1_f_rd_addr(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_1_f_rd_addr_D_IN),
							       .ENQ(fabric_xactors_to_slaves_1_f_rd_addr_ENQ),
							       .DEQ(fabric_xactors_to_slaves_1_f_rd_addr_DEQ),
							       .CLR(fabric_xactors_to_slaves_1_f_rd_addr_CLR),
							       .D_OUT(fabric_xactors_to_slaves_1_f_rd_addr_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_1_f_rd_addr_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_1_f_rd_addr_EMPTY_N));

  // submodule fabric_xactors_to_slaves_1_f_rd_data
  FIFO2 #(.width(32'd34),
	  .guarded(1'd1)) fabric_xactors_to_slaves_1_f_rd_data(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_1_f_rd_data_D_IN),
							       .ENQ(fabric_xactors_to_slaves_1_f_rd_data_ENQ),
							       .DEQ(fabric_xactors_to_slaves_1_f_rd_data_DEQ),
							       .CLR(fabric_xactors_to_slaves_1_f_rd_data_CLR),
							       .D_OUT(fabric_xactors_to_slaves_1_f_rd_data_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_1_f_rd_data_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_1_f_rd_data_EMPTY_N));

  // submodule fabric_xactors_to_slaves_1_f_wr_addr
  FIFO2 #(.width(32'd35),
	  .guarded(1'd1)) fabric_xactors_to_slaves_1_f_wr_addr(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_1_f_wr_addr_D_IN),
							       .ENQ(fabric_xactors_to_slaves_1_f_wr_addr_ENQ),
							       .DEQ(fabric_xactors_to_slaves_1_f_wr_addr_DEQ),
							       .CLR(fabric_xactors_to_slaves_1_f_wr_addr_CLR),
							       .D_OUT(fabric_xactors_to_slaves_1_f_wr_addr_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_1_f_wr_addr_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_1_f_wr_addr_EMPTY_N));

  // submodule fabric_xactors_to_slaves_1_f_wr_data
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) fabric_xactors_to_slaves_1_f_wr_data(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_1_f_wr_data_D_IN),
							       .ENQ(fabric_xactors_to_slaves_1_f_wr_data_ENQ),
							       .DEQ(fabric_xactors_to_slaves_1_f_wr_data_DEQ),
							       .CLR(fabric_xactors_to_slaves_1_f_wr_data_CLR),
							       .D_OUT(fabric_xactors_to_slaves_1_f_wr_data_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_1_f_wr_data_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_1_f_wr_data_EMPTY_N));

  // submodule fabric_xactors_to_slaves_1_f_wr_resp
  FIFO2 #(.width(32'd2),
	  .guarded(1'd1)) fabric_xactors_to_slaves_1_f_wr_resp(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_1_f_wr_resp_D_IN),
							       .ENQ(fabric_xactors_to_slaves_1_f_wr_resp_ENQ),
							       .DEQ(fabric_xactors_to_slaves_1_f_wr_resp_DEQ),
							       .CLR(fabric_xactors_to_slaves_1_f_wr_resp_CLR),
							       .D_OUT(fabric_xactors_to_slaves_1_f_wr_resp_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_1_f_wr_resp_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_1_f_wr_resp_EMPTY_N));

  // submodule fabric_xactors_to_slaves_2_f_rd_addr
  FIFO2 #(.width(32'd35),
	  .guarded(1'd1)) fabric_xactors_to_slaves_2_f_rd_addr(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_2_f_rd_addr_D_IN),
							       .ENQ(fabric_xactors_to_slaves_2_f_rd_addr_ENQ),
							       .DEQ(fabric_xactors_to_slaves_2_f_rd_addr_DEQ),
							       .CLR(fabric_xactors_to_slaves_2_f_rd_addr_CLR),
							       .D_OUT(fabric_xactors_to_slaves_2_f_rd_addr_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_2_f_rd_addr_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_2_f_rd_addr_EMPTY_N));

  // submodule fabric_xactors_to_slaves_2_f_rd_data
  FIFO2 #(.width(32'd34),
	  .guarded(1'd1)) fabric_xactors_to_slaves_2_f_rd_data(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_2_f_rd_data_D_IN),
							       .ENQ(fabric_xactors_to_slaves_2_f_rd_data_ENQ),
							       .DEQ(fabric_xactors_to_slaves_2_f_rd_data_DEQ),
							       .CLR(fabric_xactors_to_slaves_2_f_rd_data_CLR),
							       .D_OUT(fabric_xactors_to_slaves_2_f_rd_data_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_2_f_rd_data_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_2_f_rd_data_EMPTY_N));

  // submodule fabric_xactors_to_slaves_2_f_wr_addr
  FIFO2 #(.width(32'd35),
	  .guarded(1'd1)) fabric_xactors_to_slaves_2_f_wr_addr(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_2_f_wr_addr_D_IN),
							       .ENQ(fabric_xactors_to_slaves_2_f_wr_addr_ENQ),
							       .DEQ(fabric_xactors_to_slaves_2_f_wr_addr_DEQ),
							       .CLR(fabric_xactors_to_slaves_2_f_wr_addr_CLR),
							       .D_OUT(fabric_xactors_to_slaves_2_f_wr_addr_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_2_f_wr_addr_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_2_f_wr_addr_EMPTY_N));

  // submodule fabric_xactors_to_slaves_2_f_wr_data
  FIFO2 #(.width(32'd36),
	  .guarded(1'd1)) fabric_xactors_to_slaves_2_f_wr_data(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_2_f_wr_data_D_IN),
							       .ENQ(fabric_xactors_to_slaves_2_f_wr_data_ENQ),
							       .DEQ(fabric_xactors_to_slaves_2_f_wr_data_DEQ),
							       .CLR(fabric_xactors_to_slaves_2_f_wr_data_CLR),
							       .D_OUT(fabric_xactors_to_slaves_2_f_wr_data_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_2_f_wr_data_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_2_f_wr_data_EMPTY_N));

  // submodule fabric_xactors_to_slaves_2_f_wr_resp
  FIFO2 #(.width(32'd2),
	  .guarded(1'd1)) fabric_xactors_to_slaves_2_f_wr_resp(.RST(RST_N),
							       .CLK(CLK),
							       .D_IN(fabric_xactors_to_slaves_2_f_wr_resp_D_IN),
							       .ENQ(fabric_xactors_to_slaves_2_f_wr_resp_ENQ),
							       .DEQ(fabric_xactors_to_slaves_2_f_wr_resp_DEQ),
							       .CLR(fabric_xactors_to_slaves_2_f_wr_resp_CLR),
							       .D_OUT(fabric_xactors_to_slaves_2_f_wr_resp_D_OUT),
							       .FULL_N(fabric_xactors_to_slaves_2_f_wr_resp_FULL_N),
							       .EMPTY_N(fabric_xactors_to_slaves_2_f_wr_resp_EMPTY_N));

  // rule RL_fabric_rl_wr_xaction_master_to_slave
  assign CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave =
	     fabric_xactors_from_masters_0_f_wr_addr_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_wr_data_EMPTY_N &&
	     fabric_xactors_to_slaves_0_f_wr_addr_FULL_N &&
	     fabric_xactors_to_slaves_0_f_wr_data_FULL_N &&
	     fabric_v_f_wr_mis_0_FULL_N &&
	     fabric_v_f_wr_sjs_0_FULL_N &&
	     (fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d17 ||
	      fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d18 ||
	      fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d19) &&
	     (fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d17 ||
	      !fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d18 &&
	      !fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d19) ;
  assign WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave ;

  // rule RL_fabric_rl_wr_xaction_master_to_slave_1
  assign CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 =
	     fabric_xactors_from_masters_0_f_wr_addr_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_wr_data_EMPTY_N &&
	     fabric_v_f_wr_sjs_0_FULL_N &&
	     fabric_xactors_to_slaves_1_f_wr_addr_FULL_N &&
	     fabric_xactors_to_slaves_1_f_wr_data_FULL_N &&
	     fabric_v_f_wr_mis_1_FULL_N &&
	     !fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d17 &&
	     fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d18 ;
  assign WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 ;

  // rule RL_fabric_rl_wr_xaction_master_to_slave_2
  assign CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 =
	     MUX_fabric_v_f_wr_sjs_0_enq_1__SEL_3 ;
  assign WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 =
	     MUX_fabric_v_f_wr_sjs_0_enq_1__SEL_3 ;

  // rule RL_fabric_rl_wr_xaction_no_such_slave
  assign CAN_FIRE_RL_fabric_rl_wr_xaction_no_such_slave =
	     fabric_xactors_from_masters_0_f_wr_addr_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_wr_data_EMPTY_N &&
	     fabric_v_f_wr_sjs_0_FULL_N &&
	     fabric_v_f_wr_err_user_0_FULL_N &&
	     !fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d17 &&
	     !fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d18 &&
	     !fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d19 ;
  assign WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_no_such_slave ;

  // rule RL_fabric_rl_rd_xaction_master_to_slave
  assign CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave =
	     fabric_xactors_from_masters_0_f_rd_addr_EMPTY_N &&
	     fabric_xactors_to_slaves_0_f_rd_addr_FULL_N &&
	     fabric_v_f_rd_mis_0_FULL_N &&
	     fabric_v_f_rd_sjs_0_FULL_N &&
	     (fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d87 ||
	      fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d88 ||
	      fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d89) &&
	     (fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d87 ||
	      !fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d88 &&
	      !fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d89) ;
  assign WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave =
	     CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave ;

  // rule RL_fabric_rl_rd_xaction_master_to_slave_1
  assign CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 =
	     fabric_xactors_from_masters_0_f_rd_addr_EMPTY_N &&
	     fabric_v_f_rd_sjs_0_FULL_N &&
	     fabric_xactors_to_slaves_1_f_rd_addr_FULL_N &&
	     fabric_v_f_rd_mis_1_FULL_N &&
	     !fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d87 &&
	     fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d88 ;
  assign WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 =
	     CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 ;

  // rule RL_fabric_rl_rd_xaction_master_to_slave_2
  assign CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 =
	     MUX_fabric_v_f_rd_sjs_0_enq_1__SEL_3 ;
  assign WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 =
	     MUX_fabric_v_f_rd_sjs_0_enq_1__SEL_3 ;

  // rule RL_fabric_rl_rd_xaction_no_such_slave
  assign CAN_FIRE_RL_fabric_rl_rd_xaction_no_such_slave =
	     fabric_xactors_from_masters_0_f_rd_addr_EMPTY_N &&
	     fabric_v_f_rd_sjs_0_FULL_N &&
	     fabric_v_f_rd_err_user_0_FULL_N &&
	     !fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d87 &&
	     !fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d88 &&
	     !fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d89 ;
  assign WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave =
	     CAN_FIRE_RL_fabric_rl_rd_xaction_no_such_slave ;

  // rule RL_fabric_rl_wr_resp_slave_to_master
  assign CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master =
	     fabric_v_f_wr_mis_0_EMPTY_N && fabric_v_f_wr_sjs_0_EMPTY_N &&
	     fabric_xactors_to_slaves_0_f_wr_resp_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_wr_resp_FULL_N &&
	     !fabric_v_f_wr_mis_0_D_OUT &&
	     fabric_v_f_wr_sjs_0_D_OUT == 2'd0 ;
  assign WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master =
	     CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master ;

  // rule RL_fabric_rl_wr_resp_slave_to_master_1
  assign CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 =
	     fabric_v_f_wr_sjs_0_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_wr_resp_FULL_N &&
	     fabric_v_f_wr_mis_1_EMPTY_N &&
	     fabric_xactors_to_slaves_1_f_wr_resp_EMPTY_N &&
	     !fabric_v_f_wr_mis_1_D_OUT &&
	     fabric_v_f_wr_sjs_0_D_OUT == 2'd1 ;
  assign WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 =
	     CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 ;

  // rule RL_fabric_rl_wr_resp_slave_to_master_2
  assign CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 =
	     MUX_fabric_xactors_from_masters_0_f_wr_resp_enq_1__SEL_3 ;
  assign WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 =
	     MUX_fabric_xactors_from_masters_0_f_wr_resp_enq_1__SEL_3 ;

  // rule RL_fabric_rl_wr_resp_err_to_master
  assign CAN_FIRE_RL_fabric_rl_wr_resp_err_to_master =
	     fabric_v_f_wr_sjs_0_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_wr_resp_FULL_N &&
	     fabric_v_f_wr_err_user_0_EMPTY_N &&
	     fabric_v_f_wr_sjs_0_D_OUT == 2'd3 ;
  assign WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master =
	     CAN_FIRE_RL_fabric_rl_wr_resp_err_to_master ;

  // rule RL_fabric_rl_rd_resp_slave_to_master
  assign CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master =
	     fabric_v_f_rd_mis_0_EMPTY_N && fabric_v_f_rd_sjs_0_EMPTY_N &&
	     fabric_xactors_to_slaves_0_f_rd_data_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_rd_data_FULL_N &&
	     !fabric_v_f_rd_mis_0_D_OUT &&
	     fabric_v_f_rd_sjs_0_D_OUT == 2'd0 ;
  assign WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master =
	     CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master ;

  // rule RL_fabric_rl_rd_resp_slave_to_master_1
  assign CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 =
	     fabric_v_f_rd_sjs_0_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_rd_data_FULL_N &&
	     fabric_v_f_rd_mis_1_EMPTY_N &&
	     fabric_xactors_to_slaves_1_f_rd_data_EMPTY_N &&
	     !fabric_v_f_rd_mis_1_D_OUT &&
	     fabric_v_f_rd_sjs_0_D_OUT == 2'd1 ;
  assign WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 =
	     CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 ;

  // rule RL_fabric_rl_rd_resp_slave_to_master_2
  assign CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 =
	     MUX_fabric_xactors_from_masters_0_f_rd_data_enq_1__SEL_3 ;
  assign WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 =
	     MUX_fabric_xactors_from_masters_0_f_rd_data_enq_1__SEL_3 ;

  // rule RL_fabric_rl_rd_resp_err_to_master
  assign CAN_FIRE_RL_fabric_rl_rd_resp_err_to_master =
	     fabric_v_f_rd_sjs_0_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_rd_data_FULL_N &&
	     fabric_v_f_rd_err_user_0_EMPTY_N &&
	     fabric_v_f_rd_sjs_0_D_OUT == 2'd3 ;
  assign WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master =
	     CAN_FIRE_RL_fabric_rl_rd_resp_err_to_master ;

  // rule RL_fabric_rl_reset
  assign CAN_FIRE_RL_fabric_rl_reset = fabric_rg_reset ;
  assign WILL_FIRE_RL_fabric_rl_reset = fabric_rg_reset ;

  // inputs to muxes for submodule ports
  assign MUX_fabric_v_f_rd_sjs_0_enq_1__SEL_3 =
	     fabric_xactors_from_masters_0_f_rd_addr_EMPTY_N &&
	     fabric_v_f_rd_sjs_0_FULL_N &&
	     fabric_xactors_to_slaves_2_f_rd_addr_FULL_N &&
	     fabric_v_f_rd_mis_2_FULL_N &&
	     !fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d87 &&
	     !fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d88 &&
	     fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d89 ;
  assign MUX_fabric_v_f_wr_sjs_0_enq_1__SEL_3 =
	     fabric_xactors_from_masters_0_f_wr_addr_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_wr_data_EMPTY_N &&
	     fabric_v_f_wr_sjs_0_FULL_N &&
	     fabric_xactors_to_slaves_2_f_wr_addr_FULL_N &&
	     fabric_xactors_to_slaves_2_f_wr_data_FULL_N &&
	     fabric_v_f_wr_mis_2_FULL_N &&
	     !fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d17 &&
	     !fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d18 &&
	     fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d19 ;
  assign MUX_fabric_xactors_from_masters_0_f_rd_data_enq_1__SEL_3 =
	     fabric_v_f_rd_sjs_0_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_rd_data_FULL_N &&
	     fabric_v_f_rd_mis_2_EMPTY_N &&
	     fabric_xactors_to_slaves_2_f_rd_data_EMPTY_N &&
	     !fabric_v_f_rd_mis_2_D_OUT &&
	     fabric_v_f_rd_sjs_0_D_OUT == 2'd2 ;
  assign MUX_fabric_xactors_from_masters_0_f_wr_resp_enq_1__SEL_3 =
	     fabric_v_f_wr_sjs_0_EMPTY_N &&
	     fabric_xactors_from_masters_0_f_wr_resp_FULL_N &&
	     fabric_v_f_wr_mis_2_EMPTY_N &&
	     fabric_xactors_to_slaves_2_f_wr_resp_EMPTY_N &&
	     !fabric_v_f_wr_mis_2_D_OUT &&
	     fabric_v_f_wr_sjs_0_D_OUT == 2'd2 ;

  // register fabric_cfg_verbosity
  assign fabric_cfg_verbosity_D_IN = set_verbosity_verbosity ;
  assign fabric_cfg_verbosity_EN = EN_set_verbosity ;

  // register fabric_rg_reset
  assign fabric_rg_reset_D_IN = !fabric_rg_reset ;
  assign fabric_rg_reset_EN = fabric_rg_reset || EN_reset ;

  // submodule fabric_v_f_rd_err_user_0
  assign fabric_v_f_rd_err_user_0_ENQ =
	     CAN_FIRE_RL_fabric_rl_rd_xaction_no_such_slave ;
  assign fabric_v_f_rd_err_user_0_DEQ =
	     CAN_FIRE_RL_fabric_rl_rd_resp_err_to_master ;
  assign fabric_v_f_rd_err_user_0_CLR = fabric_rg_reset ;

  // submodule fabric_v_f_rd_mis_0
  assign fabric_v_f_rd_mis_0_D_IN = 1'd0 ;
  assign fabric_v_f_rd_mis_0_ENQ =
	     CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave ;
  assign fabric_v_f_rd_mis_0_DEQ =
	     CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master ;
  assign fabric_v_f_rd_mis_0_CLR = fabric_rg_reset ;

  // submodule fabric_v_f_rd_mis_1
  assign fabric_v_f_rd_mis_1_D_IN = 1'd0 ;
  assign fabric_v_f_rd_mis_1_ENQ =
	     CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 ;
  assign fabric_v_f_rd_mis_1_DEQ =
	     CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 ;
  assign fabric_v_f_rd_mis_1_CLR = fabric_rg_reset ;

  // submodule fabric_v_f_rd_mis_2
  assign fabric_v_f_rd_mis_2_D_IN = 1'd0 ;
  assign fabric_v_f_rd_mis_2_ENQ = MUX_fabric_v_f_rd_sjs_0_enq_1__SEL_3 ;
  assign fabric_v_f_rd_mis_2_DEQ =
	     MUX_fabric_xactors_from_masters_0_f_rd_data_enq_1__SEL_3 ;
  assign fabric_v_f_rd_mis_2_CLR = fabric_rg_reset ;

  // submodule fabric_v_f_rd_sjs_0
  always@(WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave or
	  WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 or
	  WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 or
	  WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave:
	  fabric_v_f_rd_sjs_0_D_IN = 2'd0;
      WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1:
	  fabric_v_f_rd_sjs_0_D_IN = 2'd1;
      WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2:
	  fabric_v_f_rd_sjs_0_D_IN = 2'd2;
      WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave:
	  fabric_v_f_rd_sjs_0_D_IN = 2'd3;
      default: fabric_v_f_rd_sjs_0_D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign fabric_v_f_rd_sjs_0_ENQ =
	     WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave ||
	     WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 ||
	     WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 ||
	     WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave ;
  assign fabric_v_f_rd_sjs_0_DEQ =
	     WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 ||
	     WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master ||
	     WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 ||
	     WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master ;
  assign fabric_v_f_rd_sjs_0_CLR = fabric_rg_reset ;

  // submodule fabric_v_f_wr_err_user_0
  assign fabric_v_f_wr_err_user_0_ENQ =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_no_such_slave ;
  assign fabric_v_f_wr_err_user_0_DEQ =
	     CAN_FIRE_RL_fabric_rl_wr_resp_err_to_master ;
  assign fabric_v_f_wr_err_user_0_CLR = fabric_rg_reset ;

  // submodule fabric_v_f_wr_mis_0
  assign fabric_v_f_wr_mis_0_D_IN = 1'd0 ;
  assign fabric_v_f_wr_mis_0_ENQ =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave ;
  assign fabric_v_f_wr_mis_0_DEQ =
	     CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master ;
  assign fabric_v_f_wr_mis_0_CLR = fabric_rg_reset ;

  // submodule fabric_v_f_wr_mis_1
  assign fabric_v_f_wr_mis_1_D_IN = 1'd0 ;
  assign fabric_v_f_wr_mis_1_ENQ =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 ;
  assign fabric_v_f_wr_mis_1_DEQ =
	     CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 ;
  assign fabric_v_f_wr_mis_1_CLR = fabric_rg_reset ;

  // submodule fabric_v_f_wr_mis_2
  assign fabric_v_f_wr_mis_2_D_IN = 1'd0 ;
  assign fabric_v_f_wr_mis_2_ENQ = MUX_fabric_v_f_wr_sjs_0_enq_1__SEL_3 ;
  assign fabric_v_f_wr_mis_2_DEQ =
	     MUX_fabric_xactors_from_masters_0_f_wr_resp_enq_1__SEL_3 ;
  assign fabric_v_f_wr_mis_2_CLR = fabric_rg_reset ;

  // submodule fabric_v_f_wr_sjs_0
  always@(WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave or
	  WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 or
	  WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 or
	  WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave:
	  fabric_v_f_wr_sjs_0_D_IN = 2'd0;
      WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1:
	  fabric_v_f_wr_sjs_0_D_IN = 2'd1;
      WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2:
	  fabric_v_f_wr_sjs_0_D_IN = 2'd2;
      WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave:
	  fabric_v_f_wr_sjs_0_D_IN = 2'd3;
      default: fabric_v_f_wr_sjs_0_D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign fabric_v_f_wr_sjs_0_ENQ =
	     WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave ||
	     WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 ||
	     WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 ||
	     WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave ;
  assign fabric_v_f_wr_sjs_0_DEQ =
	     WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 ||
	     WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master ||
	     WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 ||
	     WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master ;
  assign fabric_v_f_wr_sjs_0_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_from_masters_0_f_rd_addr
  assign fabric_xactors_from_masters_0_f_rd_addr_D_IN =
	     { v_from_masters_0_araddr, v_from_masters_0_arprot } ;
  assign fabric_xactors_from_masters_0_f_rd_addr_ENQ =
	     v_from_masters_0_arvalid &&
	     fabric_xactors_from_masters_0_f_rd_addr_FULL_N ;
  assign fabric_xactors_from_masters_0_f_rd_addr_DEQ =
	     WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 ||
	     WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave ||
	     WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 ||
	     WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave ;
  assign fabric_xactors_from_masters_0_f_rd_addr_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_from_masters_0_f_rd_data
  always@(WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master or
	  fabric_xactors_to_slaves_0_f_rd_data_D_OUT or
	  WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 or
	  fabric_xactors_to_slaves_1_f_rd_data_D_OUT or
	  WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 or
	  fabric_xactors_to_slaves_2_f_rd_data_D_OUT or
	  WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master:
	  fabric_xactors_from_masters_0_f_rd_data_D_IN =
	      fabric_xactors_to_slaves_0_f_rd_data_D_OUT;
      WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1:
	  fabric_xactors_from_masters_0_f_rd_data_D_IN =
	      fabric_xactors_to_slaves_1_f_rd_data_D_OUT;
      WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2:
	  fabric_xactors_from_masters_0_f_rd_data_D_IN =
	      fabric_xactors_to_slaves_2_f_rd_data_D_OUT;
      WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master:
	  fabric_xactors_from_masters_0_f_rd_data_D_IN = 34'h300000000;
      default: fabric_xactors_from_masters_0_f_rd_data_D_IN =
		   34'h2AAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fabric_xactors_from_masters_0_f_rd_data_ENQ =
	     WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master ||
	     WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 ||
	     WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 ||
	     WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master ;
  assign fabric_xactors_from_masters_0_f_rd_data_DEQ =
	     v_from_masters_0_rready &&
	     fabric_xactors_from_masters_0_f_rd_data_EMPTY_N ;
  assign fabric_xactors_from_masters_0_f_rd_data_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_from_masters_0_f_wr_addr
  assign fabric_xactors_from_masters_0_f_wr_addr_D_IN =
	     { v_from_masters_0_awaddr, v_from_masters_0_awprot } ;
  assign fabric_xactors_from_masters_0_f_wr_addr_ENQ =
	     v_from_masters_0_awvalid &&
	     fabric_xactors_from_masters_0_f_wr_addr_FULL_N ;
  assign fabric_xactors_from_masters_0_f_wr_addr_DEQ =
	     WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 ||
	     WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave ||
	     WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 ||
	     WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave ;
  assign fabric_xactors_from_masters_0_f_wr_addr_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_from_masters_0_f_wr_data
  assign fabric_xactors_from_masters_0_f_wr_data_D_IN =
	     { v_from_masters_0_wdata, v_from_masters_0_wstrb } ;
  assign fabric_xactors_from_masters_0_f_wr_data_ENQ =
	     v_from_masters_0_wvalid &&
	     fabric_xactors_from_masters_0_f_wr_data_FULL_N ;
  assign fabric_xactors_from_masters_0_f_wr_data_DEQ =
	     WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 ||
	     WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave ||
	     WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 ||
	     WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave ;
  assign fabric_xactors_from_masters_0_f_wr_data_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_from_masters_0_f_wr_resp
  always@(WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master or
	  fabric_xactors_to_slaves_0_f_wr_resp_D_OUT or
	  WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 or
	  fabric_xactors_to_slaves_1_f_wr_resp_D_OUT or
	  WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 or
	  fabric_xactors_to_slaves_2_f_wr_resp_D_OUT or
	  WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master:
	  fabric_xactors_from_masters_0_f_wr_resp_D_IN =
	      fabric_xactors_to_slaves_0_f_wr_resp_D_OUT;
      WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1:
	  fabric_xactors_from_masters_0_f_wr_resp_D_IN =
	      fabric_xactors_to_slaves_1_f_wr_resp_D_OUT;
      WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2:
	  fabric_xactors_from_masters_0_f_wr_resp_D_IN =
	      fabric_xactors_to_slaves_2_f_wr_resp_D_OUT;
      WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master:
	  fabric_xactors_from_masters_0_f_wr_resp_D_IN = 2'd3;
      default: fabric_xactors_from_masters_0_f_wr_resp_D_IN =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign fabric_xactors_from_masters_0_f_wr_resp_ENQ =
	     WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master ||
	     WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 ||
	     WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 ||
	     WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master ;
  assign fabric_xactors_from_masters_0_f_wr_resp_DEQ =
	     v_from_masters_0_bready &&
	     fabric_xactors_from_masters_0_f_wr_resp_EMPTY_N ;
  assign fabric_xactors_from_masters_0_f_wr_resp_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_0_f_rd_addr
  assign fabric_xactors_to_slaves_0_f_rd_addr_D_IN =
	     { 20'd0, fabric_xactors_from_masters_0_f_rd_addr_D_OUT[14:0] } ;
  assign fabric_xactors_to_slaves_0_f_rd_addr_ENQ =
	     CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave ;
  assign fabric_xactors_to_slaves_0_f_rd_addr_DEQ =
	     fabric_xactors_to_slaves_0_f_rd_addr_EMPTY_N &&
	     v_to_slaves_0_arready ;
  assign fabric_xactors_to_slaves_0_f_rd_addr_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_0_f_rd_data
  assign fabric_xactors_to_slaves_0_f_rd_data_D_IN =
	     { v_to_slaves_0_rresp, v_to_slaves_0_rdata } ;
  assign fabric_xactors_to_slaves_0_f_rd_data_ENQ =
	     v_to_slaves_0_rvalid &&
	     fabric_xactors_to_slaves_0_f_rd_data_FULL_N ;
  assign fabric_xactors_to_slaves_0_f_rd_data_DEQ =
	     CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master ;
  assign fabric_xactors_to_slaves_0_f_rd_data_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_0_f_wr_addr
  assign fabric_xactors_to_slaves_0_f_wr_addr_D_IN =
	     { 20'd0, fabric_xactors_from_masters_0_f_wr_addr_D_OUT[14:0] } ;
  assign fabric_xactors_to_slaves_0_f_wr_addr_ENQ =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave ;
  assign fabric_xactors_to_slaves_0_f_wr_addr_DEQ =
	     fabric_xactors_to_slaves_0_f_wr_addr_EMPTY_N &&
	     v_to_slaves_0_awready ;
  assign fabric_xactors_to_slaves_0_f_wr_addr_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_0_f_wr_data
  assign fabric_xactors_to_slaves_0_f_wr_data_D_IN =
	     fabric_xactors_from_masters_0_f_wr_data_D_OUT ;
  assign fabric_xactors_to_slaves_0_f_wr_data_ENQ =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave ;
  assign fabric_xactors_to_slaves_0_f_wr_data_DEQ =
	     fabric_xactors_to_slaves_0_f_wr_data_EMPTY_N &&
	     v_to_slaves_0_wready ;
  assign fabric_xactors_to_slaves_0_f_wr_data_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_0_f_wr_resp
  assign fabric_xactors_to_slaves_0_f_wr_resp_D_IN = v_to_slaves_0_bresp ;
  assign fabric_xactors_to_slaves_0_f_wr_resp_ENQ =
	     v_to_slaves_0_bvalid &&
	     fabric_xactors_to_slaves_0_f_wr_resp_FULL_N ;
  assign fabric_xactors_to_slaves_0_f_wr_resp_DEQ =
	     CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master ;
  assign fabric_xactors_to_slaves_0_f_wr_resp_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_1_f_rd_addr
  assign fabric_xactors_to_slaves_1_f_rd_addr_D_IN =
	     fabric_xactors_to_slaves_0_f_rd_addr_D_IN ;
  assign fabric_xactors_to_slaves_1_f_rd_addr_ENQ =
	     CAN_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 ;
  assign fabric_xactors_to_slaves_1_f_rd_addr_DEQ =
	     fabric_xactors_to_slaves_1_f_rd_addr_EMPTY_N &&
	     v_to_slaves_1_arready ;
  assign fabric_xactors_to_slaves_1_f_rd_addr_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_1_f_rd_data
  assign fabric_xactors_to_slaves_1_f_rd_data_D_IN =
	     { v_to_slaves_1_rresp, v_to_slaves_1_rdata } ;
  assign fabric_xactors_to_slaves_1_f_rd_data_ENQ =
	     v_to_slaves_1_rvalid &&
	     fabric_xactors_to_slaves_1_f_rd_data_FULL_N ;
  assign fabric_xactors_to_slaves_1_f_rd_data_DEQ =
	     CAN_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 ;
  assign fabric_xactors_to_slaves_1_f_rd_data_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_1_f_wr_addr
  assign fabric_xactors_to_slaves_1_f_wr_addr_D_IN =
	     fabric_xactors_to_slaves_0_f_wr_addr_D_IN ;
  assign fabric_xactors_to_slaves_1_f_wr_addr_ENQ =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 ;
  assign fabric_xactors_to_slaves_1_f_wr_addr_DEQ =
	     fabric_xactors_to_slaves_1_f_wr_addr_EMPTY_N &&
	     v_to_slaves_1_awready ;
  assign fabric_xactors_to_slaves_1_f_wr_addr_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_1_f_wr_data
  assign fabric_xactors_to_slaves_1_f_wr_data_D_IN =
	     fabric_xactors_from_masters_0_f_wr_data_D_OUT ;
  assign fabric_xactors_to_slaves_1_f_wr_data_ENQ =
	     CAN_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 ;
  assign fabric_xactors_to_slaves_1_f_wr_data_DEQ =
	     fabric_xactors_to_slaves_1_f_wr_data_EMPTY_N &&
	     v_to_slaves_1_wready ;
  assign fabric_xactors_to_slaves_1_f_wr_data_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_1_f_wr_resp
  assign fabric_xactors_to_slaves_1_f_wr_resp_D_IN = v_to_slaves_1_bresp ;
  assign fabric_xactors_to_slaves_1_f_wr_resp_ENQ =
	     v_to_slaves_1_bvalid &&
	     fabric_xactors_to_slaves_1_f_wr_resp_FULL_N ;
  assign fabric_xactors_to_slaves_1_f_wr_resp_DEQ =
	     CAN_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 ;
  assign fabric_xactors_to_slaves_1_f_wr_resp_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_2_f_rd_addr
  assign fabric_xactors_to_slaves_2_f_rd_addr_D_IN =
	     fabric_xactors_to_slaves_0_f_rd_addr_D_IN ;
  assign fabric_xactors_to_slaves_2_f_rd_addr_ENQ =
	     MUX_fabric_v_f_rd_sjs_0_enq_1__SEL_3 ;
  assign fabric_xactors_to_slaves_2_f_rd_addr_DEQ =
	     fabric_xactors_to_slaves_2_f_rd_addr_EMPTY_N &&
	     v_to_slaves_2_arready ;
  assign fabric_xactors_to_slaves_2_f_rd_addr_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_2_f_rd_data
  assign fabric_xactors_to_slaves_2_f_rd_data_D_IN =
	     { v_to_slaves_2_rresp, v_to_slaves_2_rdata } ;
  assign fabric_xactors_to_slaves_2_f_rd_data_ENQ =
	     v_to_slaves_2_rvalid &&
	     fabric_xactors_to_slaves_2_f_rd_data_FULL_N ;
  assign fabric_xactors_to_slaves_2_f_rd_data_DEQ =
	     MUX_fabric_xactors_from_masters_0_f_rd_data_enq_1__SEL_3 ;
  assign fabric_xactors_to_slaves_2_f_rd_data_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_2_f_wr_addr
  assign fabric_xactors_to_slaves_2_f_wr_addr_D_IN =
	     fabric_xactors_to_slaves_0_f_wr_addr_D_IN ;
  assign fabric_xactors_to_slaves_2_f_wr_addr_ENQ =
	     MUX_fabric_v_f_wr_sjs_0_enq_1__SEL_3 ;
  assign fabric_xactors_to_slaves_2_f_wr_addr_DEQ =
	     fabric_xactors_to_slaves_2_f_wr_addr_EMPTY_N &&
	     v_to_slaves_2_awready ;
  assign fabric_xactors_to_slaves_2_f_wr_addr_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_2_f_wr_data
  assign fabric_xactors_to_slaves_2_f_wr_data_D_IN =
	     fabric_xactors_from_masters_0_f_wr_data_D_OUT ;
  assign fabric_xactors_to_slaves_2_f_wr_data_ENQ =
	     MUX_fabric_v_f_wr_sjs_0_enq_1__SEL_3 ;
  assign fabric_xactors_to_slaves_2_f_wr_data_DEQ =
	     fabric_xactors_to_slaves_2_f_wr_data_EMPTY_N &&
	     v_to_slaves_2_wready ;
  assign fabric_xactors_to_slaves_2_f_wr_data_CLR = fabric_rg_reset ;

  // submodule fabric_xactors_to_slaves_2_f_wr_resp
  assign fabric_xactors_to_slaves_2_f_wr_resp_D_IN = v_to_slaves_2_bresp ;
  assign fabric_xactors_to_slaves_2_f_wr_resp_ENQ =
	     v_to_slaves_2_bvalid &&
	     fabric_xactors_to_slaves_2_f_wr_resp_FULL_N ;
  assign fabric_xactors_to_slaves_2_f_wr_resp_DEQ =
	     MUX_fabric_xactors_from_masters_0_f_wr_resp_enq_1__SEL_3 ;
  assign fabric_xactors_to_slaves_2_f_wr_resp_CLR = fabric_rg_reset ;

  // remaining internal signals
  assign NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 =
	     fabric_cfg_verbosity > 4'd1 ;
  assign a_araddr__h7061 =
	     { 20'd0, fabric_xactors_from_masters_0_f_rd_addr_D_OUT[14:3] } ;
  assign a_awaddr__h5390 =
	     { 20'd0, fabric_xactors_from_masters_0_f_wr_addr_D_OUT[14:3] } ;
  assign fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d87 =
	     fabric_xactors_from_masters_0_f_rd_addr_D_OUT[34:3] <
	     32'h00001000 ;
  assign fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d88 =
	     fabric_xactors_from_masters_0_f_rd_addr_D_OUT[34:3] <
	     32'h00002000 ;
  assign fabric_xactors_from_masters_0_f_rd_addr_first__ETC___d89 =
	     fabric_xactors_from_masters_0_f_rd_addr_D_OUT[34:3] <
	     32'h00003000 ;
  assign fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d17 =
	     fabric_xactors_from_masters_0_f_wr_addr_D_OUT[34:3] <
	     32'h00001000 ;
  assign fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d18 =
	     fabric_xactors_from_masters_0_f_wr_addr_D_OUT[34:3] <
	     32'h00002000 ;
  assign fabric_xactors_from_masters_0_f_wr_addr_first__ETC___d19 =
	     fabric_xactors_from_masters_0_f_wr_addr_D_OUT[34:3] <
	     32'h00003000 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        fabric_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY 4'd0;
	fabric_rg_reset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      end
    else
      begin
        if (fabric_cfg_verbosity_EN)
	  fabric_cfg_verbosity <= `BSV_ASSIGNMENT_DELAY
	      fabric_cfg_verbosity_D_IN;
	if (fabric_rg_reset_EN)
	  fabric_rg_reset <= `BSV_ASSIGNMENT_DELAY fabric_rg_reset_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    fabric_cfg_verbosity = 4'hA;
    fabric_rg_reset = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h5584 = $stime;
	  #0;
	end
    v__h5578 = v__h5584 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: wr master [%0d] -> slave [%0d]",
		 v__h5578,
		 $signed(32'd0),
		 $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Addr { ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", a_awaddr__h5390);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_wr_addr_D_OUT[2:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_wr_data_D_OUT[35:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h",
	       fabric_xactors_from_masters_0_f_wr_data_D_OUT[3:0],
	       " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h6014 = $stime;
	  #0;
	end
    v__h6008 = v__h6014 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: wr master [%0d] -> slave [%0d]",
		 v__h6008,
		 $signed(32'd0),
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Addr { ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", a_awaddr__h5390);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_wr_addr_D_OUT[2:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_wr_data_D_OUT[35:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h",
	       fabric_xactors_from_masters_0_f_wr_data_D_OUT[3:0],
	       " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h6444 = $stime;
	  #0;
	end
    v__h6438 = v__h6444 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: wr master [%0d] -> slave [%0d]",
		 v__h6438,
		 $signed(32'd0),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Addr { ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", a_awaddr__h5390);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_wr_addr_D_OUT[2:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Data { ", "wdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_wr_data_D_OUT[35:4]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "wstrb: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h",
	       fabric_xactors_from_masters_0_f_wr_data_D_OUT[3:0],
	       " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h6806 = $stime;
	  #0;
	end
    v__h6800 = v__h6806 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: wr master [%0d] -> illegal addr",
		 v__h6800,
		 $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Addr { ", "awaddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_wr_addr_D_OUT[34:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "awprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_wr_addr_D_OUT[2:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "awuser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h7168 = $stime;
	  #0;
	end
    v__h7162 = v__h7168 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: rd master [%0d] -> slave [%0d]",
		 v__h7162,
		 $signed(32'd0),
		 $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Rd_Addr { ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", a_araddr__h7061);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_rd_addr_D_OUT[2:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h7487 = $stime;
	  #0;
	end
    v__h7481 = v__h7487 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: rd master [%0d] -> slave [%0d]",
		 v__h7481,
		 $signed(32'd0),
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Rd_Addr { ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", a_araddr__h7061);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_rd_addr_D_OUT[2:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h7806 = $stime;
	  #0;
	end
    v__h7800 = v__h7806 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: rd master [%0d] -> slave [%0d]",
		 v__h7800,
		 $signed(32'd0),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Rd_Addr { ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", a_araddr__h7061);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_rd_addr_D_OUT[2:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_master_to_slave_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h8090 = $stime;
	  #0;
	end
    v__h8084 = v__h8090 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: rd master [%0d] -> illegal addr",
		 v__h8084,
		 $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Rd_Addr { ", "araddr: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_rd_addr_D_OUT[34:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "arprot: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_from_masters_0_f_rd_addr_D_OUT[2:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "aruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_xaction_no_such_slave &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h8385 = $stime;
	  #0;
	end
    v__h8379 = v__h8385 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: wr master [%0d] <- slave [%0d]",
		 v__h8379,
		 $signed(32'd0),
		 $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Resp { ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_0_f_wr_resp_D_OUT == 2'd0)
	$write("AXI4_LITE_OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_0_f_wr_resp_D_OUT == 2'd1)
	$write("AXI4_LITE_EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_0_f_wr_resp_D_OUT == 2'd2)
	$write("AXI4_LITE_SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_0_f_wr_resp_D_OUT != 2'd0 &&
	  fabric_xactors_to_slaves_0_f_wr_resp_D_OUT != 2'd1 &&
	  fabric_xactors_to_slaves_0_f_wr_resp_D_OUT != 2'd2)
	$write("AXI4_LITE_DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h8665 = $stime;
	  #0;
	end
    v__h8659 = v__h8665 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: wr master [%0d] <- slave [%0d]",
		 v__h8659,
		 $signed(32'd0),
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Resp { ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_1_f_wr_resp_D_OUT == 2'd0)
	$write("AXI4_LITE_OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_1_f_wr_resp_D_OUT == 2'd1)
	$write("AXI4_LITE_EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_1_f_wr_resp_D_OUT == 2'd2)
	$write("AXI4_LITE_SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_1_f_wr_resp_D_OUT != 2'd0 &&
	  fabric_xactors_to_slaves_1_f_wr_resp_D_OUT != 2'd1 &&
	  fabric_xactors_to_slaves_1_f_wr_resp_D_OUT != 2'd2)
	$write("AXI4_LITE_DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h8945 = $stime;
	  #0;
	end
    v__h8939 = v__h8945 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: wr master [%0d] <- slave [%0d]",
		 v__h8939,
		 $signed(32'd0),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Resp { ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_2_f_wr_resp_D_OUT == 2'd0)
	$write("AXI4_LITE_OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_2_f_wr_resp_D_OUT == 2'd1)
	$write("AXI4_LITE_EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_2_f_wr_resp_D_OUT == 2'd2)
	$write("AXI4_LITE_SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_2_f_wr_resp_D_OUT != 2'd0 &&
	  fabric_xactors_to_slaves_2_f_wr_resp_D_OUT != 2'd1 &&
	  fabric_xactors_to_slaves_2_f_wr_resp_D_OUT != 2'd2)
	$write("AXI4_LITE_DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h9192 = $stime;
	  #0;
	end
    v__h9186 = v__h9192 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: wr master [%0d] <- error",
		 v__h9186,
		 $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Wr_Resp { ", "bresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_LITE_DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "buser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'h0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_wr_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h9494 = $stime;
	  #0;
	end
    v__h9488 = v__h9494 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: rd master [%0d] <- slave [%0d]",
		 v__h9488,
		 $signed(32'd0),
		 $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Rd_Data { ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_0_f_rd_data_D_OUT[33:32] == 2'd0)
	$write("AXI4_LITE_OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_0_f_rd_data_D_OUT[33:32] == 2'd1)
	$write("AXI4_LITE_EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_0_f_rd_data_D_OUT[33:32] == 2'd2)
	$write("AXI4_LITE_SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_0_f_rd_data_D_OUT[33:32] != 2'd0 &&
	  fabric_xactors_to_slaves_0_f_rd_data_D_OUT[33:32] != 2'd1 &&
	  fabric_xactors_to_slaves_0_f_rd_data_D_OUT[33:32] != 2'd2)
	$write("AXI4_LITE_DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_to_slaves_0_f_rd_data_D_OUT[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h9783 = $stime;
	  #0;
	end
    v__h9777 = v__h9783 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: rd master [%0d] <- slave [%0d]",
		 v__h9777,
		 $signed(32'd0),
		 $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Rd_Data { ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_1_f_rd_data_D_OUT[33:32] == 2'd0)
	$write("AXI4_LITE_OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_1_f_rd_data_D_OUT[33:32] == 2'd1)
	$write("AXI4_LITE_EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_1_f_rd_data_D_OUT[33:32] == 2'd2)
	$write("AXI4_LITE_SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_1_f_rd_data_D_OUT[33:32] != 2'd0 &&
	  fabric_xactors_to_slaves_1_f_rd_data_D_OUT[33:32] != 2'd1 &&
	  fabric_xactors_to_slaves_1_f_rd_data_D_OUT[33:32] != 2'd2)
	$write("AXI4_LITE_DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_to_slaves_1_f_rd_data_D_OUT[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_1 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h10072 = $stime;
	  #0;
	end
    v__h10066 = v__h10072 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: rd master [%0d] <- slave [%0d]",
		 v__h10066,
		 $signed(32'd0),
		 $signed(32'd2));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Rd_Data { ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_2_f_rd_data_D_OUT[33:32] == 2'd0)
	$write("AXI4_LITE_OKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_2_f_rd_data_D_OUT[33:32] == 2'd1)
	$write("AXI4_LITE_EXOKAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_2_f_rd_data_D_OUT[33:32] == 2'd2)
	$write("AXI4_LITE_SLVERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33 &&
	  fabric_xactors_to_slaves_2_f_rd_data_D_OUT[33:32] != 2'd0 &&
	  fabric_xactors_to_slaves_2_f_rd_data_D_OUT[33:32] != 2'd1 &&
	  fabric_xactors_to_slaves_2_f_rd_data_D_OUT[33:32] != 2'd2)
	$write("AXI4_LITE_DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", fabric_xactors_to_slaves_2_f_rd_data_D_OUT[31:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'd0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_slave_to_master_2 &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	begin
	  v__h10323 = $stime;
	  #0;
	end
    v__h10317 = v__h10323 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$display("%0d: AXI4_Lite_Fabric: rd master [%0d] <- error",
		 v__h10317,
		 $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("        ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_Lite_Rd_Data { ", "rresp: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("AXI4_LITE_DECERR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "rdata: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write(", ", "ruser: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("'h%h", 1'h0, " }");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_fabric_rl_rd_resp_err_to_master &&
	  NOT_fabric_cfg_verbosity_read__1_ULE_1_2___d33)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (fabric_rg_reset)
	begin
	  v__h3722 = $stime;
	  #0;
	end
    v__h3716 = v__h3722 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (fabric_rg_reset)
	$display("%0d: AXI4_Lite_Fabric.rl_reset", v__h3716);
  end
  // synopsys translate_on
endmodule  // mkAXI4_3dma
