# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import typing

class HiwonderImu:
    def __new__(cls,interface:str, baud_rate:int): ...
    def read_data(self) -> typing.Optional[tuple[list[float], list[float], list[float]]]:
        ...


class PyHexmoveImuData:
    x_angle: float
    y_angle: float
    z_angle: float
    x_velocity: float
    y_velocity: float
    z_velocity: float
    x_angle_offset: float
    y_angle_offset: float
    z_angle_offset: float
    accel_x: float
    accel_y: float
    accel_z: float
    qw: float
    qx: float
    qy: float
    qz: float

class PyHexmoveImuReader:
    def __new__(cls,interface:str, serial_number:int, model:int): ...
    def get_data(self) -> PyHexmoveImuData:
        ...

    def get_angles(self) -> tuple[float, float, float]:
        ...

    def get_velocities(self) -> tuple[float, float, float]:
        ...

    def get_accelerations(self) -> tuple[float, float, float]:
        ...

    def get_quaternion(self) -> tuple[float, float, float, float]:
        ...

    def zero_imu(self, duration_ms = ...,max_retries = ...,max_variance = ...) -> None:
        ...

    def stop(self) -> None:
        ...


