name: Build

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: fastapiusers
          POSTGRES_PASSWORD: fastapiuserspassword
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mariadb:
        image: mariadb
        ports:
          - 3306:3306
        env:
          MARIADB_ROOT_PASSWORD: fastapiuserspassword
          MARIADB_DATABASE: fastapiusers
          MARIADB_USER: fastapiusers
          MARIADB_PASSWORD: fastapiuserspassword

    strategy:
      fail-fast: false
      matrix:
        python_version: [3.9, '3.10', '3.11', '3.12', '3.13']
        database_url:
          [
            "sqlite+aiosqlite:///./test-fastapiusers.db",
            "postgresql+asyncpg://fastapiusers:fastapiuserspassword@localhost:5432/fastapiusers",
            "mysql+aiomysql://root:fastapiuserspassword@localhost:3306/fastapiusers",
          ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
          hatch env create
      - name: Lint and typecheck
        run: |
          hatch run lint-check
      - name: Test
        env:
          DATABASE_URL: ${{ matrix.database_url }}
        run: |
          hatch run test-cov-xml
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
      - name: Build and install it on system host
        run: |
          hatch build
          pip install dist/fastapi_users_db_sqlalchemy-*.whl
          python test_build.py

  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - name: Build and publish on PyPI
        env:
          HATCH_INDEX_USER: ${{ secrets.HATCH_INDEX_USER }}
          HATCH_INDEX_AUTH: ${{ secrets.HATCH_INDEX_AUTH }}
        run: |
          hatch build
          hatch publish
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          body: ${{ github.event.head_commit.message }}
          artifacts: dist/*.whl,dist/*.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
